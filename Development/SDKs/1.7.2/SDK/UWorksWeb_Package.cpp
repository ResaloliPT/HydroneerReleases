/**
 * Name: Hydroneer
 * Version: 1.7.2
 */

#include "../pch.h"

namespace CG
{
	// --------------------------------------------------
	// # Structs Functions
	// --------------------------------------------------
	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWeb.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWeb::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWeb");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C45F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.UpToDateCheckMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Version                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_UpToDateCheckMinimal(int32_t AppID, int32_t Version, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.UpToDateCheckMinimal");
		
		UUWorksInterfaceWebApps_UpToDateCheckMinimal_Params params {};
		params.AppID = AppID;
		params.Version = Version;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C45C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.UpToDateCheck
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebUpToDateCheck* UUWorksInterfaceWebApps::STATIC_UpToDateCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.UpToDateCheck");
		
		UUWorksInterfaceWebApps_UpToDateCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4300
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.SetAppBuildLiveMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BuildID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      BetaKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_SetAppBuildLiveMinimal(const class FString& Key, int32_t AppID, int32_t BuildID, const class FString& BetaKey, const class FString& Description, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.SetAppBuildLiveMinimal");
		
		UUWorksInterfaceWebApps_SetAppBuildLiveMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.BuildID = BuildID;
		params.BetaKey = BetaKey;
		params.Description = Description;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C42D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.SetAppBuildLive
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetAppBuildLive* UUWorksInterfaceWebApps::STATIC_SetAppBuildLive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.SetAppBuildLive");
		
		UUWorksInterfaceWebApps_SetAppBuildLive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4190
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetServersAtAddressMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Addr                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetServersAtAddressMinimal(const class FString& Addr, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetServersAtAddressMinimal");
		
		UUWorksInterfaceWebApps_GetServersAtAddressMinimal_Params params {};
		params.Addr = Addr;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4160
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetServersAtAddress
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetServersAtAddress* UUWorksInterfaceWebApps::STATIC_GetServersAtAddress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetServersAtAddress");
		
		UUWorksInterfaceWebApps_GetServersAtAddress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3F50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetServerListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Filter                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Limit                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetServerListMinimal(const class FString& Key, const class FString& Filter, int32_t Limit, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetServerListMinimal");
		
		UUWorksInterfaceWebApps_GetServerListMinimal_Params params {};
		params.Key = Key;
		params.Filter = Filter;
		params.Limit = Limit;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3F20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetServerList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetServerList* UUWorksInterfaceWebApps::STATIC_GetServerList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetServerList");
		
		UUWorksInterfaceWebApps_GetServerList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3DA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetPlayersBannedMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetPlayersBannedMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetPlayersBannedMinimal");
		
		UUWorksInterfaceWebApps_GetPlayersBannedMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3D70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetPlayersBanned
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPlayersBanned* UUWorksInterfaceWebApps::STATIC_GetPlayersBanned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetPlayersBanned");
		
		UUWorksInterfaceWebApps_GetPlayersBanned_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3A60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetCheatingReportsListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetCheatingReportsListMinimal(const class FString& Key, int32_t AppID, int32_t TimeBegin, int32_t TimeEnd, bool bIncludeReports, bool bIncludeBans, const class FString& ReportIDMin, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetCheatingReportsListMinimal");
		
		UUWorksInterfaceWebApps_GetCheatingReportsListMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeBegin = TimeBegin;
		params.TimeEnd = TimeEnd;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.ReportIDMin = ReportIDMin;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3A30
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetCheatingReportsList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetCheatingReportsList* UUWorksInterfaceWebApps::STATIC_GetCheatingReportsList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetCheatingReportsList");
		
		UUWorksInterfaceWebApps_GetCheatingReportsList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3980
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetAppListMinimal(const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppListMinimal");
		
		UUWorksInterfaceWebApps_GetAppListMinimal_Params params {};
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3950
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAppList* UUWorksInterfaceWebApps::STATIC_GetAppList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppList");
		
		UUWorksInterfaceWebApps_GetAppList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C37D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppDepotVersionsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetAppDepotVersionsMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppDepotVersionsMinimal");
		
		UUWorksInterfaceWebApps_GetAppDepotVersionsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C37A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppDepotVersions
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAppDepotVersions* UUWorksInterfaceWebApps::STATIC_GetAppDepotVersions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppDepotVersions");
		
		UUWorksInterfaceWebApps_GetAppDepotVersions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C35F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppBuildsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetAppBuildsMinimal(const class FString& Key, int32_t AppID, int32_t Count, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppBuildsMinimal");
		
		UUWorksInterfaceWebApps_GetAppBuildsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Count = Count;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C35C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppBuilds
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAppBuilds* UUWorksInterfaceWebApps::STATIC_GetAppBuilds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppBuilds");
		
		UUWorksInterfaceWebApps_GetAppBuilds_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3440
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppBetasMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebApps::STATIC_GetAppBetasMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppBetasMinimal");
		
		UUWorksInterfaceWebApps_GetAppBetasMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C3410
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebApps.GetAppBetas
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAppBetas* UUWorksInterfaceWebApps::STATIC_GetAppBetas()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebApps.GetAppBetas");
		
		UUWorksInterfaceWebApps_GetAppBetas_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebApps.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebApps::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebApps");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C48C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebBroadcast.PostGameDataFrameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      BroadcastID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      FrameData                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebBroadcast::STATIC_PostGameDataFrameMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& BroadcastID, const class FString& FrameData, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebBroadcast.PostGameDataFrameMinimal");
		
		UUWorksInterfaceWebBroadcast_PostGameDataFrameMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.BroadcastID = BroadcastID;
		params.FrameData = FrameData;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4890
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebBroadcast.PostGameDataFrame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebPostGameDataFrame* UUWorksInterfaceWebBroadcast::STATIC_PostGameDataFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebBroadcast.PostGameDataFrame");
		
		UUWorksInterfaceWebBroadcast_PostGameDataFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebBroadcast.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebBroadcast::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebBroadcast");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C68C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.StartSecureMultiplayerSessionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_StartSecureMultiplayerSessionMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.StartSecureMultiplayerSessionMinimal");
		
		UUWorksInterfaceWebCheatReporting_StartSecureMultiplayerSessionMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6890
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.StartSecureMultiplayerSession
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebStartSecureMultiplayerSession* UUWorksInterfaceWebCheatReporting::STATIC_StartSecureMultiplayerSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.StartSecureMultiplayerSession");
		
		UUWorksInterfaceWebCheatReporting_StartSecureMultiplayerSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6650
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestVacStatusForUserMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_RequestVacStatusForUserMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestVacStatusForUserMinimal");
		
		UUWorksInterfaceWebCheatReporting_RequestVacStatusForUserMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6620
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestVacStatusForUser
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRequestVacStatusForUser* UUWorksInterfaceWebCheatReporting::STATIC_RequestVacStatusForUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestVacStatusForUser");
		
		UUWorksInterfaceWebCheatReporting_RequestVacStatusForUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6310
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestPlayerGameBanMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ReportID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDelayBan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_RequestPlayerGameBanMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& ReportID, const class FString& CheatDescription, int32_t Duration, bool bDelayBan, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestPlayerGameBanMinimal");
		
		UUWorksInterfaceWebCheatReporting_RequestPlayerGameBanMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ReportID = ReportID;
		params.CheatDescription = CheatDescription;
		params.Duration = Duration;
		params.bDelayBan = bDelayBan;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C62E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestPlayerGameBan
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRequestPlayerGameBan* UUWorksInterfaceWebCheatReporting::STATIC_RequestPlayerGameBan()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RequestPlayerGameBan");
		
		UUWorksInterfaceWebCheatReporting_RequestPlayerGameBan_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C5ED0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportPlayerCheatingMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDReporter                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHeuristic                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDetection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayerReport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNoReportID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SuspicionStartTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Severity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_ReportPlayerCheatingMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& SteamIDReporter, int32_t AppData, bool bHeuristic, bool bDetection, bool bPlayerReport, bool bNoReportID, int32_t GameMode, int32_t SuspicionStartTime, int32_t Severity, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportPlayerCheatingMinimal");
		
		UUWorksInterfaceWebCheatReporting_ReportPlayerCheatingMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SteamIDReporter = SteamIDReporter;
		params.AppData = AppData;
		params.bHeuristic = bHeuristic;
		params.bDetection = bDetection;
		params.bPlayerReport = bPlayerReport;
		params.bNoReportID = bNoReportID;
		params.GameMode = GameMode;
		params.SuspicionStartTime = SuspicionStartTime;
		params.Severity = Severity;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C5EA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportPlayerCheating
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebReportPlayerCheating* UUWorksInterfaceWebCheatReporting::STATIC_ReportPlayerCheating()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportPlayerCheating");
		
		UUWorksInterfaceWebCheatReporting_ReportPlayerCheating_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C57C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportCheatDataMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PathAndFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      WebCheatURL                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeNow                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStarted                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStopped                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameProcessID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CheatProcessID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_ReportCheatDataMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& PathAndFileName, const class FString& WebCheatURL, const class FString& TimeNow, const class FString& TimeStarted, const class FString& TimeStopped, const class FString& CheatName, int32_t GameProcessID, int32_t CheatProcessID, const class FString& CheatParamA, const class FString& CheatParamB, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportCheatDataMinimal");
		
		UUWorksInterfaceWebCheatReporting_ReportCheatDataMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PathAndFileName = PathAndFileName;
		params.WebCheatURL = WebCheatURL;
		params.TimeNow = TimeNow;
		params.TimeStarted = TimeStarted;
		params.TimeStopped = TimeStopped;
		params.CheatName = CheatName;
		params.GameProcessID = GameProcessID;
		params.CheatProcessID = CheatProcessID;
		params.CheatParamA = CheatParamA;
		params.CheatParamB = CheatParamB;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C5790
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportCheatData
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebReportCheatData* UUWorksInterfaceWebCheatReporting::STATIC_ReportCheatData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.ReportCheatData");
		
		UUWorksInterfaceWebCheatReporting_ReportCheatData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C55E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RemovePlayerGameBanMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_RemovePlayerGameBanMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RemovePlayerGameBanMinimal");
		
		UUWorksInterfaceWebCheatReporting_RemovePlayerGameBanMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C55B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.RemovePlayerGameBan
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRemovePlayerGameBan* UUWorksInterfaceWebCheatReporting::STATIC_RemovePlayerGameBan()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.RemovePlayerGameBan");
		
		UUWorksInterfaceWebCheatReporting_RemovePlayerGameBan_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C5260
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.GetCheatingReportsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_GetCheatingReportsMinimal(const class FString& Key, int32_t AppID, int32_t TimeEnd, int32_t TimeBegin, const class FString& ReportIDMin, bool bIncludeReports, bool bIncludeBans, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.GetCheatingReportsMinimal");
		
		UUWorksInterfaceWebCheatReporting_GetCheatingReportsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeEnd = TimeEnd;
		params.TimeBegin = TimeBegin;
		params.ReportIDMin = ReportIDMin;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C5230
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.GetCheatingReports
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetCheatingReports* UUWorksInterfaceWebCheatReporting::STATIC_GetCheatingReports()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.GetCheatingReports");
		
		UUWorksInterfaceWebCheatReporting_GetCheatingReports_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4FF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.EndSecureMultiplayerSessionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCheatReporting::STATIC_EndSecureMultiplayerSessionMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.EndSecureMultiplayerSessionMinimal");
		
		UUWorksInterfaceWebCheatReporting_EndSecureMultiplayerSessionMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C4FC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCheatReporting.EndSecureMultiplayerSession
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebEndSecureMultiplayerSession* UUWorksInterfaceWebCheatReporting::STATIC_EndSecureMultiplayerSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCheatReporting.EndSecureMultiplayerSession");
		
		UUWorksInterfaceWebCheatReporting_EndSecureMultiplayerSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebCheatReporting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebCheatReporting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebCheatReporting");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6C20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCommunity.ReportAbuseMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDActor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDTarget                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      AbuseType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      ContentType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      GID                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebCommunity::STATIC_ReportAbuseMinimal(const class FString& Key, const struct FUWorksSteamID& SteamIDActor, const struct FUWorksSteamID& SteamIDTarget, int32_t AppID, unsigned char AbuseType, unsigned char ContentType, const class FString& Description, const class FString& GID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCommunity.ReportAbuseMinimal");
		
		UUWorksInterfaceWebCommunity_ReportAbuseMinimal_Params params {};
		params.Key = Key;
		params.SteamIDActor = SteamIDActor;
		params.SteamIDTarget = SteamIDTarget;
		params.AppID = AppID;
		params.AbuseType = AbuseType;
		params.ContentType = ContentType;
		params.Description = Description;
		params.GID = GID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C6BF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebCommunity.ReportAbuse
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebReportAbuse* UUWorksInterfaceWebCommunity::STATIC_ReportAbuse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebCommunity.ReportAbuse");
		
		UUWorksInterfaceWebCommunity_ReportAbuse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebCommunity.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebCommunity::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebCommunity");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8860
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersSummaryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeLastVisit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_GetTradeOffersSummaryMinimal(const class FString& Key, int32_t TimeLastVisit, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersSummaryMinimal");
		
		UUWorksInterfaceWebEcon_GetTradeOffersSummaryMinimal_Params params {};
		params.Key = Key;
		params.TimeLastVisit = TimeLastVisit;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8830
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersSummary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetTradeOffersSummary* UUWorksInterfaceWebEcon::STATIC_GetTradeOffersSummary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersSummary");
		
		UUWorksInterfaceWebEcon_GetTradeOffersSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C84D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetSentOffers                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetReceivedOffers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bActiveOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHistoricalOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeHistoricalCutoff                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_GetTradeOffersMinimal(const class FString& Key, bool bGetSentOffers, bool bGetReceivedOffers, bool bGetDescription, const class FString& Language, bool bActiveOnly, bool bHistoricalOnly, int32_t TimeHistoricalCutoff, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffersMinimal");
		
		UUWorksInterfaceWebEcon_GetTradeOffersMinimal_Params params {};
		params.Key = Key;
		params.bGetSentOffers = bGetSentOffers;
		params.bGetReceivedOffers = bGetReceivedOffers;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bActiveOnly = bActiveOnly;
		params.bHistoricalOnly = bHistoricalOnly;
		params.TimeHistoricalCutoff = TimeHistoricalCutoff;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C84A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffers
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetTradeOffers* UUWorksInterfaceWebEcon::STATIC_GetTradeOffers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffers");
		
		UUWorksInterfaceWebEcon_GetTradeOffers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8250
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOfferMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_GetTradeOfferMinimal(const class FString& Key, const class FString& TradeOfferID, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOfferMinimal");
		
		UUWorksInterfaceWebEcon_GetTradeOfferMinimal_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8220
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetTradeOffer* UUWorksInterfaceWebEcon::STATIC_GetTradeOffer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeOffer");
		
		UUWorksInterfaceWebEcon_GetTradeOffer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7E30
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeHistoryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxTrades                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartAfterTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StartAfterTradeID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNavigatingBack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeFailed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeTotal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_GetTradeHistoryMinimal(const class FString& Key, int32_t MaxTrades, int32_t StartAfterTime, const class FString& StartAfterTradeID, bool bNavigatingBack, bool bGetDescription, const class FString& Language, bool bIncludeFailed, bool bIncludeTotal, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeHistoryMinimal");
		
		UUWorksInterfaceWebEcon_GetTradeHistoryMinimal_Params params {};
		params.Key = Key;
		params.MaxTrades = MaxTrades;
		params.StartAfterTime = StartAfterTime;
		params.StartAfterTradeID = StartAfterTradeID;
		params.bNavigatingBack = bNavigatingBack;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bIncludeFailed = bIncludeFailed;
		params.bIncludeTotal = bIncludeTotal;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7E00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeHistory
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetTradeHistory* UUWorksInterfaceWebEcon::STATIC_GetTradeHistory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.GetTradeHistory");
		
		UUWorksInterfaceWebEcon_GetTradeHistory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7BC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushInventoryCacheMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_FlushInventoryCacheMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushInventoryCacheMinimal");
		
		UUWorksInterfaceWebEcon_FlushInventoryCacheMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7B90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushInventoryCache
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFlushInventoryCache* UUWorksInterfaceWebEcon::STATIC_FlushInventoryCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushInventoryCache");
		
		UUWorksInterfaceWebEcon_FlushInventoryCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7A10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushContextCacheMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_FlushContextCacheMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushContextCacheMinimal");
		
		UUWorksInterfaceWebEcon_FlushContextCacheMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C79E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushContextCache
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFlushContextCache* UUWorksInterfaceWebEcon::STATIC_FlushContextCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushContextCache");
		
		UUWorksInterfaceWebEcon_FlushContextCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7860
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushAssetAppearanceCacheMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_FlushAssetAppearanceCacheMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushAssetAppearanceCacheMinimal");
		
		UUWorksInterfaceWebEcon_FlushAssetAppearanceCacheMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7830
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.FlushAssetAppearanceCache
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFlushAssetAppearanceCache* UUWorksInterfaceWebEcon::STATIC_FlushAssetAppearanceCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.FlushAssetAppearanceCache");
		
		UUWorksInterfaceWebEcon_FlushAssetAppearanceCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7660
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.DeclineTradeOfferMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_DeclineTradeOfferMinimal(const class FString& Key, const class FString& TradeOfferID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.DeclineTradeOfferMinimal");
		
		UUWorksInterfaceWebEcon_DeclineTradeOfferMinimal_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7630
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.DeclineTradeOffer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebDeclineTradeOffer* UUWorksInterfaceWebEcon::STATIC_DeclineTradeOffer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.DeclineTradeOffer");
		
		UUWorksInterfaceWebEcon_DeclineTradeOffer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7460
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.CancelTradeOfferMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEcon::STATIC_CancelTradeOfferMinimal(const class FString& Key, const class FString& TradeOfferID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.CancelTradeOfferMinimal");
		
		UUWorksInterfaceWebEcon_CancelTradeOfferMinimal_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C7430
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEcon.CancelTradeOffer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCancelTradeOffer* UUWorksInterfaceWebEcon::STATIC_CancelTradeOffer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEcon.CancelTradeOffer");
		
		UUWorksInterfaceWebEcon_CancelTradeOffer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebEcon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebEcon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebEcon");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C92C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetPopularMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Rows                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            FilterAppID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconMarket::STATIC_GetPopularMinimal(const class FString& Key, const class FString& Language, int32_t Rows, int32_t Start, int32_t FilterAppID, int32_t ECurrency, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetPopularMinimal");
		
		UUWorksInterfaceWebEconMarket_GetPopularMinimal_Params params {};
		params.Key = Key;
		params.Language = Language;
		params.Rows = Rows;
		params.Start = Start;
		params.FilterAppID = FilterAppID;
		params.ECurrency = ECurrency;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9290
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetPopular
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPopular* UUWorksInterfaceWebEconMarket::STATIC_GetPopular()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetPopular");
		
		UUWorksInterfaceWebEconMarket_GetPopular_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9110
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetMarketEligibilityMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconMarket::STATIC_GetMarketEligibilityMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetMarketEligibilityMinimal");
		
		UUWorksInterfaceWebEconMarket_GetMarketEligibilityMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C90E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetMarketEligibility
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetMarketEligibility* UUWorksInterfaceWebEconMarket::STATIC_GetMarketEligibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetMarketEligibility");
		
		UUWorksInterfaceWebEconMarket_GetMarketEligibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8EE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetAssetIDMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ListingID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconMarket::STATIC_GetAssetIDMinimal(const class FString& Key, int32_t AppID, const class FString& ListingID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetAssetIDMinimal");
		
		UUWorksInterfaceWebEconMarket_GetAssetIDMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ListingID = ListingID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8EB0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.GetAssetID
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAssetID* UUWorksInterfaceWebEconMarket::STATIC_GetAssetID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.GetAssetID");
		
		UUWorksInterfaceWebEconMarket_GetAssetID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8CB0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.CancelAppListingsForUserMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bSynchronous                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconMarket::STATIC_CancelAppListingsForUserMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bSynchronous, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.CancelAppListingsForUserMinimal");
		
		UUWorksInterfaceWebEconMarket_CancelAppListingsForUserMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bSynchronous = bSynchronous;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C8C80
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconMarket.CancelAppListingsForUser
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCancelAppListingsForUser* UUWorksInterfaceWebEconMarket::STATIC_CancelAppListingsForUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconMarket.CancelAppListingsForUser");
		
		UUWorksInterfaceWebEconMarket_CancelAppListingsForUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebEconMarket.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebEconMarket::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebEconMarket");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CAE80
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.StartTradeMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyA                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyB                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_StartTradeMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& PartyA, const struct FUWorksSteamID& PartyB, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.StartTradeMinimal");
		
		UUWorksInterfaceWebEconomy_StartTradeMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.PartyA = PartyA;
		params.PartyB = PartyB;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CAE50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.StartTrade
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebStartTrade* UUWorksInterfaceWebEconomy::STATIC_StartTrade()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.StartTrade");
		
		UUWorksInterfaceWebEconomy_StartTrade_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA940
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.StartAssetTransactionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID0                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AssetQuantity0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Referrer                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bClientAuth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_StartAssetTransactionMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& AssetID0, int32_t AssetQuantity0, const class FString& Currency, const class FString& Language, const class FString& IPAddress, const class FString& Referrer, bool bClientAuth, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.StartAssetTransactionMinimal");
		
		UUWorksInterfaceWebEconomy_StartAssetTransactionMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.AssetID0 = AssetID0;
		params.AssetQuantity0 = AssetQuantity0;
		params.Currency = Currency;
		params.Language = Language;
		params.IPAddress = IPAddress;
		params.Referrer = Referrer;
		params.bClientAuth = bClientAuth;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA910
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.StartAssetTransaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebStartAssetTransaction* UUWorksInterfaceWebEconomy::STATIC_StartAssetTransaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.StartAssetTransaction");
		
		UUWorksInterfaceWebEconomy_StartAssetTransaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA790
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetMarketPricesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_GetMarketPricesMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetMarketPricesMinimal");
		
		UUWorksInterfaceWebEconomy_GetMarketPricesMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA760
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetMarketPrices
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetMarketPrices* UUWorksInterfaceWebEconomy::STATIC_GetMarketPrices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetMarketPrices");
		
		UUWorksInterfaceWebEconomy_GetMarketPrices_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA520
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetExportedAssetsForUserMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_GetExportedAssetsForUserMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetExportedAssetsForUserMinimal");
		
		UUWorksInterfaceWebEconomy_GetExportedAssetsForUserMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA4F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetExportedAssetsForUser
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetExportedAssetsForUser* UUWorksInterfaceWebEconomy::STATIC_GetExportedAssetsForUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetExportedAssetsForUser");
		
		UUWorksInterfaceWebEconomy_GetExportedAssetsForUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA260
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetPricesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_GetAssetPricesMinimal(const class FString& Key, int32_t AppID, const class FString& Currency, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetPricesMinimal");
		
		UUWorksInterfaceWebEconomy_GetAssetPricesMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Currency = Currency;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CA230
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetPrices
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAssetPrices* UUWorksInterfaceWebEconomy::STATIC_GetAssetPrices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetPrices");
		
		UUWorksInterfaceWebEconomy_GetAssetPrices_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9EE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetClassInfoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ClassCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ClassID0                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InstanceID0                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_GetAssetClassInfoMinimal(const class FString& Key, int32_t AppID, int32_t ClassCount, const class FString& ClassID0, const class FString& Language, const class FString& InstanceID0, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetClassInfoMinimal");
		
		UUWorksInterfaceWebEconomy_GetAssetClassInfoMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ClassCount = ClassCount;
		params.ClassID0 = ClassID0;
		params.Language = Language;
		params.InstanceID0 = InstanceID0;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9EB0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetClassInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAssetClassInfo* UUWorksInterfaceWebEconomy::STATIC_GetAssetClassInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.GetAssetClassInfo");
		
		UUWorksInterfaceWebEconomy_GetAssetClassInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9BF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.FinalizeAssetTransactionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      TxnID                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_FinalizeAssetTransactionMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& TxnID, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.FinalizeAssetTransactionMinimal");
		
		UUWorksInterfaceWebEconomy_FinalizeAssetTransactionMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TxnID = TxnID;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C9BC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.FinalizeAssetTransaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFinalizeAssetTransaction* UUWorksInterfaceWebEconomy::STATIC_FinalizeAssetTransaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.FinalizeAssetTransaction");
		
		UUWorksInterfaceWebEconomy_FinalizeAssetTransaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C99D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.CanTradeMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              TargetID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebEconomy::STATIC_CanTradeMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamID& TargetID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.CanTradeMinimal");
		
		UUWorksInterfaceWebEconomy_CanTradeMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TargetID = TargetID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006C99A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebEconomy.CanTrade
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCanTrade* UUWorksInterfaceWebEconomy::STATIC_CanTrade()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebEconomy.CanTrade");
		
		UUWorksInterfaceWebEconomy_CanTrade_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebEconomy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebEconomy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebEconomy");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CBC90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.SupportGetAssetHistoryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameInventory::STATIC_SupportGetAssetHistoryMinimal(const class FString& Key, int32_t AppID, const class FString& AssetID, const class FString& ContextID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.SupportGetAssetHistoryMinimal");
		
		UUWorksInterfaceWebGameInventory_SupportGetAssetHistoryMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.AssetID = AssetID;
		params.ContextID = ContextID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CBC60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.SupportGetAssetHistory
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSupportGetAssetHistory* UUWorksInterfaceWebGameInventory::STATIC_SupportGetAssetHistory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.SupportGetAssetHistory");
		
		UUWorksInterfaceWebGameInventory_SupportGetAssetHistory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB9A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.HistoryExecuteCommandsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ActorId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameInventory::STATIC_HistoryExecuteCommandsMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, const class FString& ActorId, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.HistoryExecuteCommandsMinimal");
		
		UUWorksInterfaceWebGameInventory_HistoryExecuteCommandsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.ActorId = ActorId;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB970
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.HistoryExecuteCommands
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebHistoryExecuteCommands* UUWorksInterfaceWebGameInventory::STATIC_HistoryExecuteCommands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.HistoryExecuteCommands");
		
		UUWorksInterfaceWebGameInventory_HistoryExecuteCommands_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB6C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.GetUserHistoryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameInventory::STATIC_GetUserHistoryMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, int32_t StartTime, int32_t EndTime, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.GetUserHistoryMinimal");
		
		UUWorksInterfaceWebGameInventory_GetUserHistoryMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.StartTime = StartTime;
		params.EndTime = EndTime;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB690
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.GetUserHistory
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUserHistory* UUWorksInterfaceWebGameInventory::STATIC_GetUserHistory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.GetUserHistory");
		
		UUWorksInterfaceWebGameInventory_GetUserHistory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB340
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.GetHistoryCommandDetailsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Arguments                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameInventory::STATIC_GetHistoryCommandDetailsMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& Command, const class FString& ContextID, const class FString& Arguments, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.GetHistoryCommandDetailsMinimal");
		
		UUWorksInterfaceWebGameInventory_GetHistoryCommandDetailsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.Command = Command;
		params.ContextID = ContextID;
		params.Arguments = Arguments;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CB310
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameInventory.GetHistoryCommandDetails
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetHistoryCommandDetails* UUWorksInterfaceWebGameInventory::STATIC_GetHistoryCommandDetails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameInventory.GetHistoryCommandDetails");
		
		UUWorksInterfaceWebGameInventory_GetHistoryCommandDetails_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebGameInventory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebGameInventory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebGameInventory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CD1F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.UpdateSessionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_UpdateSessionMinimal(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.UpdateSessionMinimal");
		
		UUWorksInterfaceWebGameNotifications_UpdateSessionMinimal_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CD1C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.UpdateSession
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebUpdateSession* UUWorksInterfaceWebGameNotifications::STATIC_UpdateSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.UpdateSession");
		
		UUWorksInterfaceWebGameNotifications_UpdateSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CD010
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.RequestNotificationsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_RequestNotificationsMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.RequestNotificationsMinimal");
		
		UUWorksInterfaceWebGameNotifications_RequestNotificationsMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CCFE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.RequestNotifications
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRequestNotifications* UUWorksInterfaceWebGameNotifications::STATIC_RequestNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.RequestNotifications");
		
		UUWorksInterfaceWebGameNotifications_RequestNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CCDA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.GetSessionDetailsForAppMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSessions                             Sessions                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_GetSessionDetailsForAppMinimal(const class FString& Key, const struct FUWorksSessions& Sessions, int32_t AppID, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.GetSessionDetailsForAppMinimal");
		
		UUWorksInterfaceWebGameNotifications_GetSessionDetailsForAppMinimal_Params params {};
		params.Key = Key;
		params.Sessions = Sessions;
		params.AppID = AppID;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CCD70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.GetSessionDetailsForApp
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetSessionDetailsForApp* UUWorksInterfaceWebGameNotifications::STATIC_GetSessionDetailsForApp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.GetSessionDetailsForApp");
		
		UUWorksInterfaceWebGameNotifications_GetSessionDetailsForApp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CCAA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.EnumerateSessionsForAppMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAllUserMessages                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAuthUserMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_EnumerateSessionsForAppMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bIncludeAllUserMessages, bool bIncludeAuthUserMessage, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.EnumerateSessionsForAppMinimal");
		
		UUWorksInterfaceWebGameNotifications_EnumerateSessionsForAppMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bIncludeAllUserMessages = bIncludeAllUserMessages;
		params.bIncludeAuthUserMessage = bIncludeAuthUserMessage;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CCA70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.EnumerateSessionsForApp
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebEnumerateSessionsForApp* UUWorksInterfaceWebGameNotifications::STATIC_EnumerateSessionsForApp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.EnumerateSessionsForApp");
		
		UUWorksInterfaceWebGameNotifications_EnumerateSessionsForApp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC830
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_DeleteSessionMinimal(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionMinimal");
		
		UUWorksInterfaceWebGameNotifications_DeleteSessionMinimal_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC620
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionBatchMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_DeleteSessionBatchMinimal(const class FString& Key, const class FString& SessionId, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionBatchMinimal");
		
		UUWorksInterfaceWebGameNotifications_DeleteSessionBatchMinimal_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC5F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionBatch
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebDeleteSessionBatch* UUWorksInterfaceWebGameNotifications::STATIC_DeleteSessionBatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSessionBatch");
		
		UUWorksInterfaceWebGameNotifications_DeleteSessionBatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC5C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSession
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebDeleteSession* UUWorksInterfaceWebGameNotifications::STATIC_DeleteSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.DeleteSession");
		
		UUWorksInterfaceWebGameNotifications_DeleteSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC310
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.CreateSessionMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Context                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameNotifications::STATIC_CreateSessionMinimal(const class FString& Key, int32_t AppID, const class FString& Context, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.CreateSessionMinimal");
		
		UUWorksInterfaceWebGameNotifications_CreateSessionMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Context = Context;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CC2E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameNotifications.CreateSession
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCreateSession* UUWorksInterfaceWebGameNotifications::STATIC_CreateSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameNotifications.CreateSession");
		
		UUWorksInterfaceWebGameNotifications_CreateSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebGameNotifications.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebGameNotifications::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebGameNotifications");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CEA40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.SetMemoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_SetMemoMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Memo, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.SetMemoMinimal");
		
		UUWorksInterfaceWebGameServers_SetMemoMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Memo = Memo;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CEA10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.SetMemo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetMemo* UUWorksInterfaceWebGameServers::STATIC_SetMemo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.SetMemo");
		
		UUWorksInterfaceWebGameServers_SetMemo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE810
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.SetBanStatusMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bBanned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BanSeconds                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_SetBanStatusMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bBanned, int32_t BanSeconds, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.SetBanStatusMinimal");
		
		UUWorksInterfaceWebGameServers_SetBanStatusMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bBanned = bBanned;
		params.BanSeconds = BanSeconds;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE7E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.SetBanStatus
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetBanStatus* UUWorksInterfaceWebGameServers::STATIC_SetBanStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.SetBanStatus");
		
		UUWorksInterfaceWebGameServers_SetBanStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE660
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.ResetLoginTokenMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_ResetLoginTokenMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.ResetLoginTokenMinimal");
		
		UUWorksInterfaceWebGameServers_ResetLoginTokenMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE630
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.ResetLoginToken
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebResetLoginToken* UUWorksInterfaceWebGameServers::STATIC_ResetLoginToken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.ResetLoginToken");
		
		UUWorksInterfaceWebGameServers_ResetLoginToken_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE460
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.QueryLoginTokenMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      LoginToken                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_QueryLoginTokenMinimal(const class FString& Key, const class FString& LoginToken, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.QueryLoginTokenMinimal");
		
		UUWorksInterfaceWebGameServers_QueryLoginTokenMinimal_Params params {};
		params.Key = Key;
		params.LoginToken = LoginToken;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE430
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.QueryLoginToken
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebQueryLoginToken* UUWorksInterfaceWebGameServers::STATIC_QueryLoginToken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.QueryLoginToken");
		
		UUWorksInterfaceWebGameServers_QueryLoginToken_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE260
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerSteamIDsByIPMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ServerIPs                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_GetServerSteamIDsByIPMinimal(const class FString& Key, const class FString& ServerIPs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerSteamIDsByIPMinimal");
		
		UUWorksInterfaceWebGameServers_GetServerSteamIDsByIPMinimal_Params params {};
		params.Key = Key;
		params.ServerIPs = ServerIPs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE230
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerSteamIDsByIP
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetServerSteamIDsByIP* UUWorksInterfaceWebGameServers::STATIC_GetServerSteamIDsByIP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerSteamIDsByIP");
		
		UUWorksInterfaceWebGameServers_GetServerSteamIDsByIP_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE0B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerIPsBySteamIDMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ServerSteamID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_GetServerIPsBySteamIDMinimal(const class FString& Key, const struct FUWorksSteamID& ServerSteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerIPsBySteamIDMinimal");
		
		UUWorksInterfaceWebGameServers_GetServerIPsBySteamIDMinimal_Params params {};
		params.Key = Key;
		params.ServerSteamID = ServerSteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CE080
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerIPsBySteamID
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetServerIPsBySteamID* UUWorksInterfaceWebGameServers::STATIC_GetServerIPsBySteamID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetServerIPsBySteamID");
		
		UUWorksInterfaceWebGameServers_GetServerIPsBySteamID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDF00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountPublicInfoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_GetAccountPublicInfoMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountPublicInfoMinimal");
		
		UUWorksInterfaceWebGameServers_GetAccountPublicInfoMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDED0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountPublicInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAccountPublicInfo* UUWorksInterfaceWebGameServers::STATIC_GetAccountPublicInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountPublicInfo");
		
		UUWorksInterfaceWebGameServers_GetAccountPublicInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDD90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_GetAccountListMinimal(const class FString& Key, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountListMinimal");
		
		UUWorksInterfaceWebGameServers_GetAccountListMinimal_Params params {};
		params.Key = Key;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDD60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAccountList* UUWorksInterfaceWebGameServers::STATIC_GetAccountList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.GetAccountList");
		
		UUWorksInterfaceWebGameServers_GetAccountList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDBE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.DeleteAccountMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_DeleteAccountMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.DeleteAccountMinimal");
		
		UUWorksInterfaceWebGameServers_DeleteAccountMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CDBB0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.DeleteAccount
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebDeleteAccount* UUWorksInterfaceWebGameServers::STATIC_DeleteAccount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.DeleteAccount");
		
		UUWorksInterfaceWebGameServers_DeleteAccount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CD9B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.CreateAccountMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServers::STATIC_CreateAccountMinimal(const class FString& Key, int32_t AppID, const class FString& Memo, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.CreateAccountMinimal");
		
		UUWorksInterfaceWebGameServers_CreateAccountMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Memo = Memo;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CD980
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServers.CreateAccount
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCreateAccount* UUWorksInterfaceWebGameServers::STATIC_CreateAccount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServers.CreateAccount");
		
		UUWorksInterfaceWebGameServers_CreateAccount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebGameServers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebGameServers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebGameServers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CEE00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServerStats.GetGameServerPlayerStatsForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeStart                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeEnd                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebGameServerStats::STATIC_GetGameServerPlayerStatsForGameMinimal(const class FString& Key, const struct FUWorksGameID& GameID, int32_t AppID, const class FString& RangeStart, const class FString& RangeEnd, int32_t MaxResults, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServerStats.GetGameServerPlayerStatsForGameMinimal");
		
		UUWorksInterfaceWebGameServerStats_GetGameServerPlayerStatsForGameMinimal_Params params {};
		params.Key = Key;
		params.GameID = GameID;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.MaxResults = MaxResults;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CEDD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebGameServerStats.GetGameServerPlayerStatsForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetGameServerPlayerStatsForGame* UUWorksInterfaceWebGameServerStats::STATIC_GetGameServerPlayerStatsForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebGameServerStats.GetGameServerPlayerStatsForGame");
		
		UUWorksInterfaceWebGameServerStats_GetGameServerPlayerStatsForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebGameServerStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebGameServerStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebGameServerStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D0D00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetQuantityMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_GetQuantityMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamItemDef& ItemDefID, bool bForce, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetQuantityMinimal");
		
		UUWorksInterfaceWebInventory_GetQuantityMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D0CD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetQuantity
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetQuantity* UUWorksInterfaceWebInventory::STATIC_GetQuantity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetQuantity");
		
		UUWorksInterfaceWebInventory_GetQuantity_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D0B50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetPriceSheetMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_GetPriceSheetMinimal(const class FString& Key, int32_t ECurrency, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetPriceSheetMinimal");
		
		UUWorksInterfaceWebInventory_GetPriceSheetMinimal_Params params {};
		params.Key = Key;
		params.ECurrency = ECurrency;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D0B20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetPriceSheet
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPriceSheet* UUWorksInterfaceWebInventory::STATIC_GetPriceSheet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetPriceSheet");
		
		UUWorksInterfaceWebInventory_GetPriceSheet_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D07D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetItemDefsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ModifiedSince                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefIDs                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 WorkshopIDs                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_GetItemDefsMinimal(const class FString& Key, int32_t AppID, const class FString& ModifiedSince, TArray<struct FUWorksSteamItemDef> ItemDefIDs, TArray<struct FUWorksSteamItemDef> WorkshopIDs, int32_t CacheMaxAgeSeconds, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetItemDefsMinimal");
		
		UUWorksInterfaceWebInventory_GetItemDefsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ModifiedSince = ModifiedSince;
		params.ItemDefIDs = ItemDefIDs;
		params.WorkshopIDs = WorkshopIDs;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D07A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetItemDefs
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetItemDefs* UUWorksInterfaceWebInventory::STATIC_GetItemDefs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetItemDefs");
		
		UUWorksInterfaceWebInventory_GetItemDefs_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D05F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetInventoryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_GetInventoryMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetInventoryMinimal");
		
		UUWorksInterfaceWebInventory_GetInventoryMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D05C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.GetInventory
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetInventory* UUWorksInterfaceWebInventory::STATIC_GetInventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.GetInventory");
		
		UUWorksInterfaceWebInventory_GetInventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D02C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.ExchangeItemMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemInstanceID>          MaterialsItemID                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    MaterialsQuantity                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         OutputItemDefID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_ExchangeItemMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemInstanceID> MaterialsItemID, TArray<int32_t> MaterialsQuantity, const struct FUWorksSteamItemDef& OutputItemDefID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.ExchangeItemMinimal");
		
		UUWorksInterfaceWebInventory_ExchangeItemMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.MaterialsItemID = MaterialsItemID;
		params.MaterialsQuantity = MaterialsQuantity;
		params.OutputItemDefID = OutputItemDefID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D0290
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.ExchangeItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebExchangeItem* UUWorksInterfaceWebInventory::STATIC_ExchangeItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.ExchangeItem");
		
		UUWorksInterfaceWebInventory_ExchangeItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CFFD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.ConsumeItemMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemInstanceID                  itemId                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Quantity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_ConsumeItemMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemInstanceID& itemId, int32_t Quantity, const struct FUWorksSteamID& SteamID, const class FString& RequestID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.ConsumeItemMinimal");
		
		UUWorksInterfaceWebInventory_ConsumeItemMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.Quantity = Quantity;
		params.SteamID = SteamID;
		params.RequestID = RequestID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CFFA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.ConsumeItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebConsumeItem* UUWorksInterfaceWebInventory::STATIC_ConsumeItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.ConsumeItem");
		
		UUWorksInterfaceWebInventory_ConsumeItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CFD10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.ConsolidateMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_ConsolidateMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemDef> ItemDefID, bool bForce, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.ConsolidateMinimal");
		
		UUWorksInterfaceWebInventory_ConsolidateMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CFCE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.Consolidate
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebConsolidate* UUWorksInterfaceWebInventory::STATIC_Consolidate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.Consolidate");
		
		UUWorksInterfaceWebInventory_Consolidate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CF980
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.AddPromoItemMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_AddPromoItemMinimal(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemDef& ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.AddPromoItemMinimal");
		
		UUWorksInterfaceWebInventory_AddPromoItemMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CF950
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.AddPromoItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebAddPromoItem* UUWorksInterfaceWebInventory::STATIC_AddPromoItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.AddPromoItem");
		
		UUWorksInterfaceWebInventory_AddPromoItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CF5B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.AddItemMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebInventory::STATIC_AddItemMinimal(const class FString& Key, int32_t AppID, TArray<struct FUWorksSteamItemDef> ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.AddItemMinimal");
		
		UUWorksInterfaceWebInventory_AddItemMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006CF580
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebInventory.AddItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebAddItem* UUWorksInterfaceWebInventory::STATIC_AddItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebInventory.AddItem");
		
		UUWorksInterfaceWebInventory_AddItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebInventory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebInventory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebInventory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1F90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.SetLeaderboardScoreMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ScoreMethod                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              Details                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_SetLeaderboardScoreMinimal(const class FString& Key, int32_t AppID, int32_t LeaderboardID, const struct FUWorksSteamID& SteamID, int32_t score, const class FString& ScoreMethod, TArray<unsigned char> Details, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.SetLeaderboardScoreMinimal");
		
		UUWorksInterfaceWebLeaderboards_SetLeaderboardScoreMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		params.SteamID = SteamID;
		params.score = score;
		params.ScoreMethod = ScoreMethod;
		params.Details = Details;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1F60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.SetLeaderboardScore
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetLeaderboardScore* UUWorksInterfaceWebLeaderboards::STATIC_SetLeaderboardScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.SetLeaderboardScore");
		
		UUWorksInterfaceWebLeaderboards_SetLeaderboardScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1DB0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.ResetLeaderboardMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_ResetLeaderboardMinimal(const class FString& Key, int32_t AppID, int32_t LeaderboardID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.ResetLeaderboardMinimal");
		
		UUWorksInterfaceWebLeaderboards_ResetLeaderboardMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1D80
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.ResetLeaderboard
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebResetLeaderboard* UUWorksInterfaceWebLeaderboards::STATIC_ResetLeaderboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.ResetLeaderboard");
		
		UUWorksInterfaceWebLeaderboards_ResetLeaderboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1C00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardsForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_GetLeaderboardsForGameMinimal(const class FString& Key, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardsForGameMinimal");
		
		UUWorksInterfaceWebLeaderboards_GetLeaderboardsForGameMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1BD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardsForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetLeaderboardsForGame* UUWorksInterfaceWebLeaderboards::STATIC_GetLeaderboardsForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardsForGame");
		
		UUWorksInterfaceWebLeaderboards_GetLeaderboardsForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1920
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardEntriesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeEnd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DataRequest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_GetLeaderboardEntriesMinimal(const class FString& Key, int32_t AppID, int32_t RangeStart, int32_t RangeEnd, int32_t LeaderboardID, int32_t DataRequest, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardEntriesMinimal");
		
		UUWorksInterfaceWebLeaderboards_GetLeaderboardEntriesMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.LeaderboardID = LeaderboardID;
		params.DataRequest = DataRequest;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D18F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardEntries
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetLeaderboardEntries* UUWorksInterfaceWebLeaderboards::STATIC_GetLeaderboardEntries()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.GetLeaderboardEntries");
		
		UUWorksInterfaceWebLeaderboards_GetLeaderboardEntries_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D1500
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.FindOrCreateLeaderboardMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SortMethod                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCreateIfNotFound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyTrustedWrites                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyFriendsReads                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_FindOrCreateLeaderboardMinimal(const class FString& Key, int32_t AppID, const class FString& Name, const class FString& SortMethod, const class FString& DisplayType, bool bCreateIfNotFound, bool bOnlyTrustedWrites, bool bOnlyFriendsReads, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.FindOrCreateLeaderboardMinimal");
		
		UUWorksInterfaceWebLeaderboards_FindOrCreateLeaderboardMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		params.SortMethod = SortMethod;
		params.DisplayType = DisplayType;
		params.bCreateIfNotFound = bCreateIfNotFound;
		params.bOnlyTrustedWrites = bOnlyTrustedWrites;
		params.bOnlyFriendsReads = bOnlyFriendsReads;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D14D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.FindOrCreateLeaderboard
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFindOrCreateLeaderboard* UUWorksInterfaceWebLeaderboards::STATIC_FindOrCreateLeaderboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.FindOrCreateLeaderboard");
		
		UUWorksInterfaceWebLeaderboards_FindOrCreateLeaderboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D12D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.DeleteLeaderboardMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebLeaderboards::STATIC_DeleteLeaderboardMinimal(const class FString& Key, int32_t AppID, const class FString& Name, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.DeleteLeaderboardMinimal");
		
		UUWorksInterfaceWebLeaderboards_DeleteLeaderboardMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D12A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebLeaderboards.DeleteLeaderboard
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebDeleteLeaderboard* UUWorksInterfaceWebLeaderboards::STATIC_DeleteLeaderboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebLeaderboards.DeleteLeaderboard");
		
		UUWorksInterfaceWebLeaderboards_DeleteLeaderboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebLeaderboards.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebLeaderboards::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebLeaderboards");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5040
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.RefundTxnMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_RefundTxnMinimal(const class FString& Key, const class FString& OrderID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.RefundTxnMinimal");
		
		UUWorksInterfaceWebMicroTxn_RefundTxnMinimal_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5010
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.RefundTxn
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRefundTxn* UUWorksInterfaceWebMicroTxn::STATIC_RefundTxn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.RefundTxn");
		
		UUWorksInterfaceWebMicroTxn_RefundTxn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D4D80
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.QueryTxnMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TransID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_QueryTxnMinimal(const class FString& Key, int32_t AppID, const class FString& OrderID, const class FString& TransID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.QueryTxnMinimal");
		
		UUWorksInterfaceWebMicroTxn_QueryTxnMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.OrderID = OrderID;
		params.TransID = TransID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D4D50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.QueryTxn
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebQueryTxn* UUWorksInterfaceWebMicroTxn::STATIC_QueryTxn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.QueryTxn");
		
		UUWorksInterfaceWebMicroTxn_QueryTxn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D49C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.ProcessAgreementMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_ProcessAgreementMinimal(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, int32_t Amount, const class FString& Currency, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.ProcessAgreementMinimal");
		
		UUWorksInterfaceWebMicroTxn_ProcessAgreementMinimal_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.Amount = Amount;
		params.Currency = Currency;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D4990
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.ProcessAgreement
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebProcessAgreement* UUWorksInterfaceWebMicroTxn::STATIC_ProcessAgreement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.ProcessAgreement");
		
		UUWorksInterfaceWebMicroTxn_ProcessAgreement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D3650
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.InitTxnMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 itemIds                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Quantities                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Amounts                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Descriptions                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Categories                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AssociatedBundles                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BillingTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              StartDates                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              EndDates                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Periods                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Frequencies                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RecurringAmounts                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BundleCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleIDs                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleQuantities                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleDescriptions                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleCategories                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksUserSession                       UserSession                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_InitTxnMinimal(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ItemCount, const class FString& Language, const class FString& Currency, TArray<struct FUWorksSteamItemDef> itemIds, TArray<int32_t> Quantities, TArray<int32_t> Amounts, TArray<class FString> Descriptions, TArray<class FString> Categories, TArray<int32_t> AssociatedBundles, TArray<class FString> BillingTypes, TArray<class FString> StartDates, TArray<class FString> EndDates, TArray<class FString> Periods, TArray<int32_t> Frequencies, TArray<class FString> RecurringAmounts, int32_t BundleCount, TArray<int32_t> BundleIDs, TArray<int32_t> BundleQuantities, TArray<class FString> BundleDescriptions, TArray<class FString> BundleCategories, UWorksWeb_EUWorksUserSession UserSession, const class FString& IPAddress, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.InitTxnMinimal");
		
		UUWorksInterfaceWebMicroTxn_InitTxnMinimal_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ItemCount = ItemCount;
		params.Language = Language;
		params.Currency = Currency;
		params.itemIds = itemIds;
		params.Quantities = Quantities;
		params.Amounts = Amounts;
		params.Descriptions = Descriptions;
		params.Categories = Categories;
		params.AssociatedBundles = AssociatedBundles;
		params.BillingTypes = BillingTypes;
		params.StartDates = StartDates;
		params.EndDates = EndDates;
		params.Periods = Periods;
		params.Frequencies = Frequencies;
		params.RecurringAmounts = RecurringAmounts;
		params.BundleCount = BundleCount;
		params.BundleIDs = BundleIDs;
		params.BundleQuantities = BundleQuantities;
		params.BundleDescriptions = BundleDescriptions;
		params.BundleCategories = BundleCategories;
		params.UserSession = UserSession;
		params.IPAddress = IPAddress;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D3620
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.InitTxn
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebInitTxn* UUWorksInterfaceWebMicroTxn::STATIC_InitTxn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.InitTxn");
		
		UUWorksInterfaceWebMicroTxn_InitTxn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D3410
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserInfoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_GetUserInfoMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& IPAddress, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserInfoMinimal");
		
		UUWorksInterfaceWebMicroTxn_GetUserInfoMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.IPAddress = IPAddress;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D33E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUserInfo* UUWorksInterfaceWebMicroTxn::STATIC_GetUserInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserInfo");
		
		UUWorksInterfaceWebMicroTxn_GetUserInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D3230
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserAgreementInfoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_GetUserAgreementInfoMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserAgreementInfoMinimal");
		
		UUWorksInterfaceWebMicroTxn_GetUserAgreementInfoMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D3200
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserAgreementInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUserAgreementInfo* UUWorksInterfaceWebMicroTxn::STATIC_GetUserAgreementInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetUserAgreementInfo");
		
		UUWorksInterfaceWebMicroTxn_GetUserAgreementInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2F80
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetReportMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Time                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksReportType                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_GetReportMinimal(const class FString& Key, int32_t AppID, const class FString& Time, UWorksWeb_EUWorksReportType Type, int32_t MaxResults, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetReportMinimal");
		
		UUWorksInterfaceWebMicroTxn_GetReportMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Time = Time;
		params.Type = Type;
		params.MaxResults = MaxResults;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2F50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetReport
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetReport* UUWorksInterfaceWebMicroTxn::STATIC_GetReport()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.GetReport");
		
		UUWorksInterfaceWebMicroTxn_GetReport_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2D40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.FinalizeTxnMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_FinalizeTxnMinimal(const class FString& Key, const class FString& OrderID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.FinalizeTxnMinimal");
		
		UUWorksInterfaceWebMicroTxn_FinalizeTxnMinimal_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2D10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.FinalizeTxn
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebFinalizeTxn* UUWorksInterfaceWebMicroTxn::STATIC_FinalizeTxn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.FinalizeTxn");
		
		UUWorksInterfaceWebMicroTxn_FinalizeTxn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2AD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.CancelAgreementMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_CancelAgreementMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.CancelAgreementMinimal");
		
		UUWorksInterfaceWebMicroTxn_CancelAgreementMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D2AA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.CancelAgreement
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCancelAgreement* UUWorksInterfaceWebMicroTxn::STATIC_CancelAgreement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.CancelAgreement");
		
		UUWorksInterfaceWebMicroTxn_CancelAgreement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D27E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.AdjustAgreementMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NextProcessDate                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebMicroTxn::STATIC_AdjustAgreementMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, const class FString& NextProcessDate, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.AdjustAgreementMinimal");
		
		UUWorksInterfaceWebMicroTxn_AdjustAgreementMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.NextProcessDate = NextProcessDate;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D27B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebMicroTxn.AdjustAgreement
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebAdjustAgreement* UUWorksInterfaceWebMicroTxn::STATIC_AdjustAgreement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebMicroTxn.AdjustAgreement");
		
		UUWorksInterfaceWebMicroTxn_AdjustAgreement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebMicroTxn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebMicroTxn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebMicroTxn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5740
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebNews::STATIC_GetNewsForAppMinimal(int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppMinimal");
		
		UUWorksInterfaceWebNews_GetNewsForAppMinimal_Params params {};
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5490
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppAuthedMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebNews::STATIC_GetNewsForAppAuthedMinimal(const class FString& Key, int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppAuthedMinimal");
		
		UUWorksInterfaceWebNews_GetNewsForAppAuthedMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5460
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppAuthed
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetNewsForAppAuthed* UUWorksInterfaceWebNews::STATIC_GetNewsForAppAuthed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForAppAuthed");
		
		UUWorksInterfaceWebNews_GetNewsForAppAuthed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5430
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForApp
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetNewsForApp* UUWorksInterfaceWebNews::STATIC_GetNewsForApp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebNews.GetNewsForApp");
		
		UUWorksInterfaceWebNews_GetNewsForApp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebNews.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebNews::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebNews");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6930
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.RecordOfflinePlaytimeMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPlaySessions                         PlaySessions                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_RecordOfflinePlaytimeMinimal(const struct FUWorksSteamID& SteamID, const class FString& Ticket, const struct FUWorksPlaySessions& PlaySessions, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.RecordOfflinePlaytimeMinimal");
		
		UUWorksInterfaceWebPlayer_RecordOfflinePlaytimeMinimal_Params params {};
		params.SteamID = SteamID;
		params.Ticket = Ticket;
		params.PlaySessions = PlaySessions;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6900
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.RecordOfflinePlaytime
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRecordOfflinePlaytime* UUWorksInterfaceWebPlayer::STATIC_RecordOfflinePlaytime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.RecordOfflinePlaytime");
		
		UUWorksInterfaceWebPlayer_RecordOfflinePlaytime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6750
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.IsPlayingSharedGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppIDPlaying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_IsPlayingSharedGameMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppIDPlaying, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.IsPlayingSharedGameMinimal");
		
		UUWorksInterfaceWebPlayer_IsPlayingSharedGameMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDPlaying = AppIDPlaying;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6720
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.IsPlayingSharedGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebIsPlayingSharedGame* UUWorksInterfaceWebPlayer::STATIC_IsPlayingSharedGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.IsPlayingSharedGame");
		
		UUWorksInterfaceWebPlayer_IsPlayingSharedGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D65A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetSteamLevelMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_GetSteamLevelMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetSteamLevelMinimal");
		
		UUWorksInterfaceWebPlayer_GetSteamLevelMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6570
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetSteamLevel
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetSteamLevel* UUWorksInterfaceWebPlayer::STATIC_GetSteamLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetSteamLevel");
		
		UUWorksInterfaceWebPlayer_GetSteamLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D63C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetRecentlyPlayedGamesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_GetRecentlyPlayedGamesMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t Count, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetRecentlyPlayedGamesMinimal");
		
		UUWorksInterfaceWebPlayer_GetRecentlyPlayedGamesMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Count = Count;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6390
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetRecentlyPlayedGames
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetRecentlyPlayedGames* UUWorksInterfaceWebPlayer::STATIC_GetRecentlyPlayedGames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetRecentlyPlayedGames");
		
		UUWorksInterfaceWebPlayer_GetRecentlyPlayedGames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D60F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetOwnedGamesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAppInfo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludePlayedFreeGames                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AppIDsFilter                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_GetOwnedGamesMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bIncludeAppInfo, bool bIncludePlayedFreeGames, TArray<int32_t> AppIDsFilter, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetOwnedGamesMinimal");
		
		UUWorksInterfaceWebPlayer_GetOwnedGamesMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bIncludeAppInfo = bIncludeAppInfo;
		params.bIncludePlayedFreeGames = bIncludePlayedFreeGames;
		params.AppIDsFilter = AppIDsFilter;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D60C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetOwnedGames
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetOwnedGames* UUWorksInterfaceWebPlayer::STATIC_GetOwnedGames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetOwnedGames");
		
		UUWorksInterfaceWebPlayer_GetOwnedGames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5F10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetCommunityBadgeProgressMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BadgeID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_GetCommunityBadgeProgressMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t BadgeID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetCommunityBadgeProgressMinimal");
		
		UUWorksInterfaceWebPlayer_GetCommunityBadgeProgressMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.BadgeID = BadgeID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5EE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetCommunityBadgeProgress
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetCommunityBadgeProgress* UUWorksInterfaceWebPlayer::STATIC_GetCommunityBadgeProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetCommunityBadgeProgress");
		
		UUWorksInterfaceWebPlayer_GetCommunityBadgeProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5D60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetBadgesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPlayer::STATIC_GetBadgesMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetBadgesMinimal");
		
		UUWorksInterfaceWebPlayer_GetBadgesMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D5D30
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPlayer.GetBadges
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetBadges* UUWorksInterfaceWebPlayer::STATIC_GetBadges()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPlayer.GetBadges");
		
		UUWorksInterfaceWebPlayer_GetBadges_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D7D10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.UpdateTagsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              AddTags                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RemoveTags                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedFile::STATIC_UpdateTagsMinimal(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, TArray<class FString> AddTags, TArray<class FString> RemoveTags, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.UpdateTagsMinimal");
		
		UUWorksInterfaceWebPublishedFile_UpdateTagsMinimal_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.AddTags = AddTags;
		params.RemoveTags = RemoveTags;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D7CE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.UpdateTags
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebUpdateTags* UUWorksInterfaceWebPublishedFile::STATIC_UpdateTags()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.UpdateTags");
		
		UUWorksInterfaceWebPublishedFile_UpdateTags_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D7AA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.SetDeveloperMetadataMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MetaData                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedFile::STATIC_SetDeveloperMetadataMinimal(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, const class FString& MetaData, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.SetDeveloperMetadataMinimal");
		
		UUWorksInterfaceWebPublishedFile_SetDeveloperMetadataMinimal_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.MetaData = MetaData;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D7A70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.SetDeveloperMetadata
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetDeveloperMetadata* UUWorksInterfaceWebPublishedFile::STATIC_SetDeveloperMetadata()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.SetDeveloperMetadata");
		
		UUWorksInterfaceWebPublishedFile_SetDeveloperMetadata_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6E00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.QueryFilesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      queryType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Page                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CreatorAppID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              requiredTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              excludedTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RequiredFlags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OmittedFlags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      searchText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      ChildPublishedFileID                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeRecentVotesOnly                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksRequiredKVTags                       RequiredKVTags                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bTotalOnly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIDsOnly                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnVoteData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnTags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnKVTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnPreviews                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnChildren                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnShortDescription                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnForSaleData                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ReturnPlaytimeStats                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumPerPage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bMatchAllTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Language                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnMetaData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedFile::STATIC_QueryFilesMinimal(const class FString& Key, unsigned char queryType, int32_t Page, int32_t CreatorAppID, int32_t AppID, TArray<class FString> requiredTags, TArray<class FString> excludedTags, TArray<class FString> RequiredFlags, TArray<class FString> OmittedFlags, const class FString& searchText, unsigned char fileType, const struct FUWorksPublishedFileID& ChildPublishedFileID, int32_t Days, bool bIncludeRecentVotesOnly, const struct FUWorksRequiredKVTags& RequiredKVTags, bool bTotalOnly, bool bIDsOnly, bool bReturnVoteData, bool bReturnTags, bool bReturnKVTags, bool bReturnPreviews, bool bReturnChildren, bool bReturnShortDescription, bool bReturnForSaleData, int32_t ReturnPlaytimeStats, int32_t NumPerPage, bool bMatchAllTags, int32_t CacheMaxAgeSeconds, int32_t Language, bool bReturnMetaData, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.QueryFilesMinimal");
		
		UUWorksInterfaceWebPublishedFile_QueryFilesMinimal_Params params {};
		params.Key = Key;
		params.queryType = queryType;
		params.Page = Page;
		params.CreatorAppID = CreatorAppID;
		params.AppID = AppID;
		params.requiredTags = requiredTags;
		params.excludedTags = excludedTags;
		params.RequiredFlags = RequiredFlags;
		params.OmittedFlags = OmittedFlags;
		params.searchText = searchText;
		params.fileType = fileType;
		params.ChildPublishedFileID = ChildPublishedFileID;
		params.Days = Days;
		params.bIncludeRecentVotesOnly = bIncludeRecentVotesOnly;
		params.RequiredKVTags = RequiredKVTags;
		params.bTotalOnly = bTotalOnly;
		params.bIDsOnly = bIDsOnly;
		params.bReturnVoteData = bReturnVoteData;
		params.bReturnTags = bReturnTags;
		params.bReturnKVTags = bReturnKVTags;
		params.bReturnPreviews = bReturnPreviews;
		params.bReturnChildren = bReturnChildren;
		params.bReturnShortDescription = bReturnShortDescription;
		params.bReturnForSaleData = bReturnForSaleData;
		params.ReturnPlaytimeStats = ReturnPlaytimeStats;
		params.NumPerPage = NumPerPage;
		params.bMatchAllTags = bMatchAllTags;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		params.Language = Language;
		params.bReturnMetaData = bReturnMetaData;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D6DD0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedFile.QueryFiles
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebQueryFiles* UUWorksInterfaceWebPublishedFile::STATIC_QueryFiles()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedFile.QueryFiles");
		
		UUWorksInterfaceWebPublishedFile_QueryFiles_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebPublishedFile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebPublishedFile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebPublishedFile");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D94B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.ResultSetSummaryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemSearch::STATIC_ResultSetSummaryMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.ResultSetSummaryMinimal");
		
		UUWorksInterfaceWebPublishedItemSearch_ResultSetSummaryMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D9480
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.ResultSetSummary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebResultSetSummary* UUWorksInterfaceWebPublishedItemSearch::STATIC_ResultSetSummary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.ResultSetSummary");
		
		UUWorksInterfaceWebPublishedItemSearch_ResultSetSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D8F10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByVoteMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByVoteMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByVoteMinimal");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByVoteMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D8EE0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByVote
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRankedByVote* UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByVote()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByVote");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByVote_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D8940
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByTrendMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByTrendMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, int32_t Days, TArray<class FString> tags, TArray<class FString> UserTags, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByTrendMinimal");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByTrendMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.Days = Days;
		params.tags = tags;
		params.UserTags = UserTags;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D8910
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByTrend
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRankedByTrend* UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByTrend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByTrend");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByTrend_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D83A0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByPublicationOrderMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByPublicationOrderMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByPublicationOrderMinimal");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByPublicationOrderMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D8370
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByPublicationOrder
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebRankedByPublicationOrder* UUWorksInterfaceWebPublishedItemSearch::STATIC_RankedByPublicationOrder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemSearch.RankedByPublicationOrder");
		
		UUWorksInterfaceWebPublishedItemSearch_RankedByPublicationOrder_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebPublishedItemSearch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebPublishedItemSearch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebPublishedItemSearch");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D9E70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.UserVoteSummaryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemVoting::STATIC_UserVoteSummaryMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.UserVoteSummaryMinimal");
		
		UUWorksInterfaceWebPublishedItemVoting_UserVoteSummaryMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D9E40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.UserVoteSummary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebUserVoteSummary* UUWorksInterfaceWebPublishedItemVoting::STATIC_UserVoteSummary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.UserVoteSummary");
		
		UUWorksInterfaceWebPublishedItemVoting_UserVoteSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D9BC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.ItemVoteSummaryMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebPublishedItemVoting::STATIC_ItemVoteSummaryMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.ItemVoteSummaryMinimal");
		
		UUWorksInterfaceWebPublishedItemVoting_ItemVoteSummaryMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006D9B90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.ItemVoteSummary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebItemVoteSummary* UUWorksInterfaceWebPublishedItemVoting::STATIC_ItemVoteSummary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebPublishedItemVoting.ItemVoteSummary");
		
		UUWorksInterfaceWebPublishedItemVoting_ItemVoteSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebPublishedItemVoting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebPublishedItemVoting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebPublishedItemVoting");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DB350
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.UnsubscribePublishedFileMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_UnsubscribePublishedFileMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.UnsubscribePublishedFileMinimal");
		
		UUWorksInterfaceWebRemoteStorage_UnsubscribePublishedFileMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DB320
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.UnsubscribePublishedFile
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebUnsubscribePublishedFile* UUWorksInterfaceWebRemoteStorage::STATIC_UnsubscribePublishedFile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.UnsubscribePublishedFile");
		
		UUWorksInterfaceWebRemoteStorage_UnsubscribePublishedFile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DB130
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SubscribePublishedFileMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_SubscribePublishedFileMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SubscribePublishedFileMinimal");
		
		UUWorksInterfaceWebRemoteStorage_SubscribePublishedFileMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DB100
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SubscribePublishedFile
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSubscribePublishedFile* UUWorksInterfaceWebRemoteStorage::STATIC_SubscribePublishedFile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SubscribePublishedFile");
		
		UUWorksInterfaceWebRemoteStorage_SubscribePublishedFile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DAEC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SetUGCUsedByGCMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUsed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_SetUGCUsedByGCMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID, bool bUsed, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SetUGCUsedByGCMinimal");
		
		UUWorksInterfaceWebRemoteStorage_SetUGCUsedByGCMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		params.bUsed = bUsed;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DAE90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SetUGCUsedByGC
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetUGCUsedByGC* UUWorksInterfaceWebRemoteStorage::STATIC_SetUGCUsedByGC()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.SetUGCUsedByGC");
		
		UUWorksInterfaceWebRemoteStorage_SetUGCUsedByGC_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DACA0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetUGCFileDetailsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_GetUGCFileDetailsMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetUGCFileDetailsMinimal");
		
		UUWorksInterfaceWebRemoteStorage_GetUGCFileDetailsMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DAC70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetUGCFileDetails
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUGCFileDetails* UUWorksInterfaceWebRemoteStorage::STATIC_GetUGCFileDetails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetUGCFileDetails");
		
		UUWorksInterfaceWebRemoteStorage_GetUGCFileDetails_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DAAF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetPublishedFileDetailsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_GetPublishedFileDetailsMinimal(int32_t ItemCount, TArray<int32_t> PublishedFileIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetPublishedFileDetailsMinimal");
		
		UUWorksInterfaceWebRemoteStorage_GetPublishedFileDetailsMinimal_Params params {};
		params.ItemCount = ItemCount;
		params.PublishedFileIDs = PublishedFileIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DAAC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetPublishedFileDetails
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPublishedFileDetails* UUWorksInterfaceWebRemoteStorage::STATIC_GetPublishedFileDetails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetPublishedFileDetails");
		
		UUWorksInterfaceWebRemoteStorage_GetPublishedFileDetails_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA940
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetCollectionDetailsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            CollectionCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_GetCollectionDetailsMinimal(int32_t CollectionCount, TArray<int32_t> PublishedFileIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetCollectionDetailsMinimal");
		
		UUWorksInterfaceWebRemoteStorage_GetCollectionDetailsMinimal_Params params {};
		params.CollectionCount = CollectionCount;
		params.PublishedFileIDs = PublishedFileIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA910
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetCollectionDetails
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetCollectionDetails* UUWorksInterfaceWebRemoteStorage::STATIC_GetCollectionDetails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.GetCollectionDetails");
		
		UUWorksInterfaceWebRemoteStorage_GetCollectionDetails_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA720
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserSubscribedFilesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_EnumerateUserSubscribedFilesMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ListType, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserSubscribedFilesMinimal");
		
		UUWorksInterfaceWebRemoteStorage_EnumerateUserSubscribedFilesMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ListType = ListType;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA6F0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserSubscribedFiles
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebEnumerateUserSubscribedFiles* UUWorksInterfaceWebRemoteStorage::STATIC_EnumerateUserSubscribedFiles()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserSubscribedFiles");
		
		UUWorksInterfaceWebRemoteStorage_EnumerateUserSubscribedFiles_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA540
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserPublishedFilesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebRemoteStorage::STATIC_EnumerateUserPublishedFilesMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserPublishedFilesMinimal");
		
		UUWorksInterfaceWebRemoteStorage_EnumerateUserPublishedFilesMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DA510
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserPublishedFiles
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebEnumerateUserPublishedFiles* UUWorksInterfaceWebRemoteStorage::STATIC_EnumerateUserPublishedFiles()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebRemoteStorage.EnumerateUserPublishedFiles");
		
		UUWorksInterfaceWebRemoteStorage_EnumerateUserPublishedFiles_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebRemoteStorage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebRemoteStorage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebRemoteStorage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DCDC0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.ResolveVanityURLMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      VanityURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      URLType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_ResolveVanityURLMinimal(const class FString& Key, const class FString& VanityURL, unsigned char URLType, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.ResolveVanityURLMinimal");
		
		UUWorksInterfaceWebUser_ResolveVanityURLMinimal_Params params {};
		params.Key = Key;
		params.VanityURL = VanityURL;
		params.URLType = URLType;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DCD90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.ResolveVanityURL
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebResolveVanityURL* UUWorksInterfaceWebUser::STATIC_ResolveVanityURL()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.ResolveVanityURL");
		
		UUWorksInterfaceWebUser_ResolveVanityURL_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DCA90
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GrantPackageMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PackageID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ThirdPartyKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ThirdPartyAppID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GrantPackageMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t PackageID, const class FString& IPAddress, const class FString& ThirdPartyKey, int32_t ThirdPartyAppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GrantPackageMinimal");
		
		UUWorksInterfaceWebUser_GrantPackageMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.PackageID = PackageID;
		params.IPAddress = IPAddress;
		params.ThirdPartyKey = ThirdPartyKey;
		params.ThirdPartyAppID = ThirdPartyAppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DCA60
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GrantPackage
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGrantPackage* UUWorksInterfaceWebUser::STATIC_GrantPackage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GrantPackage");
		
		UUWorksInterfaceWebUser_GrantPackage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC8E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetUserGroupListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetUserGroupListMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetUserGroupListMinimal");
		
		UUWorksInterfaceWebUser_GetUserGroupListMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC8B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetUserGroupList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUserGroupList* UUWorksInterfaceWebUser::STATIC_GetUserGroupList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetUserGroupList");
		
		UUWorksInterfaceWebUser_GetUserGroupList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC730
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetPublisherAppOwnershipMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipMinimal");
		
		UUWorksInterfaceWebUser_GetPublisherAppOwnershipMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC4E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipChangesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PackageRowVersion                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CDKeyRowVersion                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetPublisherAppOwnershipChangesMinimal(const class FString& Key, const class FString& PackageRowVersion, const class FString& CDKeyRowVersion, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipChangesMinimal");
		
		UUWorksInterfaceWebUser_GetPublisherAppOwnershipChangesMinimal_Params params {};
		params.Key = Key;
		params.PackageRowVersion = PackageRowVersion;
		params.CDKeyRowVersion = CDKeyRowVersion;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC4B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipChanges
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPublisherAppOwnershipChanges* UUWorksInterfaceWebUser::STATIC_GetPublisherAppOwnershipChanges()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnershipChanges");
		
		UUWorksInterfaceWebUser_GetPublisherAppOwnershipChanges_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC480
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnership
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPublisherAppOwnership* UUWorksInterfaceWebUser::STATIC_GetPublisherAppOwnership()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPublisherAppOwnership");
		
		UUWorksInterfaceWebUser_GetPublisherAppOwnership_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC2B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerSummariesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetPlayerSummariesMinimal(const class FString& Key, const class FString& SteamIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerSummariesMinimal");
		
		UUWorksInterfaceWebUser_GetPlayerSummariesMinimal_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC280
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerSummaries
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPlayerSummaries* UUWorksInterfaceWebUser::STATIC_GetPlayerSummaries()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerSummaries");
		
		UUWorksInterfaceWebUser_GetPlayerSummaries_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC0B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerBansMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetPlayerBansMinimal(const class FString& Key, const class FString& SteamIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerBansMinimal");
		
		UUWorksInterfaceWebUser_GetPlayerBansMinimal_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DC080
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerBans
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPlayerBans* UUWorksInterfaceWebUser::STATIC_GetPlayerBans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetPlayerBans");
		
		UUWorksInterfaceWebUser_GetPlayerBans_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBE70
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetFriendListMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Relationship                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetFriendListMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Relationship, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetFriendListMinimal");
		
		UUWorksInterfaceWebUser_GetFriendListMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Relationship = Relationship;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBE40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetFriendList
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetFriendList* UUWorksInterfaceWebUser::STATIC_GetFriendList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetFriendList");
		
		UUWorksInterfaceWebUser_GetFriendList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBC30
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetAppPriceInfoMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AppIDs                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_GetAppPriceInfoMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AppIDs, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetAppPriceInfoMinimal");
		
		UUWorksInterfaceWebUser_GetAppPriceInfoMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDs = AppIDs;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBC00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.GetAppPriceInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetAppPriceInfo* UUWorksInterfaceWebUser::STATIC_GetAppPriceInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.GetAppPriceInfo");
		
		UUWorksInterfaceWebUser_GetAppPriceInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBA50
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.CheckAppOwnershipMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUser::STATIC_CheckAppOwnershipMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.CheckAppOwnershipMinimal");
		
		UUWorksInterfaceWebUser_CheckAppOwnershipMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DBA20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUser.CheckAppOwnership
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebCheckAppOwnership* UUWorksInterfaceWebUser::STATIC_CheckAppOwnership()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUser.CheckAppOwnership");
		
		UUWorksInterfaceWebUser_CheckAppOwnership_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DD410
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserTicketMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserAuth::STATIC_AuthenticateUserTicketMinimal(const class FString& Key, int32_t AppID, const class FString& Ticket, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserTicketMinimal");
		
		UUWorksInterfaceWebUserAuth_AuthenticateUserTicketMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Ticket = Ticket;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DD3E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserTicket
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebAuthenticateUserTicket* UUWorksInterfaceWebUserAuth::STATIC_AuthenticateUserTicket()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserTicket");
		
		UUWorksInterfaceWebUserAuth_AuthenticateUserTicket_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DD1E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              SessionKey                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              EncryptedLoginKey                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserAuth::STATIC_AuthenticateUserMinimal(const struct FUWorksSteamID& SteamID, TArray<unsigned char> SessionKey, TArray<unsigned char> EncryptedLoginKey, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUserMinimal");
		
		UUWorksInterfaceWebUserAuth_AuthenticateUserMinimal_Params params {};
		params.SteamID = SteamID;
		params.SessionKey = SessionKey;
		params.EncryptedLoginKey = EncryptedLoginKey;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DD1B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUser
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebAuthenticateUser* UUWorksInterfaceWebUserAuth::STATIC_AuthenticateUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserAuth.AuthenticateUser");
		
		UUWorksInterfaceWebUserAuth_AuthenticateUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebUserAuth.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebUserAuth::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebUserAuth");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE5C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.SetUserStatsForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Value                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_SetUserStatsForGameMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<class FString> Name, TArray<int32_t> Value, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.SetUserStatsForGameMinimal");
		
		UUWorksInterfaceWebUserStats_SetUserStatsForGameMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.Value = Value;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE590
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.SetUserStatsForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetUserStatsForGame* UUWorksInterfaceWebUserStats::STATIC_SetUserStatsForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.SetUserStatsForGame");
		
		UUWorksInterfaceWebUserStats_SetUserStatsForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE3E0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetUserStatsForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetUserStatsForGameMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetUserStatsForGameMinimal");
		
		UUWorksInterfaceWebUserStats_GetUserStatsForGameMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE3B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetUserStatsForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetUserStatsForGame* UUWorksInterfaceWebUserStats::STATIC_GetUserStatsForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetUserStatsForGame");
		
		UUWorksInterfaceWebUserStats_GetUserStatsForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE1B0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetSchemaForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetSchemaForGameMinimal(const class FString& Key, int32_t AppID, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetSchemaForGameMinimal");
		
		UUWorksInterfaceWebUserStats_GetSchemaForGameMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DE180
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetSchemaForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetSchemaForGame* UUWorksInterfaceWebUserStats::STATIC_GetSchemaForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetSchemaForGame");
		
		UUWorksInterfaceWebUserStats_GetSchemaForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDF40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetPlayerAchievementsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetPlayerAchievementsMinimal(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& Language, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetPlayerAchievementsMinimal");
		
		UUWorksInterfaceWebUserStats_GetPlayerAchievementsMinimal_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Language = Language;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDF10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetPlayerAchievements
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetPlayerAchievements* UUWorksInterfaceWebUserStats::STATIC_GetPlayerAchievements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetPlayerAchievements");
		
		UUWorksInterfaceWebUserStats_GetPlayerAchievements_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDE20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetNumberOfCurrentPlayersMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetNumberOfCurrentPlayersMinimal(int32_t AppID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetNumberOfCurrentPlayersMinimal");
		
		UUWorksInterfaceWebUserStats_GetNumberOfCurrentPlayersMinimal_Params params {};
		params.AppID = AppID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDDF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetNumberOfCurrentPlayers
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetNumberOfCurrentPlayers* UUWorksInterfaceWebUserStats::STATIC_GetNumberOfCurrentPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetNumberOfCurrentPlayers");
		
		UUWorksInterfaceWebUserStats_GetNumberOfCurrentPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDB20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalStatsForGameMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartDate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetGlobalStatsForGameMinimal(int32_t AppID, int32_t Count, TArray<class FString> Name, int32_t StartDate, int32_t EndDate, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalStatsForGameMinimal");
		
		UUWorksInterfaceWebUserStats_GetGlobalStatsForGameMinimal_Params params {};
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.StartDate = StartDate;
		params.EndDate = EndDate;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDAF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalStatsForGame
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetGlobalStatsForGame* UUWorksInterfaceWebUserStats::STATIC_GetGlobalStatsForGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalStatsForGame");
		
		UUWorksInterfaceWebUserStats_GetGlobalStatsForGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DDA00
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalAchievementPercentagesForAppMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebUserStats::STATIC_GetGlobalAchievementPercentagesForAppMinimal(const struct FUWorksGameID& GameID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalAchievementPercentagesForAppMinimal");
		
		UUWorksInterfaceWebUserStats_GetGlobalAchievementPercentagesForAppMinimal_Params params {};
		params.GameID = GameID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DD9D0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalAchievementPercentagesForApp
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetGlobalAchievementPercentagesForApp* UUWorksInterfaceWebUserStats::STATIC_GetGlobalAchievementPercentagesForApp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebUserStats.GetGlobalAchievementPercentagesForApp");
		
		UUWorksInterfaceWebUserStats_GetGlobalAchievementPercentagesForApp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebUserStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebUserStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebUserStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DF290
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.SetItemPaymentRulesMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksAssociatedWorkshopFiles              AssociatedWorkshopFiles                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPartnerAccounts                      PartnerAccounts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bMakeWorkshopFilesSubscribable                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValidateOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebWorkshop::STATIC_SetItemPaymentRulesMinimal(const class FString& Key, int32_t AppID, int32_t GameItemID, const struct FUWorksAssociatedWorkshopFiles& AssociatedWorkshopFiles, const struct FUWorksPartnerAccounts& PartnerAccounts, bool bMakeWorkshopFilesSubscribable, bool bValidateOnly, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.SetItemPaymentRulesMinimal");
		
		UUWorksInterfaceWebWorkshop_SetItemPaymentRulesMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		params.AssociatedWorkshopFiles = AssociatedWorkshopFiles;
		params.PartnerAccounts = PartnerAccounts;
		params.bMakeWorkshopFilesSubscribable = bMakeWorkshopFilesSubscribable;
		params.bValidateOnly = bValidateOnly;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DF260
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.SetItemPaymentRules
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebSetItemPaymentRules* UUWorksInterfaceWebWorkshop::STATIC_SetItemPaymentRules()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.SetItemPaymentRules");
		
		UUWorksInterfaceWebWorkshop_SetItemPaymentRules_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DF0C0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.PopulateItemDescriptionsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksLanguages                            Languages                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebWorkshop::STATIC_PopulateItemDescriptionsMinimal(const class FString& Key, int32_t AppID, const struct FUWorksLanguages& Languages, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.PopulateItemDescriptionsMinimal");
		
		UUWorksInterfaceWebWorkshop_PopulateItemDescriptionsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Languages = Languages;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DF090
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.PopulateItemDescriptions
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebPopulateItemDescriptions* UUWorksInterfaceWebWorkshop::STATIC_PopulateItemDescriptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.PopulateItemDescriptions");
		
		UUWorksInterfaceWebWorkshop_PopulateItemDescriptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DEE20
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.GetItemDailyRevenueMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      itemId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebWorkshop::STATIC_GetItemDailyRevenueMinimal(const class FString& Key, int32_t AppID, const class FString& itemId, int32_t DateStart, int32_t DateEnd, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.GetItemDailyRevenueMinimal");
		
		UUWorksInterfaceWebWorkshop_GetItemDailyRevenueMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.DateStart = DateStart;
		params.DateEnd = DateEnd;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DEDF0
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.GetItemDailyRevenue
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetItemDailyRevenue* UUWorksInterfaceWebWorkshop::STATIC_GetItemDailyRevenue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.GetItemDailyRevenue");
		
		UUWorksInterfaceWebWorkshop_GetItemDailyRevenue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DEC40
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.GetFinalizedContributorsMinimal
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksInterfaceWebWorkshop::STATIC_GetFinalizedContributorsMinimal(const class FString& Key, int32_t AppID, int32_t GameItemID, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.GetFinalizedContributorsMinimal");
		
		UUWorksInterfaceWebWorkshop_GetFinalizedContributorsMinimal_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006DEC10
	 * 		Name   -> Function UWorksWeb.UWorksInterfaceWebWorkshop.GetFinalizedContributors
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UUWorksRequestWebGetFinalizedContributors* UUWorksInterfaceWebWorkshop::STATIC_GetFinalizedContributors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksInterfaceWebWorkshop.GetFinalizedContributors");
		
		UUWorksInterfaceWebWorkshop_GetFinalizedContributors_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksInterfaceWebWorkshop.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksInterfaceWebWorkshop::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksInterfaceWebWorkshop");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006125B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWeb.IsActive
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	bool UUWorksRequestWeb::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWeb.IsActive");
		
		UUWorksRequestWeb_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071CB00
	 * 		Name   -> Function UWorksWeb.UWorksRequestWeb.GetStatus
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	class FString UUWorksRequestWeb::GetStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWeb.GetStatus");
		
		UUWorksRequestWeb_GetStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006123C0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWeb.Deactivate
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void UUWorksRequestWeb::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWeb.Deactivate");
		
		UUWorksRequestWeb_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006123A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWeb.Activate
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void UUWorksRequestWeb::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWeb.Activate");
		
		UUWorksRequestWeb_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWeb.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWeb::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWeb");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0580
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppBetas.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppBetas::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppBetas.SetInput");
		
		UUWorksRequestWebGetAppBetas_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppBetas.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppBetas::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppBetas.GetOutput");
		
		UUWorksRequestWebGetAppBetas_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAppBetas.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAppBetas::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAppBetas");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E06A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppBuilds.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppBuilds::SetInput(const class FString& Key, int32_t AppID, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppBuilds.SetInput");
		
		UUWorksRequestWebGetAppBuilds_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppBuilds.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppBuilds::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppBuilds.GetOutput");
		
		UUWorksRequestWebGetAppBuilds_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAppBuilds.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAppBuilds::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAppBuilds");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0580
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppDepotVersions.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppDepotVersions::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppDepotVersions.SetInput");
		
		UUWorksRequestWebGetAppDepotVersions_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppDepotVersions.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppDepotVersions::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppDepotVersions.GetOutput");
		
		UUWorksRequestWebGetAppDepotVersions_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAppDepotVersions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAppDepotVersions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAppDepotVersions");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppList.GetOutput");
		
		UUWorksRequestWebGetAppList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAppList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAppList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAppList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E07F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCheatingReportsList.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCheatingReportsList::SetInput(const class FString& Key, int32_t AppID, int32_t TimeBegin, int32_t TimeEnd, bool bIncludeReports, bool bIncludeBans, const class FString& ReportIDMin)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCheatingReportsList.SetInput");
		
		UUWorksRequestWebGetCheatingReportsList_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeBegin = TimeBegin;
		params.TimeEnd = TimeEnd;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.ReportIDMin = ReportIDMin;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCheatingReportsList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCheatingReportsList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCheatingReportsList.GetOutput");
		
		UUWorksRequestWebGetCheatingReportsList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetCheatingReportsList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetCheatingReportsList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetCheatingReportsList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0580
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayersBanned.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayersBanned::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayersBanned.SetInput");
		
		UUWorksRequestWebGetPlayersBanned_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayersBanned.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayersBanned::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayersBanned.GetOutput");
		
		UUWorksRequestWebGetPlayersBanned_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPlayersBanned.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPlayersBanned::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPlayersBanned");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0AA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerList.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Filter                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Limit                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerList::SetInput(const class FString& Key, const class FString& Filter, int32_t Limit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerList.SetInput");
		
		UUWorksRequestWebGetServerList_SetInput_Params params {};
		params.Key = Key;
		params.Filter = Filter;
		params.Limit = Limit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerList.GetOutput");
		
		UUWorksRequestWebGetServerList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetServerList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetServerList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetServerList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0C40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServersAtAddress.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Addr                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServersAtAddress::SetInput(const class FString& Addr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServersAtAddress.SetInput");
		
		UUWorksRequestWebGetServersAtAddress_SetInput_Params params {};
		params.Addr = Addr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServersAtAddress.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServersAtAddress::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServersAtAddress.GetOutput");
		
		UUWorksRequestWebGetServersAtAddress_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetServersAtAddress.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetServersAtAddress::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetServersAtAddress");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0D20
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetAppBuildLive.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BuildID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      BetaKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetAppBuildLive::SetInput(const class FString& Key, int32_t AppID, int32_t BuildID, const class FString& BetaKey, const class FString& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetAppBuildLive.SetInput");
		
		UUWorksRequestWebSetAppBuildLive_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.BuildID = BuildID;
		params.BetaKey = BetaKey;
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetAppBuildLive.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetAppBuildLive::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetAppBuildLive.GetOutput");
		
		UUWorksRequestWebSetAppBuildLive_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetAppBuildLive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetAppBuildLive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetAppBuildLive");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0F90
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpToDateCheck.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            VersionToCheck                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpToDateCheck::SetInput(int32_t AppID, int32_t VersionToCheck)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpToDateCheck.SetInput");
		
		UUWorksRequestWebUpToDateCheck_SetInput_Params params {};
		params.AppID = AppID;
		params.VersionToCheck = VersionToCheck;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpToDateCheck.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpToDateCheck::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpToDateCheck.GetOutput");
		
		UUWorksRequestWebUpToDateCheck_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebUpToDateCheck.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebUpToDateCheck::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebUpToDateCheck");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E11E0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebPostGameDataFrame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      BroadcastID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      FrameData                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebPostGameDataFrame::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& BroadcastID, const class FString& FrameData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebPostGameDataFrame.SetInput");
		
		UUWorksRequestWebPostGameDataFrame_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.BroadcastID = BroadcastID;
		params.FrameData = FrameData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebPostGameDataFrame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebPostGameDataFrame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebPostGameDataFrame.GetOutput");
		
		UUWorksRequestWebPostGameDataFrame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebPostGameDataFrame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebPostGameDataFrame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebPostGameDataFrame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E2D60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportPlayerCheating.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDReporter                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHeuristic                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDetection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayerReport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNoReportID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SuspicionStartTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Severity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportPlayerCheating::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& SteamIDReporter, int32_t AppData, bool bHeuristic, bool bDetection, bool bPlayerReport, bool bNoReportID, int32_t GameMode, int32_t SuspicionStartTime, int32_t Severity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportPlayerCheating.SetInput");
		
		UUWorksRequestWebReportPlayerCheating_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SteamIDReporter = SteamIDReporter;
		params.AppData = AppData;
		params.bHeuristic = bHeuristic;
		params.bDetection = bDetection;
		params.bPlayerReport = bPlayerReport;
		params.bNoReportID = bNoReportID;
		params.GameMode = GameMode;
		params.SuspicionStartTime = SuspicionStartTime;
		params.Severity = Severity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportPlayerCheating.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportPlayerCheating::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportPlayerCheating.GetOutput");
		
		UUWorksRequestWebReportPlayerCheating_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebReportPlayerCheating.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebReportPlayerCheating::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebReportPlayerCheating");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E3100
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestPlayerGameBan.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ReportID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDelayBan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestPlayerGameBan::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& ReportID, const class FString& CheatDescription, int32_t Duration, bool bDelayBan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestPlayerGameBan.SetInput");
		
		UUWorksRequestWebRequestPlayerGameBan_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ReportID = ReportID;
		params.CheatDescription = CheatDescription;
		params.Duration = Duration;
		params.bDelayBan = bDelayBan;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestPlayerGameBan.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestPlayerGameBan::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestPlayerGameBan.GetOutput");
		
		UUWorksRequestWebRequestPlayerGameBan_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRequestPlayerGameBan.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRequestPlayerGameBan::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRequestPlayerGameBan");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E25A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRemovePlayerGameBan.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRemovePlayerGameBan::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRemovePlayerGameBan.SetInput");
		
		UUWorksRequestWebRemovePlayerGameBan_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRemovePlayerGameBan.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRemovePlayerGameBan::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRemovePlayerGameBan.GetOutput");
		
		UUWorksRequestWebRemovePlayerGameBan_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRemovePlayerGameBan.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRemovePlayerGameBan::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRemovePlayerGameBan");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E22B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCheatingReports.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCheatingReports::SetInput(const class FString& Key, int32_t AppID, int32_t TimeEnd, int32_t TimeBegin, const class FString& ReportIDMin, bool bIncludeReports, bool bIncludeBans, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCheatingReports.SetInput");
		
		UUWorksRequestWebGetCheatingReports_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeEnd = TimeEnd;
		params.TimeBegin = TimeBegin;
		params.ReportIDMin = ReportIDMin;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCheatingReports.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCheatingReports::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCheatingReports.GetOutput");
		
		UUWorksRequestWebGetCheatingReports_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetCheatingReports.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetCheatingReports::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetCheatingReports");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E20D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestVacStatusForUser.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestVacStatusForUser::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestVacStatusForUser.SetInput");
		
		UUWorksRequestWebRequestVacStatusForUser_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestVacStatusForUser.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestVacStatusForUser::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestVacStatusForUser.GetOutput");
		
		UUWorksRequestWebRequestVacStatusForUser_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRequestVacStatusForUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRequestVacStatusForUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRequestVacStatusForUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E25A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartSecureMultiplayerSession.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartSecureMultiplayerSession::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartSecureMultiplayerSession.SetInput");
		
		UUWorksRequestWebStartSecureMultiplayerSession_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartSecureMultiplayerSession.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartSecureMultiplayerSession::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartSecureMultiplayerSession.GetOutput");
		
		UUWorksRequestWebStartSecureMultiplayerSession_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebStartSecureMultiplayerSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebStartSecureMultiplayerSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebStartSecureMultiplayerSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E20D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEndSecureMultiplayerSession.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEndSecureMultiplayerSession::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEndSecureMultiplayerSession.SetInput");
		
		UUWorksRequestWebEndSecureMultiplayerSession_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEndSecureMultiplayerSession.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEndSecureMultiplayerSession::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEndSecureMultiplayerSession.GetOutput");
		
		UUWorksRequestWebEndSecureMultiplayerSession_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebEndSecureMultiplayerSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebEndSecureMultiplayerSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebEndSecureMultiplayerSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E26F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportCheatData.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PathAndFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      WebCheatURL                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeNow                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStarted                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStopped                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameProcessID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CheatProcessID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportCheatData::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& PathAndFileName, const class FString& WebCheatURL, const class FString& TimeNow, const class FString& TimeStarted, const class FString& TimeStopped, const class FString& CheatName, int32_t GameProcessID, int32_t CheatProcessID, const class FString& CheatParamA, const class FString& CheatParamB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportCheatData.SetInput");
		
		UUWorksRequestWebReportCheatData_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PathAndFileName = PathAndFileName;
		params.WebCheatURL = WebCheatURL;
		params.TimeNow = TimeNow;
		params.TimeStarted = TimeStarted;
		params.TimeStopped = TimeStopped;
		params.CheatName = CheatName;
		params.GameProcessID = GameProcessID;
		params.CheatProcessID = CheatProcessID;
		params.CheatParamA = CheatParamA;
		params.CheatParamB = CheatParamB;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportCheatData.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportCheatData::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportCheatData.GetOutput");
		
		UUWorksRequestWebReportCheatData_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebReportCheatData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebReportCheatData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebReportCheatData");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E3530
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportAbuse.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDActor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDTarget                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      AbuseType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      ContentType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      GID                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportAbuse::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamIDActor, const struct FUWorksSteamID& SteamIDTarget, int32_t AppID, unsigned char AbuseType, unsigned char ContentType, const class FString& Description, const class FString& GID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportAbuse.SetInput");
		
		UUWorksRequestWebReportAbuse_SetInput_Params params {};
		params.Key = Key;
		params.SteamIDActor = SteamIDActor;
		params.SteamIDTarget = SteamIDTarget;
		params.AppID = AppID;
		params.AbuseType = AbuseType;
		params.ContentType = ContentType;
		params.Description = Description;
		params.GID = GID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebReportAbuse.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebReportAbuse::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebReportAbuse.GetOutput");
		
		UUWorksRequestWebReportAbuse_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebReportAbuse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebReportAbuse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebReportAbuse");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E4AE0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeHistory.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxTrades                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartAfterTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StartAfterTradeID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNavigatingBack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeFailed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeTotal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeHistory::SetInput(const class FString& Key, int32_t MaxTrades, int32_t StartAfterTime, const class FString& StartAfterTradeID, bool bNavigatingBack, bool bGetDescription, const class FString& Language, bool bIncludeFailed, bool bIncludeTotal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeHistory.SetInput");
		
		UUWorksRequestWebGetTradeHistory_SetInput_Params params {};
		params.Key = Key;
		params.MaxTrades = MaxTrades;
		params.StartAfterTime = StartAfterTime;
		params.StartAfterTradeID = StartAfterTradeID;
		params.bNavigatingBack = bNavigatingBack;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bIncludeFailed = bIncludeFailed;
		params.bIncludeTotal = bIncludeTotal;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeHistory.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeHistory::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeHistory.GetOutput");
		
		UUWorksRequestWebGetTradeHistory_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetTradeHistory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetTradeHistory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetTradeHistory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E4900
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushInventoryCache.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushInventoryCache::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushInventoryCache.SetInput");
		
		UUWorksRequestWebFlushInventoryCache_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushInventoryCache.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushInventoryCache::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushInventoryCache.GetOutput");
		
		UUWorksRequestWebFlushInventoryCache_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFlushInventoryCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFlushInventoryCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFlushInventoryCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E47E0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushAssetAppearanceCache.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushAssetAppearanceCache::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushAssetAppearanceCache.SetInput");
		
		UUWorksRequestWebFlushAssetAppearanceCache_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushAssetAppearanceCache.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushAssetAppearanceCache::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushAssetAppearanceCache.GetOutput");
		
		UUWorksRequestWebFlushAssetAppearanceCache_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFlushAssetAppearanceCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFlushAssetAppearanceCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFlushAssetAppearanceCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E47E0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushContextCache.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushContextCache::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushContextCache.SetInput");
		
		UUWorksRequestWebFlushContextCache_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFlushContextCache.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFlushContextCache::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFlushContextCache.GetOutput");
		
		UUWorksRequestWebFlushContextCache_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFlushContextCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFlushContextCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFlushContextCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5060
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffers.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetSentOffers                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetReceivedOffers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bActiveOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHistoricalOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeHistoricalCutoff                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffers::SetInput(const class FString& Key, bool bGetSentOffers, bool bGetReceivedOffers, bool bGetDescription, const class FString& Language, bool bActiveOnly, bool bHistoricalOnly, int32_t TimeHistoricalCutoff)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffers.SetInput");
		
		UUWorksRequestWebGetTradeOffers_SetInput_Params params {};
		params.Key = Key;
		params.bGetSentOffers = bGetSentOffers;
		params.bGetReceivedOffers = bGetReceivedOffers;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bActiveOnly = bActiveOnly;
		params.bHistoricalOnly = bHistoricalOnly;
		params.TimeHistoricalCutoff = TimeHistoricalCutoff;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffers.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffers::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffers.GetOutput");
		
		UUWorksRequestWebGetTradeOffers_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetTradeOffers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetTradeOffers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetTradeOffers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E4E60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffer.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffer::SetInput(const class FString& Key, const class FString& TradeOfferID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffer.SetInput");
		
		UUWorksRequestWebGetTradeOffer_SetInput_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffer.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffer::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffer.GetOutput");
		
		UUWorksRequestWebGetTradeOffer_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetTradeOffer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetTradeOffer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetTradeOffer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5360
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffersSummary.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeLastVisit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffersSummary::SetInput(const class FString& Key, int32_t TimeLastVisit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffersSummary.SetInput");
		
		UUWorksRequestWebGetTradeOffersSummary_SetInput_Params params {};
		params.Key = Key;
		params.TimeLastVisit = TimeLastVisit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetTradeOffersSummary.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetTradeOffersSummary::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetTradeOffersSummary.GetOutput");
		
		UUWorksRequestWebGetTradeOffersSummary_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetTradeOffersSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetTradeOffersSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetTradeOffersSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E4670
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeclineTradeOffer.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeclineTradeOffer::SetInput(const class FString& Key, const class FString& TradeOfferID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeclineTradeOffer.SetInput");
		
		UUWorksRequestWebDeclineTradeOffer_SetInput_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeclineTradeOffer.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeclineTradeOffer::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeclineTradeOffer.GetOutput");
		
		UUWorksRequestWebDeclineTradeOffer_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebDeclineTradeOffer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebDeclineTradeOffer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebDeclineTradeOffer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E4670
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelTradeOffer.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelTradeOffer::SetInput(const class FString& Key, const class FString& TradeOfferID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelTradeOffer.SetInput");
		
		UUWorksRequestWebCancelTradeOffer_SetInput_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelTradeOffer.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelTradeOffer::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelTradeOffer.GetOutput");
		
		UUWorksRequestWebCancelTradeOffer_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCancelTradeOffer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCancelTradeOffer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCancelTradeOffer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetMarketEligibility.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetMarketEligibility::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetMarketEligibility.SetInput");
		
		UUWorksRequestWebGetMarketEligibility_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetMarketEligibility.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetMarketEligibility::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetMarketEligibility.GetOutput");
		
		UUWorksRequestWebGetMarketEligibility_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetMarketEligibility.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetMarketEligibility::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetMarketEligibility");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5AC0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelAppListingsForUser.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bSynchronous                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelAppListingsForUser::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bSynchronous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelAppListingsForUser.SetInput");
		
		UUWorksRequestWebCancelAppListingsForUser_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bSynchronous = bSynchronous;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelAppListingsForUser.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelAppListingsForUser::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelAppListingsForUser.GetOutput");
		
		UUWorksRequestWebCancelAppListingsForUser_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCancelAppListingsForUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCancelAppListingsForUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCancelAppListingsForUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5C50
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetID.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ListingID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetID::SetInput(const class FString& Key, int32_t AppID, const class FString& ListingID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetID.SetInput");
		
		UUWorksRequestWebGetAssetID_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ListingID = ListingID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetID.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetID::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetID.GetOutput");
		
		UUWorksRequestWebGetAssetID_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAssetID.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAssetID::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAssetID");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5F10
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPopular.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Rows                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            FilterAppID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPopular::SetInput(const class FString& Key, const class FString& Language, int32_t Rows, int32_t Start, int32_t FilterAppID, int32_t ECurrency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPopular.SetInput");
		
		UUWorksRequestWebGetPopular_SetInput_Params params {};
		params.Key = Key;
		params.Language = Language;
		params.Rows = Rows;
		params.Start = Start;
		params.FilterAppID = FilterAppID;
		params.ECurrency = ECurrency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPopular.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPopular::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPopular.GetOutput");
		
		UUWorksRequestWebGetPopular_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPopular.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPopular::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPopular");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E6DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCanTrade.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              TargetID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCanTrade::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamID& TargetID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCanTrade.SetInput");
		
		UUWorksRequestWebCanTrade_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TargetID = TargetID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCanTrade.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCanTrade::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCanTrade.GetOutput");
		
		UUWorksRequestWebCanTrade_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCanTrade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCanTrade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCanTrade");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E6F80
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFinalizeAssetTransaction.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      TxnID                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFinalizeAssetTransaction::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& TxnID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFinalizeAssetTransaction.SetInput");
		
		UUWorksRequestWebFinalizeAssetTransaction_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TxnID = TxnID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFinalizeAssetTransaction.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFinalizeAssetTransaction::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFinalizeAssetTransaction.GetOutput");
		
		UUWorksRequestWebFinalizeAssetTransaction_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFinalizeAssetTransaction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFinalizeAssetTransaction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFinalizeAssetTransaction");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E71F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetClassInfo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ClassCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ClassID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InstanceID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetClassInfo::SetInput(const class FString& Key, int32_t AppID, int32_t ClassCount, const class FString& ClassID, const class FString& Language, const class FString& InstanceID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetClassInfo.SetInput");
		
		UUWorksRequestWebGetAssetClassInfo_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ClassCount = ClassCount;
		params.ClassID = ClassID;
		params.Language = Language;
		params.InstanceID = InstanceID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetClassInfo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetClassInfo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetClassInfo.GetOutput");
		
		UUWorksRequestWebGetAssetClassInfo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAssetClassInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAssetClassInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAssetClassInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E74F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetPrices.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetPrices::SetInput(const class FString& Key, int32_t AppID, const class FString& Currency, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetPrices.SetInput");
		
		UUWorksRequestWebGetAssetPrices_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Currency = Currency;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAssetPrices.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAssetPrices::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAssetPrices.GetOutput");
		
		UUWorksRequestWebGetAssetPrices_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAssetPrices.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAssetPrices::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAssetPrices");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E7720
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetExportedAssetsForUser.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetExportedAssetsForUser::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetExportedAssetsForUser.SetInput");
		
		UUWorksRequestWebGetExportedAssetsForUser_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetExportedAssetsForUser.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetExportedAssetsForUser::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetExportedAssetsForUser.GetOutput");
		
		UUWorksRequestWebGetExportedAssetsForUser_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetExportedAssetsForUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetExportedAssetsForUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetExportedAssetsForUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0580
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetMarketPrices.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetMarketPrices::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetMarketPrices.SetInput");
		
		UUWorksRequestWebGetMarketPrices_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetMarketPrices.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetMarketPrices::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetMarketPrices.GetOutput");
		
		UUWorksRequestWebGetMarketPrices_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetMarketPrices.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetMarketPrices::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetMarketPrices");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E7900
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartAssetTransaction.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AssetQuantity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Referrer                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bClientAuth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartAssetTransaction::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& AssetID, int32_t AssetQuantity, const class FString& Currency, const class FString& Language, const class FString& IPAddress, const class FString& Referrer, bool bClientAuth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartAssetTransaction.SetInput");
		
		UUWorksRequestWebStartAssetTransaction_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.AssetID = AssetID;
		params.AssetQuantity = AssetQuantity;
		params.Currency = Currency;
		params.Language = Language;
		params.IPAddress = IPAddress;
		params.Referrer = Referrer;
		params.bClientAuth = bClientAuth;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartAssetTransaction.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartAssetTransaction::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartAssetTransaction.GetOutput");
		
		UUWorksRequestWebStartAssetTransaction_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebStartAssetTransaction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebStartAssetTransaction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebStartAssetTransaction");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E7DA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartTrade.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyA                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyB                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartTrade::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& PartyA, const struct FUWorksSteamID& PartyB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartTrade.SetInput");
		
		UUWorksRequestWebStartTrade_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.PartyA = PartyA;
		params.PartyB = PartyB;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebStartTrade.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebStartTrade::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebStartTrade.GetOutput");
		
		UUWorksRequestWebStartTrade_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebStartTrade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebStartTrade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebStartTrade");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E8570
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetHistoryCommandDetails.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Arguments                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetHistoryCommandDetails::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& Command, const class FString& ContextID, const class FString& Arguments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetHistoryCommandDetails.SetInput");
		
		UUWorksRequestWebGetHistoryCommandDetails_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.Command = Command;
		params.ContextID = ContextID;
		params.Arguments = Arguments;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetHistoryCommandDetails.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetHistoryCommandDetails::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetHistoryCommandDetails.GetOutput");
		
		UUWorksRequestWebGetHistoryCommandDetails_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetHistoryCommandDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetHistoryCommandDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetHistoryCommandDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E8870
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserHistory.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserHistory::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, int32_t StartTime, int32_t EndTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserHistory.SetInput");
		
		UUWorksRequestWebGetUserHistory_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.StartTime = StartTime;
		params.EndTime = EndTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserHistory.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserHistory::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserHistory.GetOutput");
		
		UUWorksRequestWebGetUserHistory_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUserHistory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUserHistory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUserHistory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E8AD0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebHistoryExecuteCommands.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ActorId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebHistoryExecuteCommands::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, const class FString& ActorId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebHistoryExecuteCommands.SetInput");
		
		UUWorksRequestWebHistoryExecuteCommands_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.ActorId = ActorId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebHistoryExecuteCommands.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebHistoryExecuteCommands::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebHistoryExecuteCommands.GetOutput");
		
		UUWorksRequestWebHistoryExecuteCommands_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebHistoryExecuteCommands.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebHistoryExecuteCommands::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebHistoryExecuteCommands");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E8D40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSupportGetAssetHistory.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSupportGetAssetHistory::SetInput(const class FString& Key, int32_t AppID, const class FString& AssetID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSupportGetAssetHistory.SetInput");
		
		UUWorksRequestWebSupportGetAssetHistory_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.AssetID = AssetID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSupportGetAssetHistory.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSupportGetAssetHistory::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSupportGetAssetHistory.GetOutput");
		
		UUWorksRequestWebSupportGetAssetHistory_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSupportGetAssetHistory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSupportGetAssetHistory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSupportGetAssetHistory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E9A60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCreateSession.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Context                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCreateSession::SetInput(const class FString& Key, int32_t AppID, const class FString& Context, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCreateSession.SetInput");
		
		UUWorksRequestWebCreateSession_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Context = Context;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCreateSession.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCreateSession::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCreateSession.GetOutput");
		
		UUWorksRequestWebCreateSession_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCreateSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCreateSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCreateSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EA490
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpdateSession.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpdateSession::SetInput(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpdateSession.SetInput");
		
		UUWorksRequestWebUpdateSession_SetInput_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpdateSession.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpdateSession::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpdateSession.GetOutput");
		
		UUWorksRequestWebUpdateSession_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebUpdateSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebUpdateSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebUpdateSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EA040
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateSessionsForApp.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAllUserMessages                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAuthUserMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateSessionsForApp::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bIncludeAllUserMessages, bool bIncludeAuthUserMessage, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateSessionsForApp.SetInput");
		
		UUWorksRequestWebEnumerateSessionsForApp_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bIncludeAllUserMessages = bIncludeAllUserMessages;
		params.bIncludeAuthUserMessage = bIncludeAuthUserMessage;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateSessionsForApp.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateSessionsForApp::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateSessionsForApp.GetOutput");
		
		UUWorksRequestWebEnumerateSessionsForApp_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebEnumerateSessionsForApp.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebEnumerateSessionsForApp::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebEnumerateSessionsForApp");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EA2B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSessionDetailsForApp.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSessions                             Sessions                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSessionDetailsForApp::SetInput(const class FString& Key, const struct FUWorksSessions& Sessions, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSessionDetailsForApp.SetInput");
		
		UUWorksRequestWebGetSessionDetailsForApp_SetInput_Params params {};
		params.Key = Key;
		params.Sessions = Sessions;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSessionDetailsForApp.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSessionDetailsForApp::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSessionDetailsForApp.GetOutput");
		
		UUWorksRequestWebGetSessionDetailsForApp_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetSessionDetailsForApp.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetSessionDetailsForApp::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetSessionDetailsForApp");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E25A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestNotifications.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestNotifications::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestNotifications.SetInput");
		
		UUWorksRequestWebRequestNotifications_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRequestNotifications.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRequestNotifications::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRequestNotifications.GetOutput");
		
		UUWorksRequestWebRequestNotifications_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRequestNotifications.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRequestNotifications::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRequestNotifications");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E9CC0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteSession.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteSession::SetInput(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteSession.SetInput");
		
		UUWorksRequestWebDeleteSession_SetInput_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteSession.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteSession::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteSession.GetOutput");
		
		UUWorksRequestWebDeleteSession_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebDeleteSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebDeleteSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebDeleteSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E9EA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteSessionBatch.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteSessionBatch::SetInput(const class FString& Key, const class FString& SessionId, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteSessionBatch.SetInput");
		
		UUWorksRequestWebDeleteSessionBatch_SetInput_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteSessionBatch.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteSessionBatch::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteSessionBatch.GetOutput");
		
		UUWorksRequestWebDeleteSessionBatch_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebDeleteSessionBatch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebDeleteSessionBatch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebDeleteSessionBatch");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EB830
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAccountList.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAccountList::SetInput(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAccountList.SetInput");
		
		UUWorksRequestWebGetAccountList_SetInput_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAccountList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAccountList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAccountList.GetOutput");
		
		UUWorksRequestWebGetAccountList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAccountList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAccountList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAccountList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EB690
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCreateAccount.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCreateAccount::SetInput(const class FString& Key, int32_t AppID, const class FString& Memo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCreateAccount.SetInput");
		
		UUWorksRequestWebCreateAccount_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Memo = Memo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCreateAccount.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCreateAccount::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCreateAccount.GetOutput");
		
		UUWorksRequestWebCreateAccount_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCreateAccount.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCreateAccount::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCreateAccount");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EBEA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetMemo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetMemo::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Memo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetMemo.SetInput");
		
		UUWorksRequestWebSetMemo_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Memo = Memo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetMemo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetMemo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetMemo.GetOutput");
		
		UUWorksRequestWebSetMemo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetMemo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetMemo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetMemo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResetLoginToken.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResetLoginToken::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResetLoginToken.SetInput");
		
		UUWorksRequestWebResetLoginToken_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResetLoginToken.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResetLoginToken::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResetLoginToken.GetOutput");
		
		UUWorksRequestWebResetLoginToken_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebResetLoginToken.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebResetLoginToken::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebResetLoginToken");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteAccount.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteAccount::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteAccount.SetInput");
		
		UUWorksRequestWebDeleteAccount_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteAccount.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteAccount::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteAccount.GetOutput");
		
		UUWorksRequestWebDeleteAccount_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebDeleteAccount.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebDeleteAccount::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebDeleteAccount");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAccountPublicInfo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAccountPublicInfo::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAccountPublicInfo.SetInput");
		
		UUWorksRequestWebGetAccountPublicInfo_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAccountPublicInfo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAccountPublicInfo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAccountPublicInfo.GetOutput");
		
		UUWorksRequestWebGetAccountPublicInfo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAccountPublicInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAccountPublicInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAccountPublicInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EBBA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryLoginToken.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      LoginToken                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryLoginToken::SetInput(const class FString& Key, const class FString& LoginToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryLoginToken.SetInput");
		
		UUWorksRequestWebQueryLoginToken_SetInput_Params params {};
		params.Key = Key;
		params.LoginToken = LoginToken;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryLoginToken.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryLoginToken::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryLoginToken.GetOutput");
		
		UUWorksRequestWebQueryLoginToken_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebQueryLoginToken.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebQueryLoginToken::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebQueryLoginToken");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EBD10
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetBanStatus.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bBanned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BanSeconds                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetBanStatus::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bBanned, int32_t BanSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetBanStatus.SetInput");
		
		UUWorksRequestWebSetBanStatus_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bBanned = bBanned;
		params.BanSeconds = BanSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetBanStatus.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetBanStatus::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetBanStatus.GetOutput");
		
		UUWorksRequestWebSetBanStatus_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetBanStatus.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetBanStatus::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetBanStatus");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EBA30
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerSteamIDsByIP.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ServerIPs                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerSteamIDsByIP::SetInput(const class FString& Key, const class FString& ServerIPs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerSteamIDsByIP.SetInput");
		
		UUWorksRequestWebGetServerSteamIDsByIP_SetInput_Params params {};
		params.Key = Key;
		params.ServerIPs = ServerIPs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerSteamIDsByIP.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerSteamIDsByIP::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerSteamIDsByIP.GetOutput");
		
		UUWorksRequestWebGetServerSteamIDsByIP_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetServerSteamIDsByIP.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetServerSteamIDsByIP::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetServerSteamIDsByIP");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EB910
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerIPsBySteamID.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ServerSteamID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerIPsBySteamID::SetInput(const class FString& Key, const struct FUWorksSteamID& ServerSteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerIPsBySteamID.SetInput");
		
		UUWorksRequestWebGetServerIPsBySteamID_SetInput_Params params {};
		params.Key = Key;
		params.ServerSteamID = ServerSteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetServerIPsBySteamID.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetServerIPsBySteamID::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetServerIPsBySteamID.GetOutput");
		
		UUWorksRequestWebGetServerIPsBySteamID_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetServerIPsBySteamID.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetServerIPsBySteamID::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetServerIPsBySteamID");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EC1D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGameServerPlayerStatsForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeStart                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeEnd                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGameServerPlayerStatsForGame::SetInput(const class FString& Key, const struct FUWorksGameID& GameID, int32_t AppID, const class FString& RangeStart, const class FString& RangeEnd, int32_t MaxResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGameServerPlayerStatsForGame.SetInput");
		
		UUWorksRequestWebGetGameServerPlayerStatsForGame_SetInput_Params params {};
		params.Key = Key;
		params.GameID = GameID;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.MaxResults = MaxResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGameServerPlayerStatsForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGameServerPlayerStatsForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGameServerPlayerStatsForGame.GetOutput");
		
		UUWorksRequestWebGetGameServerPlayerStatsForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetGameServerPlayerStatsForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetGameServerPlayerStatsForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetGameServerPlayerStatsForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006ED290
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAddItem.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAddItem::SetInput(const class FString& Key, int32_t AppID, TArray<struct FUWorksSteamItemDef> ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAddItem.SetInput");
		
		UUWorksRequestWebAddItem_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAddItem.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAddItem::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAddItem.GetOutput");
		
		UUWorksRequestWebAddItem_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebAddItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebAddItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebAddItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006ED5D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAddPromoItem.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAddPromoItem::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemDef& ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAddPromoItem.SetInput");
		
		UUWorksRequestWebAddPromoItem_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAddPromoItem.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAddPromoItem::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAddPromoItem.GetOutput");
		
		UUWorksRequestWebAddPromoItem_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebAddPromoItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebAddPromoItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebAddPromoItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EDAE0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebConsumeItem.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemInstanceID                  itemId                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Quantity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebConsumeItem::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemInstanceID& itemId, int32_t Quantity, const struct FUWorksSteamID& SteamID, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebConsumeItem.SetInput");
		
		UUWorksRequestWebConsumeItem_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.Quantity = Quantity;
		params.SteamID = SteamID;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebConsumeItem.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebConsumeItem::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebConsumeItem.GetOutput");
		
		UUWorksRequestWebConsumeItem_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebConsumeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebConsumeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebConsumeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EDD40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebExchangeItem.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemInstanceID>          MaterialsItemID                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    MaterialsQuantity                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         OutputItemDefID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebExchangeItem::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemInstanceID> MaterialsItemID, TArray<int32_t> MaterialsQuantity, const struct FUWorksSteamItemDef& OutputItemDefID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebExchangeItem.SetInput");
		
		UUWorksRequestWebExchangeItem_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.MaterialsItemID = MaterialsItemID;
		params.MaterialsQuantity = MaterialsQuantity;
		params.OutputItemDefID = OutputItemDefID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebExchangeItem.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebExchangeItem::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebExchangeItem.GetOutput");
		
		UUWorksRequestWebExchangeItem_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebExchangeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebExchangeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebExchangeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EDFF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetInventory.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetInventory::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetInventory.SetInput");
		
		UUWorksRequestWebGetInventory_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetInventory.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetInventory::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetInventory.GetOutput");
		
		UUWorksRequestWebGetInventory_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetInventory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetInventory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetInventory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EE140
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetItemDefs.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ModifiedSince                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefIDs                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 WorkshopIDs                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetItemDefs::SetInput(const class FString& Key, int32_t AppID, const class FString& ModifiedSince, TArray<struct FUWorksSteamItemDef> ItemDefIDs, TArray<struct FUWorksSteamItemDef> WorkshopIDs, int32_t CacheMaxAgeSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetItemDefs.SetInput");
		
		UUWorksRequestWebGetItemDefs_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ModifiedSince = ModifiedSince;
		params.ItemDefIDs = ItemDefIDs;
		params.WorkshopIDs = WorkshopIDs;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetItemDefs.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetItemDefs::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetItemDefs.GetOutput");
		
		UUWorksRequestWebGetItemDefs_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetItemDefs.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetItemDefs::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetItemDefs");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EE440
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPriceSheet.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPriceSheet::SetInput(const class FString& Key, int32_t ECurrency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPriceSheet.SetInput");
		
		UUWorksRequestWebGetPriceSheet_SetInput_Params params {};
		params.Key = Key;
		params.ECurrency = ECurrency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPriceSheet.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPriceSheet::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPriceSheet.GetOutput");
		
		UUWorksRequestWebGetPriceSheet_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPriceSheet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPriceSheet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPriceSheet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006ED8C0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebConsolidate.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebConsolidate::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemDef> ItemDefID, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebConsolidate.SetInput");
		
		UUWorksRequestWebConsolidate_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebConsolidate.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebConsolidate::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebConsolidate.GetOutput");
		
		UUWorksRequestWebConsolidate_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebConsolidate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebConsolidate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebConsolidate");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EE560
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetQuantity.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetQuantity::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamItemDef& ItemDefID, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetQuantity.SetInput");
		
		UUWorksRequestWebGetQuantity_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetQuantity.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetQuantity::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetQuantity.GetOutput");
		
		UUWorksRequestWebGetQuantity_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetQuantity.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetQuantity::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetQuantity");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EF090
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteLeaderboard.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteLeaderboard::SetInput(const class FString& Key, int32_t AppID, const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteLeaderboard.SetInput");
		
		UUWorksRequestWebDeleteLeaderboard_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebDeleteLeaderboard.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebDeleteLeaderboard::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebDeleteLeaderboard.GetOutput");
		
		UUWorksRequestWebDeleteLeaderboard_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebDeleteLeaderboard.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebDeleteLeaderboard::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebDeleteLeaderboard");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EF230
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFindOrCreateLeaderboard.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SortMethod                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCreateIfNotFound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyTrustedWrites                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyFriendsReads                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFindOrCreateLeaderboard::SetInput(const class FString& Key, int32_t AppID, const class FString& Name, const class FString& SortMethod, const class FString& DisplayType, bool bCreateIfNotFound, bool bOnlyTrustedWrites, bool bOnlyFriendsReads)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFindOrCreateLeaderboard.SetInput");
		
		UUWorksRequestWebFindOrCreateLeaderboard_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		params.SortMethod = SortMethod;
		params.DisplayType = DisplayType;
		params.bCreateIfNotFound = bCreateIfNotFound;
		params.bOnlyTrustedWrites = bOnlyTrustedWrites;
		params.bOnlyFriendsReads = bOnlyFriendsReads;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFindOrCreateLeaderboard.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFindOrCreateLeaderboard::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFindOrCreateLeaderboard.GetOutput");
		
		UUWorksRequestWebFindOrCreateLeaderboard_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFindOrCreateLeaderboard.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFindOrCreateLeaderboard::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFindOrCreateLeaderboard");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EF5C0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetLeaderboardEntries.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeEnd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DataRequest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetLeaderboardEntries::SetInput(const class FString& Key, int32_t AppID, int32_t RangeStart, int32_t RangeEnd, int32_t LeaderboardID, int32_t DataRequest, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetLeaderboardEntries.SetInput");
		
		UUWorksRequestWebGetLeaderboardEntries_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.LeaderboardID = LeaderboardID;
		params.DataRequest = DataRequest;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetLeaderboardEntries.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetLeaderboardEntries::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetLeaderboardEntries.GetOutput");
		
		UUWorksRequestWebGetLeaderboardEntries_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetLeaderboardEntries.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetLeaderboardEntries::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetLeaderboardEntries");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E0580
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetLeaderboardsForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetLeaderboardsForGame::SetInput(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetLeaderboardsForGame.SetInput");
		
		UUWorksRequestWebGetLeaderboardsForGame_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetLeaderboardsForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetLeaderboardsForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetLeaderboardsForGame.GetOutput");
		
		UUWorksRequestWebGetLeaderboardsForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetLeaderboardsForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetLeaderboardsForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetLeaderboardsForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EF810
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResetLeaderboard.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResetLeaderboard::SetInput(const class FString& Key, int32_t AppID, int32_t LeaderboardID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResetLeaderboard.SetInput");
		
		UUWorksRequestWebResetLeaderboard_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResetLeaderboard.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResetLeaderboard::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResetLeaderboard.GetOutput");
		
		UUWorksRequestWebResetLeaderboard_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebResetLeaderboard.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebResetLeaderboard::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebResetLeaderboard");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006EF960
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetLeaderboardScore.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ScoreMethod                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              Details                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetLeaderboardScore::SetInput(const class FString& Key, int32_t AppID, int32_t LeaderboardID, const struct FUWorksSteamID& SteamID, int32_t score, const class FString& ScoreMethod, TArray<unsigned char> Details)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetLeaderboardScore.SetInput");
		
		UUWorksRequestWebSetLeaderboardScore_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		params.SteamID = SteamID;
		params.score = score;
		params.ScoreMethod = ScoreMethod;
		params.Details = Details;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetLeaderboardScore.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetLeaderboardScore::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetLeaderboardScore.GetOutput");
		
		UUWorksRequestWebSetLeaderboardScore_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetLeaderboardScore.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetLeaderboardScore::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetLeaderboardScore");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F0BF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAdjustAgreement.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NextProcessDate                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAdjustAgreement::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, const class FString& NextProcessDate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAdjustAgreement.SetInput");
		
		UUWorksRequestWebAdjustAgreement_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.NextProcessDate = NextProcessDate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAdjustAgreement.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAdjustAgreement::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAdjustAgreement.GetOutput");
		
		UUWorksRequestWebAdjustAgreement_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebAdjustAgreement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebAdjustAgreement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebAdjustAgreement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F0E60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelAgreement.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelAgreement::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelAgreement.SetInput");
		
		UUWorksRequestWebCancelAgreement_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCancelAgreement.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCancelAgreement::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCancelAgreement.GetOutput");
		
		UUWorksRequestWebCancelAgreement_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCancelAgreement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCancelAgreement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCancelAgreement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1040
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFinalizeTxn.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFinalizeTxn::SetInput(const class FString& Key, const class FString& OrderID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFinalizeTxn.SetInput");
		
		UUWorksRequestWebFinalizeTxn_SetInput_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebFinalizeTxn.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebFinalizeTxn::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebFinalizeTxn.GetOutput");
		
		UUWorksRequestWebFinalizeTxn_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebFinalizeTxn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebFinalizeTxn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebFinalizeTxn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F11E0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetReport.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Time                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksReportType                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetReport::SetInput(const class FString& Key, int32_t AppID, const class FString& Time, UWorksWeb_EUWorksReportType Type, int32_t MaxResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetReport.SetInput");
		
		UUWorksRequestWebGetReport_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Time = Time;
		params.Type = Type;
		params.MaxResults = MaxResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetReport.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetReport::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetReport.GetOutput");
		
		UUWorksRequestWebGetReport_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetReport.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetReport::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetReport");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1400
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserAgreementInfo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserAgreementInfo::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserAgreementInfo.SetInput");
		
		UUWorksRequestWebGetUserAgreementInfo_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserAgreementInfo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserAgreementInfo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserAgreementInfo.GetOutput");
		
		UUWorksRequestWebGetUserAgreementInfo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUserAgreementInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUserAgreementInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUserAgreementInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1550
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserInfo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserInfo::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& IPAddress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserInfo.SetInput");
		
		UUWorksRequestWebGetUserInfo_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.IPAddress = IPAddress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserInfo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserInfo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserInfo.GetOutput");
		
		UUWorksRequestWebGetUserInfo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUserInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUserInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUserInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F16F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebInitTxn.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 itemIds                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Quantities                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Amounts                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Descriptions                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Categories                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AssociatedBundles                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BillingTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              StartDates                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              EndDates                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Periods                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Frequencies                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RecurringAmounts                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BundleCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleIDs                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleQuantities                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleDescriptions                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleCategories                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksUserSession                       UserSession                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebInitTxn::SetInput(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ItemCount, const class FString& Language, const class FString& Currency, TArray<struct FUWorksSteamItemDef> itemIds, TArray<int32_t> Quantities, TArray<int32_t> Amounts, TArray<class FString> Descriptions, TArray<class FString> Categories, TArray<int32_t> AssociatedBundles, TArray<class FString> BillingTypes, TArray<class FString> StartDates, TArray<class FString> EndDates, TArray<class FString> Periods, TArray<int32_t> Frequencies, TArray<class FString> RecurringAmounts, int32_t BundleCount, TArray<int32_t> BundleIDs, TArray<int32_t> BundleQuantities, TArray<class FString> BundleDescriptions, TArray<class FString> BundleCategories, UWorksWeb_EUWorksUserSession UserSession, const class FString& IPAddress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebInitTxn.SetInput");
		
		UUWorksRequestWebInitTxn_SetInput_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ItemCount = ItemCount;
		params.Language = Language;
		params.Currency = Currency;
		params.itemIds = itemIds;
		params.Quantities = Quantities;
		params.Amounts = Amounts;
		params.Descriptions = Descriptions;
		params.Categories = Categories;
		params.AssociatedBundles = AssociatedBundles;
		params.BillingTypes = BillingTypes;
		params.StartDates = StartDates;
		params.EndDates = EndDates;
		params.Periods = Periods;
		params.Frequencies = Frequencies;
		params.RecurringAmounts = RecurringAmounts;
		params.BundleCount = BundleCount;
		params.BundleIDs = BundleIDs;
		params.BundleQuantities = BundleQuantities;
		params.BundleDescriptions = BundleDescriptions;
		params.BundleCategories = BundleCategories;
		params.UserSession = UserSession;
		params.IPAddress = IPAddress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebInitTxn.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebInitTxn::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebInitTxn.GetOutput");
		
		UUWorksRequestWebInitTxn_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebInitTxn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebInitTxn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebInitTxn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F29C0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebProcessAgreement.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebProcessAgreement::SetInput(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, int32_t Amount, const class FString& Currency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebProcessAgreement.SetInput");
		
		UUWorksRequestWebProcessAgreement_SetInput_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.Amount = Amount;
		params.Currency = Currency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebProcessAgreement.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebProcessAgreement::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebProcessAgreement.GetOutput");
		
		UUWorksRequestWebProcessAgreement_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebProcessAgreement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebProcessAgreement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebProcessAgreement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F2CF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryTxn.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TransID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryTxn::SetInput(const class FString& Key, int32_t AppID, const class FString& OrderID, const class FString& TransID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryTxn.SetInput");
		
		UUWorksRequestWebQueryTxn_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.OrderID = OrderID;
		params.TransID = TransID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryTxn.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryTxn::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryTxn.GetOutput");
		
		UUWorksRequestWebQueryTxn_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebQueryTxn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebQueryTxn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebQueryTxn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1040
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRefundTxn.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRefundTxn::SetInput(const class FString& Key, const class FString& OrderID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRefundTxn.SetInput");
		
		UUWorksRequestWebRefundTxn_SetInput_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRefundTxn.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRefundTxn::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRefundTxn.GetOutput");
		
		UUWorksRequestWebRefundTxn_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRefundTxn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRefundTxn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRefundTxn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F3240
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNewsForApp.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNewsForApp::SetInput(int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNewsForApp.SetInput");
		
		UUWorksRequestWebGetNewsForApp_SetInput_Params params {};
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNewsForApp.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNewsForApp::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNewsForApp.GetOutput");
		
		UUWorksRequestWebGetNewsForApp_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetNewsForApp.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetNewsForApp::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetNewsForApp");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F3410
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNewsForAppAuthed.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNewsForAppAuthed::SetInput(const class FString& Key, int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNewsForAppAuthed.SetInput");
		
		UUWorksRequestWebGetNewsForAppAuthed_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNewsForAppAuthed.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNewsForAppAuthed::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNewsForAppAuthed.GetOutput");
		
		UUWorksRequestWebGetNewsForAppAuthed_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetNewsForAppAuthed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetNewsForAppAuthed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetNewsForAppAuthed");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F4790
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRecordOfflinePlaytime.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPlaySessions                         PlaySessions                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRecordOfflinePlaytime::SetInput(const struct FUWorksSteamID& SteamID, const class FString& Ticket, const struct FUWorksPlaySessions& PlaySessions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRecordOfflinePlaytime.SetInput");
		
		UUWorksRequestWebRecordOfflinePlaytime_SetInput_Params params {};
		params.SteamID = SteamID;
		params.Ticket = Ticket;
		params.PlaySessions = PlaySessions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRecordOfflinePlaytime.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRecordOfflinePlaytime::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRecordOfflinePlaytime.GetOutput");
		
		UUWorksRequestWebRecordOfflinePlaytime_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRecordOfflinePlaytime.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRecordOfflinePlaytime::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRecordOfflinePlaytime");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F44F0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetRecentlyPlayedGames.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetRecentlyPlayedGames::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetRecentlyPlayedGames.SetInput");
		
		UUWorksRequestWebGetRecentlyPlayedGames_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetRecentlyPlayedGames.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetRecentlyPlayedGames::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetRecentlyPlayedGames.GetOutput");
		
		UUWorksRequestWebGetRecentlyPlayedGames_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetRecentlyPlayedGames.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetRecentlyPlayedGames::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetRecentlyPlayedGames");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F42B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetOwnedGames.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAppInfo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludePlayedFreeGames                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AppIDsFilter                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetOwnedGames::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bIncludeAppInfo, bool bIncludePlayedFreeGames, TArray<int32_t> AppIDsFilter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetOwnedGames.SetInput");
		
		UUWorksRequestWebGetOwnedGames_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bIncludeAppInfo = bIncludeAppInfo;
		params.bIncludePlayedFreeGames = bIncludePlayedFreeGames;
		params.AppIDsFilter = AppIDsFilter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetOwnedGames.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetOwnedGames::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetOwnedGames.GetOutput");
		
		UUWorksRequestWebGetOwnedGames_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetOwnedGames.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetOwnedGames::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetOwnedGames");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSteamLevel.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSteamLevel::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSteamLevel.SetInput");
		
		UUWorksRequestWebGetSteamLevel_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSteamLevel.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSteamLevel::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSteamLevel.GetOutput");
		
		UUWorksRequestWebGetSteamLevel_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetSteamLevel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetSteamLevel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetSteamLevel");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E5DF0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetBadges.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetBadges::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetBadges.SetInput");
		
		UUWorksRequestWebGetBadges_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetBadges.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetBadges::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetBadges.GetOutput");
		
		UUWorksRequestWebGetBadges_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetBadges.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetBadges::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetBadges");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F4160
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCommunityBadgeProgress.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BadgeID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCommunityBadgeProgress::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t BadgeID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCommunityBadgeProgress.SetInput");
		
		UUWorksRequestWebGetCommunityBadgeProgress_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.BadgeID = BadgeID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCommunityBadgeProgress.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCommunityBadgeProgress::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCommunityBadgeProgress.GetOutput");
		
		UUWorksRequestWebGetCommunityBadgeProgress_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetCommunityBadgeProgress.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetCommunityBadgeProgress::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetCommunityBadgeProgress");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F4640
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebIsPlayingSharedGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppIDPlaying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebIsPlayingSharedGame::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppIDPlaying)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebIsPlayingSharedGame.SetInput");
		
		UUWorksRequestWebIsPlayingSharedGame_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDPlaying = AppIDPlaying;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebIsPlayingSharedGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebIsPlayingSharedGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebIsPlayingSharedGame.GetOutput");
		
		UUWorksRequestWebIsPlayingSharedGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebIsPlayingSharedGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebIsPlayingSharedGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebIsPlayingSharedGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F4D90
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryFiles.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      queryType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Page                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CreatorAppID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              requiredTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              excludedTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RequiredFlags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OmittedFlags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      searchText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      ChildPublishedFileID                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeRecentVotesOnly                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksRequiredKVTags                       RequiredKVTags                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bTotalOnly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIDsOnly                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnVoteData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnTags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnKVTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnPreviews                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnChildren                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnShortDescription                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnForSaleData                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ReturnPlaytimeStats                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumPerPage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bMatchAllTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Language                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnMetaData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryFiles::SetInput(const class FString& Key, unsigned char queryType, int32_t Page, int32_t CreatorAppID, int32_t AppID, TArray<class FString> requiredTags, TArray<class FString> excludedTags, TArray<class FString> RequiredFlags, TArray<class FString> OmittedFlags, const class FString& searchText, unsigned char fileType, const struct FUWorksPublishedFileID& ChildPublishedFileID, int32_t Days, bool bIncludeRecentVotesOnly, const struct FUWorksRequiredKVTags& RequiredKVTags, bool bTotalOnly, bool bIDsOnly, bool bReturnVoteData, bool bReturnTags, bool bReturnKVTags, bool bReturnPreviews, bool bReturnChildren, bool bReturnShortDescription, bool bReturnForSaleData, int32_t ReturnPlaytimeStats, int32_t NumPerPage, bool bMatchAllTags, int32_t CacheMaxAgeSeconds, int32_t Language, bool bReturnMetaData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryFiles.SetInput");
		
		UUWorksRequestWebQueryFiles_SetInput_Params params {};
		params.Key = Key;
		params.queryType = queryType;
		params.Page = Page;
		params.CreatorAppID = CreatorAppID;
		params.AppID = AppID;
		params.requiredTags = requiredTags;
		params.excludedTags = excludedTags;
		params.RequiredFlags = RequiredFlags;
		params.OmittedFlags = OmittedFlags;
		params.searchText = searchText;
		params.fileType = fileType;
		params.ChildPublishedFileID = ChildPublishedFileID;
		params.Days = Days;
		params.bIncludeRecentVotesOnly = bIncludeRecentVotesOnly;
		params.RequiredKVTags = RequiredKVTags;
		params.bTotalOnly = bTotalOnly;
		params.bIDsOnly = bIDsOnly;
		params.bReturnVoteData = bReturnVoteData;
		params.bReturnTags = bReturnTags;
		params.bReturnKVTags = bReturnKVTags;
		params.bReturnPreviews = bReturnPreviews;
		params.bReturnChildren = bReturnChildren;
		params.bReturnShortDescription = bReturnShortDescription;
		params.bReturnForSaleData = bReturnForSaleData;
		params.ReturnPlaytimeStats = ReturnPlaytimeStats;
		params.NumPerPage = NumPerPage;
		params.bMatchAllTags = bMatchAllTags;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		params.Language = Language;
		params.bReturnMetaData = bReturnMetaData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebQueryFiles.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebQueryFiles::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebQueryFiles.GetOutput");
		
		UUWorksRequestWebQueryFiles_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebQueryFiles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebQueryFiles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebQueryFiles");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F5980
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetDeveloperMetadata.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MetaData                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetDeveloperMetadata::SetInput(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, const class FString& MetaData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetDeveloperMetadata.SetInput");
		
		UUWorksRequestWebSetDeveloperMetadata_SetInput_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.MetaData = MetaData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetDeveloperMetadata.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetDeveloperMetadata::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetDeveloperMetadata.GetOutput");
		
		UUWorksRequestWebSetDeveloperMetadata_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetDeveloperMetadata.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetDeveloperMetadata::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetDeveloperMetadata");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F5B60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpdateTags.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              AddTags                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RemoveTags                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpdateTags::SetInput(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, TArray<class FString> AddTags, TArray<class FString> RemoveTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpdateTags.SetInput");
		
		UUWorksRequestWebUpdateTags_SetInput_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.AddTags = AddTags;
		params.RemoveTags = RemoveTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUpdateTags.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUpdateTags::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUpdateTags.GetOutput");
		
		UUWorksRequestWebUpdateTags_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebUpdateTags.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebUpdateTags::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebUpdateTags");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F6510
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByPublicationOrder.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByPublicationOrder::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByPublicationOrder.SetInput");
		
		UUWorksRequestWebRankedByPublicationOrder_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByPublicationOrder.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByPublicationOrder::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByPublicationOrder.GetOutput");
		
		UUWorksRequestWebRankedByPublicationOrder_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRankedByPublicationOrder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRankedByPublicationOrder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRankedByPublicationOrder");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F6A20
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByTrend.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByTrend::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, int32_t Days, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByTrend.SetInput");
		
		UUWorksRequestWebRankedByTrend_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.Days = Days;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByTrend.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByTrend::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByTrend.GetOutput");
		
		UUWorksRequestWebRankedByTrend_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRankedByTrend.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRankedByTrend::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRankedByTrend");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F6510
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByVote.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByVote::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByVote.SetInput");
		
		UUWorksRequestWebRankedByVote_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebRankedByVote.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebRankedByVote::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebRankedByVote.GetOutput");
		
		UUWorksRequestWebRankedByVote_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebRankedByVote.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebRankedByVote::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebRankedByVote");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F6F60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResultSetSummary.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResultSetSummary::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResultSetSummary.SetInput");
		
		UUWorksRequestWebResultSetSummary_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResultSetSummary.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResultSetSummary::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResultSetSummary.GetOutput");
		
		UUWorksRequestWebResultSetSummary_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebResultSetSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebResultSetSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebResultSetSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F7700
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebItemVoteSummary.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebItemVoteSummary::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebItemVoteSummary.SetInput");
		
		UUWorksRequestWebItemVoteSummary_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebItemVoteSummary.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebItemVoteSummary::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebItemVoteSummary.GetOutput");
		
		UUWorksRequestWebItemVoteSummary_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebItemVoteSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebItemVoteSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebItemVoteSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F7700
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUserVoteSummary.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUserVoteSummary::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUserVoteSummary.SetInput");
		
		UUWorksRequestWebUserVoteSummary_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUserVoteSummary.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUserVoteSummary::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUserVoteSummary.GetOutput");
		
		UUWorksRequestWebUserVoteSummary_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebUserVoteSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebUserVoteSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebUserVoteSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1400
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateUserPublishedFiles.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateUserPublishedFiles::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateUserPublishedFiles.SetInput");
		
		UUWorksRequestWebEnumerateUserPublishedFiles_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateUserPublishedFiles.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateUserPublishedFiles::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateUserPublishedFiles.GetOutput");
		
		UUWorksRequestWebEnumerateUserPublishedFiles_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebEnumerateUserPublishedFiles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebEnumerateUserPublishedFiles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebEnumerateUserPublishedFiles");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F85A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateUserSubscribedFiles.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateUserSubscribedFiles::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ListType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateUserSubscribedFiles.SetInput");
		
		UUWorksRequestWebEnumerateUserSubscribedFiles_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ListType = ListType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebEnumerateUserSubscribedFiles.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebEnumerateUserSubscribedFiles::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebEnumerateUserSubscribedFiles.GetOutput");
		
		UUWorksRequestWebEnumerateUserSubscribedFiles_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebEnumerateUserSubscribedFiles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebEnumerateUserSubscribedFiles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebEnumerateUserSubscribedFiles");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8730
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCollectionDetails.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            CollectionCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCollectionDetails::SetInput(int32_t CollectionCount, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCollectionDetails.SetInput");
		
		UUWorksRequestWebGetCollectionDetails_SetInput_Params params {};
		params.CollectionCount = CollectionCount;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetCollectionDetails.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetCollectionDetails::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetCollectionDetails.GetOutput");
		
		UUWorksRequestWebGetCollectionDetails_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetCollectionDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetCollectionDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetCollectionDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8850
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublishedFileDetails.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublishedFileDetails::SetInput(int32_t ItemCount, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublishedFileDetails.SetInput");
		
		UUWorksRequestWebGetPublishedFileDetails_SetInput_Params params {};
		params.ItemCount = ItemCount;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublishedFileDetails.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublishedFileDetails::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublishedFileDetails.GetOutput");
		
		UUWorksRequestWebGetPublishedFileDetails_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPublishedFileDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPublishedFileDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPublishedFileDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8970
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUGCFileDetails.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUGCFileDetails::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUGCFileDetails.SetInput");
		
		UUWorksRequestWebGetUGCFileDetails_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUGCFileDetails.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUGCFileDetails::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUGCFileDetails.GetOutput");
		
		UUWorksRequestWebGetUGCFileDetails_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUGCFileDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUGCFileDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUGCFileDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8B00
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetUGCUsedByGC.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUsed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetUGCUsedByGC::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID, bool bUsed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetUGCUsedByGC.SetInput");
		
		UUWorksRequestWebSetUGCUsedByGC_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		params.bUsed = bUsed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetUGCUsedByGC.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetUGCUsedByGC::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetUGCUsedByGC.GetOutput");
		
		UUWorksRequestWebSetUGCUsedByGC_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetUGCUsedByGC.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetUGCUsedByGC::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetUGCUsedByGC");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8CD0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSubscribePublishedFile.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSubscribePublishedFile::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSubscribePublishedFile.SetInput");
		
		UUWorksRequestWebSubscribePublishedFile_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSubscribePublishedFile.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSubscribePublishedFile::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSubscribePublishedFile.GetOutput");
		
		UUWorksRequestWebSubscribePublishedFile_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSubscribePublishedFile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSubscribePublishedFile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSubscribePublishedFile");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F8CD0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUnsubscribePublishedFile.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUnsubscribePublishedFile::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUnsubscribePublishedFile.SetInput");
		
		UUWorksRequestWebUnsubscribePublishedFile_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebUnsubscribePublishedFile.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebUnsubscribePublishedFile::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebUnsubscribePublishedFile.GetOutput");
		
		UUWorksRequestWebUnsubscribePublishedFile_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebUnsubscribePublishedFile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebUnsubscribePublishedFile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebUnsubscribePublishedFile");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1400
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCheckAppOwnership.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCheckAppOwnership::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCheckAppOwnership.SetInput");
		
		UUWorksRequestWebCheckAppOwnership_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebCheckAppOwnership.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebCheckAppOwnership::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebCheckAppOwnership.GetOutput");
		
		UUWorksRequestWebCheckAppOwnership_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebCheckAppOwnership.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebCheckAppOwnership::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebCheckAppOwnership");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F9E00
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppPriceInfo.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AppIDs                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppPriceInfo::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AppIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppPriceInfo.SetInput");
		
		UUWorksRequestWebGetAppPriceInfo_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDs = AppIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetAppPriceInfo.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetAppPriceInfo::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetAppPriceInfo.GetOutput");
		
		UUWorksRequestWebGetAppPriceInfo_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetAppPriceInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetAppPriceInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetAppPriceInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F9FA0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetFriendList.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Relationship                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetFriendList::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Relationship)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetFriendList.SetInput");
		
		UUWorksRequestWebGetFriendList_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Relationship = Relationship;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetFriendList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetFriendList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetFriendList.GetOutput");
		
		UUWorksRequestWebGetFriendList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetFriendList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetFriendList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetFriendList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA140
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerBans.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerBans::SetInput(const class FString& Key, const class FString& SteamIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerBans.SetInput");
		
		UUWorksRequestWebGetPlayerBans_SetInput_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerBans.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerBans::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerBans.GetOutput");
		
		UUWorksRequestWebGetPlayerBans_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPlayerBans.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPlayerBans::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPlayerBans");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA140
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerSummaries.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerSummaries::SetInput(const class FString& Key, const class FString& SteamIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerSummaries.SetInput");
		
		UUWorksRequestWebGetPlayerSummaries_SetInput_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerSummaries.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerSummaries::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerSummaries.GetOutput");
		
		UUWorksRequestWebGetPlayerSummaries_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPlayerSummaries.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPlayerSummaries::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPlayerSummaries");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA2B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnership.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublisherAppOwnership::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnership.SetInput");
		
		UUWorksRequestWebGetPublisherAppOwnership_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnership.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublisherAppOwnership::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnership.GetOutput");
		
		UUWorksRequestWebGetPublisherAppOwnership_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPublisherAppOwnership.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPublisherAppOwnership::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPublisherAppOwnership");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA3D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnershipChanges.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PackageRowVersion                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CDKeyRowVersion                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublisherAppOwnershipChanges::SetInput(const class FString& Key, const class FString& PackageRowVersion, const class FString& CDKeyRowVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnershipChanges.SetInput");
		
		UUWorksRequestWebGetPublisherAppOwnershipChanges_SetInput_Params params {};
		params.Key = Key;
		params.PackageRowVersion = PackageRowVersion;
		params.CDKeyRowVersion = CDKeyRowVersion;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnershipChanges.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPublisherAppOwnershipChanges::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPublisherAppOwnershipChanges.GetOutput");
		
		UUWorksRequestWebGetPublisherAppOwnershipChanges_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPublisherAppOwnershipChanges.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPublisherAppOwnershipChanges::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPublisherAppOwnershipChanges");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA2B0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserGroupList.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserGroupList::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserGroupList.SetInput");
		
		UUWorksRequestWebGetUserGroupList_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserGroupList.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserGroupList::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserGroupList.GetOutput");
		
		UUWorksRequestWebGetUserGroupList_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUserGroupList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUserGroupList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUserGroupList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA5D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGrantPackage.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PackageID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ThirdPartyKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ThirdPartyAppID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGrantPackage::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t PackageID, const class FString& IPAddress, const class FString& ThirdPartyKey, int32_t ThirdPartyAppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGrantPackage.SetInput");
		
		UUWorksRequestWebGrantPackage_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.PackageID = PackageID;
		params.IPAddress = IPAddress;
		params.ThirdPartyKey = ThirdPartyKey;
		params.ThirdPartyAppID = ThirdPartyAppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGrantPackage.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGrantPackage::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGrantPackage.GetOutput");
		
		UUWorksRequestWebGrantPackage_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGrantPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGrantPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGrantPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FA880
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResolveVanityURL.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      VanityURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      URLType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResolveVanityURL::SetInput(const class FString& Key, const class FString& VanityURL, unsigned char URLType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResolveVanityURL.SetInput");
		
		UUWorksRequestWebResolveVanityURL_SetInput_Params params {};
		params.Key = Key;
		params.VanityURL = VanityURL;
		params.URLType = URLType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebResolveVanityURL.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebResolveVanityURL::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebResolveVanityURL.GetOutput");
		
		UUWorksRequestWebResolveVanityURL_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebResolveVanityURL.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebResolveVanityURL::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebResolveVanityURL");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FAD40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAuthenticateUser.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              SessionKey                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              EncryptedLoginKey                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAuthenticateUser::SetInput(const struct FUWorksSteamID& SteamID, TArray<unsigned char> SessionKey, TArray<unsigned char> EncryptedLoginKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAuthenticateUser.SetInput");
		
		UUWorksRequestWebAuthenticateUser_SetInput_Params params {};
		params.SteamID = SteamID;
		params.SessionKey = SessionKey;
		params.EncryptedLoginKey = EncryptedLoginKey;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAuthenticateUser.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAuthenticateUser::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAuthenticateUser.GetOutput");
		
		UUWorksRequestWebAuthenticateUser_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebAuthenticateUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebAuthenticateUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebAuthenticateUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FAED0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAuthenticateUserTicket.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAuthenticateUserTicket::SetInput(const class FString& Key, int32_t AppID, const class FString& Ticket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAuthenticateUserTicket.SetInput");
		
		UUWorksRequestWebAuthenticateUserTicket_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Ticket = Ticket;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebAuthenticateUserTicket.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebAuthenticateUserTicket::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebAuthenticateUserTicket.GetOutput");
		
		UUWorksRequestWebAuthenticateUserTicket_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebAuthenticateUserTicket.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebAuthenticateUserTicket::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebAuthenticateUserTicket");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FBB60
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGlobalAchievementPercentagesForApp.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGlobalAchievementPercentagesForApp::SetInput(const struct FUWorksGameID& GameID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGlobalAchievementPercentagesForApp.SetInput");
		
		UUWorksRequestWebGetGlobalAchievementPercentagesForApp_SetInput_Params params {};
		params.GameID = GameID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGlobalAchievementPercentagesForApp.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGlobalAchievementPercentagesForApp::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGlobalAchievementPercentagesForApp.GetOutput");
		
		UUWorksRequestWebGetGlobalAchievementPercentagesForApp_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetGlobalAchievementPercentagesForApp.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetGlobalAchievementPercentagesForApp::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetGlobalAchievementPercentagesForApp");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FBBE0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGlobalStatsForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartDate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGlobalStatsForGame::SetInput(int32_t AppID, int32_t Count, TArray<class FString> Name, int32_t StartDate, int32_t EndDate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGlobalStatsForGame.SetInput");
		
		UUWorksRequestWebGetGlobalStatsForGame_SetInput_Params params {};
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.StartDate = StartDate;
		params.EndDate = EndDate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetGlobalStatsForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetGlobalStatsForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetGlobalStatsForGame.GetOutput");
		
		UUWorksRequestWebGetGlobalStatsForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetGlobalStatsForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetGlobalStatsForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetGlobalStatsForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FBE40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNumberOfCurrentPlayers.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNumberOfCurrentPlayers::SetInput(int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNumberOfCurrentPlayers.SetInput");
		
		UUWorksRequestWebGetNumberOfCurrentPlayers_SetInput_Params params {};
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetNumberOfCurrentPlayers.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetNumberOfCurrentPlayers::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetNumberOfCurrentPlayers.GetOutput");
		
		UUWorksRequestWebGetNumberOfCurrentPlayers_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetNumberOfCurrentPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetNumberOfCurrentPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetNumberOfCurrentPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FBEC0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerAchievements.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerAchievements::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerAchievements.SetInput");
		
		UUWorksRequestWebGetPlayerAchievements_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetPlayerAchievements.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetPlayerAchievements::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetPlayerAchievements.GetOutput");
		
		UUWorksRequestWebGetPlayerAchievements_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetPlayerAchievements.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetPlayerAchievements::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetPlayerAchievements");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FC0A0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSchemaForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSchemaForGame::SetInput(const class FString& Key, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSchemaForGame.SetInput");
		
		UUWorksRequestWebGetSchemaForGame_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetSchemaForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetSchemaForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetSchemaForGame.GetOutput");
		
		UUWorksRequestWebGetSchemaForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetSchemaForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetSchemaForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetSchemaForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006F1400
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserStatsForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserStatsForGame::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserStatsForGame.SetInput");
		
		UUWorksRequestWebGetUserStatsForGame_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetUserStatsForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetUserStatsForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetUserStatsForGame.GetOutput");
		
		UUWorksRequestWebGetUserStatsForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetUserStatsForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetUserStatsForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetUserStatsForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FC240
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetUserStatsForGame.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Value                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetUserStatsForGame::SetInput(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<class FString> Name, TArray<int32_t> Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetUserStatsForGame.SetInput");
		
		UUWorksRequestWebSetUserStatsForGame_SetInput_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetUserStatsForGame.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetUserStatsForGame::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetUserStatsForGame.GetOutput");
		
		UUWorksRequestWebSetUserStatsForGame_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetUserStatsForGame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetUserStatsForGame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetUserStatsForGame");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FD090
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetItemPaymentRules.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksAssociatedWorkshopFiles              AssociatedWorkshopFiles                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPartnerAccounts                      PartnerAccounts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bMakeWorkshopFilesSubscribable                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValidateOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetItemPaymentRules::SetInput(const class FString& Key, int32_t AppID, int32_t GameItemID, const struct FUWorksAssociatedWorkshopFiles& AssociatedWorkshopFiles, const struct FUWorksPartnerAccounts& PartnerAccounts, bool bMakeWorkshopFilesSubscribable, bool bValidateOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetItemPaymentRules.SetInput");
		
		UUWorksRequestWebSetItemPaymentRules_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		params.AssociatedWorkshopFiles = AssociatedWorkshopFiles;
		params.PartnerAccounts = PartnerAccounts;
		params.bMakeWorkshopFilesSubscribable = bMakeWorkshopFilesSubscribable;
		params.bValidateOnly = bValidateOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebSetItemPaymentRules.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebSetItemPaymentRules::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebSetItemPaymentRules.GetOutput");
		
		UUWorksRequestWebSetItemPaymentRules_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebSetItemPaymentRules.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebSetItemPaymentRules::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebSetItemPaymentRules");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FCBD0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetFinalizedContributors.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetFinalizedContributors::SetInput(const class FString& Key, int32_t AppID, int32_t GameItemID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetFinalizedContributors.SetInput");
		
		UUWorksRequestWebGetFinalizedContributors_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetFinalizedContributors.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetFinalizedContributors::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetFinalizedContributors.GetOutput");
		
		UUWorksRequestWebGetFinalizedContributors_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetFinalizedContributors.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetFinalizedContributors::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetFinalizedContributors");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FCD20
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetItemDailyRevenue.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      itemId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetItemDailyRevenue::SetInput(const class FString& Key, int32_t AppID, const class FString& itemId, int32_t DateStart, int32_t DateEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetItemDailyRevenue.SetInput");
		
		UUWorksRequestWebGetItemDailyRevenue_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.DateStart = DateStart;
		params.DateEnd = DateEnd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebGetItemDailyRevenue.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebGetItemDailyRevenue::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebGetItemDailyRevenue.GetOutput");
		
		UUWorksRequestWebGetItemDailyRevenue_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebGetItemDailyRevenue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebGetItemDailyRevenue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebGetItemDailyRevenue");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FCF40
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebPopulateItemDescriptions.SetInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksLanguages                            Languages                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebPopulateItemDescriptions::SetInput(const class FString& Key, int32_t AppID, const struct FUWorksLanguages& Languages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebPopulateItemDescriptions.SetInput");
		
		UUWorksRequestWebPopulateItemDescriptions_SetInput_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Languages = Languages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006E04D0
	 * 		Name   -> Function UWorksWeb.UWorksRequestWebPopulateItemDescriptions.GetOutput
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Content                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUWorksRequestWebPopulateItemDescriptions::GetOutput(class FString* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UWorksRequestWebPopulateItemDescriptions.GetOutput");
		
		UUWorksRequestWebPopulateItemDescriptions_GetOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Content != nullptr)
			*Content = params.Content;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUWorksRequestWebPopulateItemDescriptions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUWorksRequestWebPopulateItemDescriptions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UWorksRequestWebPopulateItemDescriptions");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAppBetasNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAppBetasNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppBetasNode.OnRequestCompleted");
		
		UGetAppBetasNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE1F0
	 * 		Name   -> Function UWorksWeb.GetAppBetasNode.GetAppBetasNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAppBetasNode* UGetAppBetasNode::STATIC_GetAppBetasNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppBetasNode.GetAppBetasNode");
		
		UGetAppBetasNode_GetAppBetasNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAppBetasNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAppBetasNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAppBetasNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAppBuildsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAppBuildsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppBuildsNode.OnRequestCompleted");
		
		UGetAppBuildsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE310
	 * 		Name   -> Function UWorksWeb.GetAppBuildsNode.GetAppBuildsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAppBuildsNode* UGetAppBuildsNode::STATIC_GetAppBuildsNode(const class FString& Key, int32_t AppID, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppBuildsNode.GetAppBuildsNode");
		
		UGetAppBuildsNode_GetAppBuildsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAppBuildsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAppBuildsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAppBuildsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAppDepotVersionsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAppDepotVersionsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppDepotVersionsNode.OnRequestCompleted");
		
		UGetAppDepotVersionsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE460
	 * 		Name   -> Function UWorksWeb.GetAppDepotVersionsNode.GetAppDepotVersionsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAppDepotVersionsNode* UGetAppDepotVersionsNode::STATIC_GetAppDepotVersionsNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppDepotVersionsNode.GetAppDepotVersionsNode");
		
		UGetAppDepotVersionsNode_GetAppDepotVersionsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAppDepotVersionsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAppDepotVersionsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAppDepotVersionsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAppListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAppListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppListNode.OnRequestCompleted");
		
		UGetAppListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE580
	 * 		Name   -> Function UWorksWeb.GetAppListNode.GetAppListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class UGetAppListNode* UGetAppListNode::STATIC_GetAppListNode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppListNode.GetAppListNode");
		
		UGetAppListNode_GetAppListNode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAppListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAppListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAppListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetCheatingReportsListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetCheatingReportsListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCheatingReportsListNode.OnRequestCompleted");
		
		UGetCheatingReportsListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE5B0
	 * 		Name   -> Function UWorksWeb.GetCheatingReportsListNode.GetCheatingReportsListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetCheatingReportsListNode* UGetCheatingReportsListNode::STATIC_GetCheatingReportsListNode(const class FString& Key, int32_t AppID, int32_t TimeBegin, int32_t TimeEnd, bool bIncludeReports, bool bIncludeBans, const class FString& ReportIDMin)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCheatingReportsListNode.GetCheatingReportsListNode");
		
		UGetCheatingReportsListNode_GetCheatingReportsListNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeBegin = TimeBegin;
		params.TimeEnd = TimeEnd;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.ReportIDMin = ReportIDMin;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetCheatingReportsListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetCheatingReportsListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetCheatingReportsListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPlayersBannedNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPlayersBannedNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayersBannedNode.OnRequestCompleted");
		
		UGetPlayersBannedNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE850
	 * 		Name   -> Function UWorksWeb.GetPlayersBannedNode.GetPlayersBannedNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPlayersBannedNode* UGetPlayersBannedNode::STATIC_GetPlayersBannedNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayersBannedNode.GetPlayersBannedNode");
		
		UGetPlayersBannedNode_GetPlayersBannedNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPlayersBannedNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPlayersBannedNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPlayersBannedNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetServerListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetServerListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerListNode.OnRequestCompleted");
		
		UGetServerListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FE970
	 * 		Name   -> Function UWorksWeb.GetServerListNode.GetServerListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Filter                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Limit                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetServerListNode* UGetServerListNode::STATIC_GetServerListNode(const class FString& Key, const class FString& Filter, int32_t Limit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerListNode.GetServerListNode");
		
		UGetServerListNode_GetServerListNode_Params params {};
		params.Key = Key;
		params.Filter = Filter;
		params.Limit = Limit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetServerListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetServerListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetServerListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetServersAtAddressNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetServersAtAddressNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServersAtAddressNode.OnRequestCompleted");
		
		UGetServersAtAddressNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FEB10
	 * 		Name   -> Function UWorksWeb.GetServersAtAddressNode.GetServersAtAddressNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Addr                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetServersAtAddressNode* UGetServersAtAddressNode::STATIC_GetServersAtAddressNode(const class FString& Addr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServersAtAddressNode.GetServersAtAddressNode");
		
		UGetServersAtAddressNode_GetServersAtAddressNode_Params params {};
		params.Addr = Addr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetServersAtAddressNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetServersAtAddressNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetServersAtAddressNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FEBF0
	 * 		Name   -> Function UWorksWeb.SetAppBuildLiveNode.SetAppBuildLiveNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BuildID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      BetaKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetAppBuildLiveNode* USetAppBuildLiveNode::STATIC_SetAppBuildLiveNode(const class FString& Key, int32_t AppID, int32_t BuildID, const class FString& BetaKey, const class FString& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetAppBuildLiveNode.SetAppBuildLiveNode");
		
		USetAppBuildLiveNode_SetAppBuildLiveNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.BuildID = BuildID;
		params.BetaKey = BetaKey;
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetAppBuildLiveNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetAppBuildLiveNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetAppBuildLiveNode.OnRequestCompleted");
		
		USetAppBuildLiveNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetAppBuildLiveNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetAppBuildLiveNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetAppBuildLiveNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FEE60
	 * 		Name   -> Function UWorksWeb.UpToDateCheckNode.UpToDateCheckNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Version                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUpToDateCheckNode* UUpToDateCheckNode::STATIC_UpToDateCheckNode(int32_t AppID, int32_t Version)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpToDateCheckNode.UpToDateCheckNode");
		
		UUpToDateCheckNode_UpToDateCheckNode_Params params {};
		params.AppID = AppID;
		params.Version = Version;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.UpToDateCheckNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUpToDateCheckNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpToDateCheckNode.OnRequestCompleted");
		
		UUpToDateCheckNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUpToDateCheckNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpToDateCheckNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UpToDateCheckNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FF0A0
	 * 		Name   -> Function UWorksWeb.PostGameDataFrameNode.PostGameDataFrameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      BroadcastID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      FrameData                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UPostGameDataFrameNode* UPostGameDataFrameNode::STATIC_PostGameDataFrameNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& BroadcastID, const class FString& FrameData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.PostGameDataFrameNode.PostGameDataFrameNode");
		
		UPostGameDataFrameNode_PostGameDataFrameNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.BroadcastID = BroadcastID;
		params.FrameData = FrameData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.PostGameDataFrameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPostGameDataFrameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.PostGameDataFrameNode.OnRequestCompleted");
		
		UPostGameDataFrameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPostGameDataFrameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPostGameDataFrameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.PostGameDataFrameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00700B80
	 * 		Name   -> Function UWorksWeb.ReportPlayerCheatingNode.ReportPlayerCheatingNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDReporter                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHeuristic                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDetection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayerReport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNoReportID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SuspicionStartTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Severity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UReportPlayerCheatingNode* UReportPlayerCheatingNode::STATIC_ReportPlayerCheatingNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& SteamIDReporter, int32_t AppData, bool bHeuristic, bool bDetection, bool bPlayerReport, bool bNoReportID, int32_t GameMode, int32_t SuspicionStartTime, int32_t Severity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportPlayerCheatingNode.ReportPlayerCheatingNode");
		
		UReportPlayerCheatingNode_ReportPlayerCheatingNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SteamIDReporter = SteamIDReporter;
		params.AppData = AppData;
		params.bHeuristic = bHeuristic;
		params.bDetection = bDetection;
		params.bPlayerReport = bPlayerReport;
		params.bNoReportID = bNoReportID;
		params.GameMode = GameMode;
		params.SuspicionStartTime = SuspicionStartTime;
		params.Severity = Severity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ReportPlayerCheatingNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReportPlayerCheatingNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportPlayerCheatingNode.OnRequestCompleted");
		
		UReportPlayerCheatingNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UReportPlayerCheatingNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReportPlayerCheatingNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ReportPlayerCheatingNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00700F10
	 * 		Name   -> Function UWorksWeb.RequestPlayerGameBanNode.RequestPlayerGameBanNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ReportID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDelayBan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URequestPlayerGameBanNode* URequestPlayerGameBanNode::STATIC_RequestPlayerGameBanNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const struct FUWorksSteamID& ReportID, const class FString& CheatDescription, int32_t Duration, bool bDelayBan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestPlayerGameBanNode.RequestPlayerGameBanNode");
		
		URequestPlayerGameBanNode_RequestPlayerGameBanNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ReportID = ReportID;
		params.CheatDescription = CheatDescription;
		params.Duration = Duration;
		params.bDelayBan = bDelayBan;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RequestPlayerGameBanNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URequestPlayerGameBanNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestPlayerGameBanNode.OnRequestCompleted");
		
		URequestPlayerGameBanNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URequestPlayerGameBanNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URequestPlayerGameBanNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RequestPlayerGameBanNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007003D0
	 * 		Name   -> Function UWorksWeb.RemovePlayerGameBanNode.RemovePlayerGameBanNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URemovePlayerGameBanNode* URemovePlayerGameBanNode::STATIC_RemovePlayerGameBanNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RemovePlayerGameBanNode.RemovePlayerGameBanNode");
		
		URemovePlayerGameBanNode_RemovePlayerGameBanNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RemovePlayerGameBanNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URemovePlayerGameBanNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RemovePlayerGameBanNode.OnRequestCompleted");
		
		URemovePlayerGameBanNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URemovePlayerGameBanNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemovePlayerGameBanNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RemovePlayerGameBanNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetCheatingReportsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetCheatingReportsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCheatingReportsNode.OnRequestCompleted");
		
		UGetCheatingReportsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007000F0
	 * 		Name   -> Function UWorksWeb.GetCheatingReportsNode.GetCheatingReportsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeBegin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportIDMin                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeReports                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBans                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetCheatingReportsNode* UGetCheatingReportsNode::STATIC_GetCheatingReportsNode(const class FString& Key, int32_t AppID, int32_t TimeEnd, int32_t TimeBegin, const class FString& ReportIDMin, bool bIncludeReports, bool bIncludeBans, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCheatingReportsNode.GetCheatingReportsNode");
		
		UGetCheatingReportsNode_GetCheatingReportsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.TimeEnd = TimeEnd;
		params.TimeBegin = TimeBegin;
		params.ReportIDMin = ReportIDMin;
		params.bIncludeReports = bIncludeReports;
		params.bIncludeBans = bIncludeBans;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetCheatingReportsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetCheatingReportsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetCheatingReportsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007011B0
	 * 		Name   -> Function UWorksWeb.RequestVacStatusForUserNode.RequestVacStatusForUserNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URequestVacStatusForUserNode* URequestVacStatusForUserNode::STATIC_RequestVacStatusForUserNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestVacStatusForUserNode.RequestVacStatusForUserNode");
		
		URequestVacStatusForUserNode_RequestVacStatusForUserNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RequestVacStatusForUserNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URequestVacStatusForUserNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestVacStatusForUserNode.OnRequestCompleted");
		
		URequestVacStatusForUserNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URequestVacStatusForUserNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URequestVacStatusForUserNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RequestVacStatusForUserNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00701390
	 * 		Name   -> Function UWorksWeb.StartSecureMultiplayerSessionNode.StartSecureMultiplayerSessionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStartSecureMultiplayerSessionNode* UStartSecureMultiplayerSessionNode::STATIC_StartSecureMultiplayerSessionNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartSecureMultiplayerSessionNode.StartSecureMultiplayerSessionNode");
		
		UStartSecureMultiplayerSessionNode_StartSecureMultiplayerSessionNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.StartSecureMultiplayerSessionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStartSecureMultiplayerSessionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartSecureMultiplayerSessionNode.OnRequestCompleted");
		
		UStartSecureMultiplayerSessionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStartSecureMultiplayerSessionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStartSecureMultiplayerSessionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.StartSecureMultiplayerSessionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.EndSecureMultiplayerSessionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UEndSecureMultiplayerSessionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EndSecureMultiplayerSessionNode.OnRequestCompleted");
		
		UEndSecureMultiplayerSessionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x006FFF10
	 * 		Name   -> Function UWorksWeb.EndSecureMultiplayerSessionNode.EndSecureMultiplayerSessionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UEndSecureMultiplayerSessionNode* UEndSecureMultiplayerSessionNode::STATIC_EndSecureMultiplayerSessionNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& SessionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EndSecureMultiplayerSessionNode.EndSecureMultiplayerSessionNode");
		
		UEndSecureMultiplayerSessionNode_EndSecureMultiplayerSessionNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.SessionId = SessionId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEndSecureMultiplayerSessionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEndSecureMultiplayerSessionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.EndSecureMultiplayerSessionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00700520
	 * 		Name   -> Function UWorksWeb.ReportCheatDataNode.ReportCheatDataNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PathAndFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      WebCheatURL                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeNow                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStarted                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TimeStopped                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameProcessID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CheatProcessID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CheatParamB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UReportCheatDataNode* UReportCheatDataNode::STATIC_ReportCheatDataNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& PathAndFileName, const class FString& WebCheatURL, const class FString& TimeNow, const class FString& TimeStarted, const class FString& TimeStopped, const class FString& CheatName, int32_t GameProcessID, int32_t CheatProcessID, const class FString& CheatParamA, const class FString& CheatParamB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportCheatDataNode.ReportCheatDataNode");
		
		UReportCheatDataNode_ReportCheatDataNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PathAndFileName = PathAndFileName;
		params.WebCheatURL = WebCheatURL;
		params.TimeNow = TimeNow;
		params.TimeStarted = TimeStarted;
		params.TimeStopped = TimeStopped;
		params.CheatName = CheatName;
		params.GameProcessID = GameProcessID;
		params.CheatProcessID = CheatProcessID;
		params.CheatParamA = CheatParamA;
		params.CheatParamB = CheatParamB;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ReportCheatDataNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReportCheatDataNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportCheatDataNode.OnRequestCompleted");
		
		UReportCheatDataNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UReportCheatDataNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReportCheatDataNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ReportCheatDataNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00701660
	 * 		Name   -> Function UWorksWeb.ReportAbuseNode.ReportAbuseNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDActor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamIDTarget                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      AbuseType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      ContentType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Description                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      GID                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UReportAbuseNode* UReportAbuseNode::STATIC_ReportAbuseNode(const class FString& Key, const struct FUWorksSteamID& SteamIDActor, const struct FUWorksSteamID& SteamIDTarget, int32_t AppID, unsigned char AbuseType, unsigned char ContentType, const class FString& Description, const class FString& GID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportAbuseNode.ReportAbuseNode");
		
		UReportAbuseNode_ReportAbuseNode_Params params {};
		params.Key = Key;
		params.SteamIDActor = SteamIDActor;
		params.SteamIDTarget = SteamIDTarget;
		params.AppID = AppID;
		params.AbuseType = AbuseType;
		params.ContentType = ContentType;
		params.Description = Description;
		params.GID = GID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ReportAbuseNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReportAbuseNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ReportAbuseNode.OnRequestCompleted");
		
		UReportAbuseNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UReportAbuseNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReportAbuseNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ReportAbuseNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetTradeHistoryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetTradeHistoryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeHistoryNode.OnRequestCompleted");
		
		UGetTradeHistoryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00702E00
	 * 		Name   -> Function UWorksWeb.GetTradeHistoryNode.GetTradeHistoryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxTrades                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartAfterTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StartAfterTradeID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNavigatingBack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeFailed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeTotal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetTradeHistoryNode* UGetTradeHistoryNode::STATIC_GetTradeHistoryNode(const class FString& Key, int32_t MaxTrades, int32_t StartAfterTime, const class FString& StartAfterTradeID, bool bNavigatingBack, bool bGetDescription, const class FString& Language, bool bIncludeFailed, bool bIncludeTotal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeHistoryNode.GetTradeHistoryNode");
		
		UGetTradeHistoryNode_GetTradeHistoryNode_Params params {};
		params.Key = Key;
		params.MaxTrades = MaxTrades;
		params.StartAfterTime = StartAfterTime;
		params.StartAfterTradeID = StartAfterTradeID;
		params.bNavigatingBack = bNavigatingBack;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bIncludeFailed = bIncludeFailed;
		params.bIncludeTotal = bIncludeTotal;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetTradeHistoryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetTradeHistoryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetTradeHistoryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FlushInventoryCacheNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFlushInventoryCacheNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushInventoryCacheNode.OnRequestCompleted");
		
		UFlushInventoryCacheNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00702C20
	 * 		Name   -> Function UWorksWeb.FlushInventoryCacheNode.FlushInventoryCacheNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFlushInventoryCacheNode* UFlushInventoryCacheNode::STATIC_FlushInventoryCacheNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushInventoryCacheNode.FlushInventoryCacheNode");
		
		UFlushInventoryCacheNode_FlushInventoryCacheNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFlushInventoryCacheNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlushInventoryCacheNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FlushInventoryCacheNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FlushAssetAppearanceCacheNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFlushAssetAppearanceCacheNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushAssetAppearanceCacheNode.OnRequestCompleted");
		
		UFlushAssetAppearanceCacheNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007029E0
	 * 		Name   -> Function UWorksWeb.FlushAssetAppearanceCacheNode.FlushAssetAppearanceCacheNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFlushAssetAppearanceCacheNode* UFlushAssetAppearanceCacheNode::STATIC_FlushAssetAppearanceCacheNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushAssetAppearanceCacheNode.FlushAssetAppearanceCacheNode");
		
		UFlushAssetAppearanceCacheNode_FlushAssetAppearanceCacheNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFlushAssetAppearanceCacheNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlushAssetAppearanceCacheNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FlushAssetAppearanceCacheNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FlushContextCacheNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFlushContextCacheNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushContextCacheNode.OnRequestCompleted");
		
		UFlushContextCacheNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00702B00
	 * 		Name   -> Function UWorksWeb.FlushContextCacheNode.FlushContextCacheNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFlushContextCacheNode* UFlushContextCacheNode::STATIC_FlushContextCacheNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FlushContextCacheNode.FlushContextCacheNode");
		
		UFlushContextCacheNode_FlushContextCacheNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFlushContextCacheNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlushContextCacheNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FlushContextCacheNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetTradeOffersNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetTradeOffersNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOffersNode.OnRequestCompleted");
		
		UGetTradeOffersNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00703380
	 * 		Name   -> Function UWorksWeb.GetTradeOffersNode.GetTradeOffersNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetSentOffers                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetReceivedOffers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGetDescription                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bActiveOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHistoricalOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeHistoricalCutoff                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetTradeOffersNode* UGetTradeOffersNode::STATIC_GetTradeOffersNode(const class FString& Key, bool bGetSentOffers, bool bGetReceivedOffers, bool bGetDescription, const class FString& Language, bool bActiveOnly, bool bHistoricalOnly, int32_t TimeHistoricalCutoff)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOffersNode.GetTradeOffersNode");
		
		UGetTradeOffersNode_GetTradeOffersNode_Params params {};
		params.Key = Key;
		params.bGetSentOffers = bGetSentOffers;
		params.bGetReceivedOffers = bGetReceivedOffers;
		params.bGetDescription = bGetDescription;
		params.Language = Language;
		params.bActiveOnly = bActiveOnly;
		params.bHistoricalOnly = bHistoricalOnly;
		params.TimeHistoricalCutoff = TimeHistoricalCutoff;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetTradeOffersNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetTradeOffersNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetTradeOffersNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetTradeOfferNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetTradeOfferNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOfferNode.OnRequestCompleted");
		
		UGetTradeOfferNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00703180
	 * 		Name   -> Function UWorksWeb.GetTradeOfferNode.GetTradeOfferNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetTradeOfferNode* UGetTradeOfferNode::STATIC_GetTradeOfferNode(const class FString& Key, const class FString& TradeOfferID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOfferNode.GetTradeOfferNode");
		
		UGetTradeOfferNode_GetTradeOfferNode_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetTradeOfferNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetTradeOfferNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetTradeOfferNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetTradeOffersSummaryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetTradeOffersSummaryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOffersSummaryNode.OnRequestCompleted");
		
		UGetTradeOffersSummaryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00703680
	 * 		Name   -> Function UWorksWeb.GetTradeOffersSummaryNode.GetTradeOffersSummaryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeLastVisit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetTradeOffersSummaryNode* UGetTradeOffersSummaryNode::STATIC_GetTradeOffersSummaryNode(const class FString& Key, int32_t TimeLastVisit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetTradeOffersSummaryNode.GetTradeOffersSummaryNode");
		
		UGetTradeOffersSummaryNode_GetTradeOffersSummaryNode_Params params {};
		params.Key = Key;
		params.TimeLastVisit = TimeLastVisit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetTradeOffersSummaryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetTradeOffersSummaryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetTradeOffersSummaryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.DeclineTradeOfferNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDeclineTradeOfferNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeclineTradeOfferNode.OnRequestCompleted");
		
		UDeclineTradeOfferNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00702870
	 * 		Name   -> Function UWorksWeb.DeclineTradeOfferNode.DeclineTradeOfferNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UDeclineTradeOfferNode* UDeclineTradeOfferNode::STATIC_DeclineTradeOfferNode(const class FString& Key, const class FString& TradeOfferID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeclineTradeOfferNode.DeclineTradeOfferNode");
		
		UDeclineTradeOfferNode_DeclineTradeOfferNode_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDeclineTradeOfferNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeclineTradeOfferNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.DeclineTradeOfferNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CancelTradeOfferNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCancelTradeOfferNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelTradeOfferNode.OnRequestCompleted");
		
		UCancelTradeOfferNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00702700
	 * 		Name   -> Function UWorksWeb.CancelTradeOfferNode.CancelTradeOfferNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TradeOfferID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCancelTradeOfferNode* UCancelTradeOfferNode::STATIC_CancelTradeOfferNode(const class FString& Key, const class FString& TradeOfferID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelTradeOfferNode.CancelTradeOfferNode");
		
		UCancelTradeOfferNode_CancelTradeOfferNode_Params params {};
		params.Key = Key;
		params.TradeOfferID = TradeOfferID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCancelTradeOfferNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCancelTradeOfferNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CancelTradeOfferNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetMarketEligibilityNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetMarketEligibilityNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetMarketEligibilityNode.OnRequestCompleted");
		
		UGetMarketEligibilityNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007040D0
	 * 		Name   -> Function UWorksWeb.GetMarketEligibilityNode.GetMarketEligibilityNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetMarketEligibilityNode* UGetMarketEligibilityNode::STATIC_GetMarketEligibilityNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetMarketEligibilityNode.GetMarketEligibilityNode");
		
		UGetMarketEligibilityNode_GetMarketEligibilityNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetMarketEligibilityNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetMarketEligibilityNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetMarketEligibilityNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CancelAppListingsForUserNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCancelAppListingsForUserNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelAppListingsForUserNode.OnRequestCompleted");
		
		UCancelAppListingsForUserNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00703DA0
	 * 		Name   -> Function UWorksWeb.CancelAppListingsForUserNode.CancelAppListingsForUserNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bSynchronous                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCancelAppListingsForUserNode* UCancelAppListingsForUserNode::STATIC_CancelAppListingsForUserNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bSynchronous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelAppListingsForUserNode.CancelAppListingsForUserNode");
		
		UCancelAppListingsForUserNode_CancelAppListingsForUserNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bSynchronous = bSynchronous;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCancelAppListingsForUserNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCancelAppListingsForUserNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CancelAppListingsForUserNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAssetIDNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAssetIDNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetIDNode.OnRequestCompleted");
		
		UGetAssetIDNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00703F30
	 * 		Name   -> Function UWorksWeb.GetAssetIDNode.GetAssetIDNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ListingID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAssetIDNode* UGetAssetIDNode::STATIC_GetAssetIDNode(const class FString& Key, int32_t AppID, const class FString& ListingID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetIDNode.GetAssetIDNode");
		
		UGetAssetIDNode_GetAssetIDNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ListingID = ListingID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAssetIDNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAssetIDNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAssetIDNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPopularNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPopularNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPopularNode.OnRequestCompleted");
		
		UGetPopularNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007041F0
	 * 		Name   -> Function UWorksWeb.GetPopularNode.GetPopularNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Rows                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            FilterAppID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPopularNode* UGetPopularNode::STATIC_GetPopularNode(const class FString& Key, const class FString& Language, int32_t Rows, int32_t Start, int32_t FilterAppID, int32_t ECurrency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPopularNode.GetPopularNode");
		
		UGetPopularNode_GetPopularNode_Params params {};
		params.Key = Key;
		params.Language = Language;
		params.Rows = Rows;
		params.Start = Start;
		params.FilterAppID = FilterAppID;
		params.ECurrency = ECurrency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPopularNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPopularNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPopularNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CanTradeNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCanTradeNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CanTradeNode.OnRequestCompleted");
		
		UCanTradeNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705040
	 * 		Name   -> Function UWorksWeb.CanTradeNode.CanTradeNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              TargetID                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UCanTradeNode* UCanTradeNode::STATIC_CanTradeNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamID& TargetID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CanTradeNode.CanTradeNode");
		
		UCanTradeNode_CanTradeNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TargetID = TargetID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanTradeNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanTradeNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CanTradeNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FinalizeAssetTransactionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFinalizeAssetTransactionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FinalizeAssetTransactionNode.OnRequestCompleted");
		
		UFinalizeAssetTransactionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007051C0
	 * 		Name   -> Function UWorksWeb.FinalizeAssetTransactionNode.FinalizeAssetTransactionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      TxnID                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFinalizeAssetTransactionNode* UFinalizeAssetTransactionNode::STATIC_FinalizeAssetTransactionNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& TxnID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FinalizeAssetTransactionNode.FinalizeAssetTransactionNode");
		
		UFinalizeAssetTransactionNode_FinalizeAssetTransactionNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.TxnID = TxnID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFinalizeAssetTransactionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFinalizeAssetTransactionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FinalizeAssetTransactionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAssetClassInfoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAssetClassInfoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetClassInfoNode.OnRequestCompleted");
		
		UGetAssetClassInfoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705430
	 * 		Name   -> Function UWorksWeb.GetAssetClassInfoNode.GetAssetClassInfoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ClassCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ClassID0                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InstanceID0                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAssetClassInfoNode* UGetAssetClassInfoNode::STATIC_GetAssetClassInfoNode(const class FString& Key, int32_t AppID, int32_t ClassCount, const class FString& ClassID0, const class FString& Language, const class FString& InstanceID0)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetClassInfoNode.GetAssetClassInfoNode");
		
		UGetAssetClassInfoNode_GetAssetClassInfoNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ClassCount = ClassCount;
		params.ClassID0 = ClassID0;
		params.Language = Language;
		params.InstanceID0 = InstanceID0;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAssetClassInfoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAssetClassInfoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAssetClassInfoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAssetPricesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAssetPricesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetPricesNode.OnRequestCompleted");
		
		UGetAssetPricesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705720
	 * 		Name   -> Function UWorksWeb.GetAssetPricesNode.GetAssetPricesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAssetPricesNode* UGetAssetPricesNode::STATIC_GetAssetPricesNode(const class FString& Key, int32_t AppID, const class FString& Currency, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAssetPricesNode.GetAssetPricesNode");
		
		UGetAssetPricesNode_GetAssetPricesNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Currency = Currency;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAssetPricesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAssetPricesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAssetPricesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetExportedAssetsForUserNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetExportedAssetsForUserNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetExportedAssetsForUserNode.OnRequestCompleted");
		
		UGetExportedAssetsForUserNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705950
	 * 		Name   -> Function UWorksWeb.GetExportedAssetsForUserNode.GetExportedAssetsForUserNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetExportedAssetsForUserNode* UGetExportedAssetsForUserNode::STATIC_GetExportedAssetsForUserNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetExportedAssetsForUserNode.GetExportedAssetsForUserNode");
		
		UGetExportedAssetsForUserNode_GetExportedAssetsForUserNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetExportedAssetsForUserNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetExportedAssetsForUserNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetExportedAssetsForUserNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetMarketPricesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetMarketPricesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetMarketPricesNode.OnRequestCompleted");
		
		UGetMarketPricesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705B30
	 * 		Name   -> Function UWorksWeb.GetMarketPricesNode.GetMarketPricesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetMarketPricesNode* UGetMarketPricesNode::STATIC_GetMarketPricesNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetMarketPricesNode.GetMarketPricesNode");
		
		UGetMarketPricesNode_GetMarketPricesNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetMarketPricesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetMarketPricesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetMarketPricesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00705C50
	 * 		Name   -> Function UWorksWeb.StartAssetTransactionNode.StartAssetTransactionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID0                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AssetQuantity0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Referrer                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bClientAuth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStartAssetTransactionNode* UStartAssetTransactionNode::STATIC_StartAssetTransactionNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& AssetID0, int32_t AssetQuantity0, const class FString& Currency, const class FString& Language, const class FString& IPAddress, const class FString& Referrer, bool bClientAuth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartAssetTransactionNode.StartAssetTransactionNode");
		
		UStartAssetTransactionNode_StartAssetTransactionNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.AssetID0 = AssetID0;
		params.AssetQuantity0 = AssetQuantity0;
		params.Currency = Currency;
		params.Language = Language;
		params.IPAddress = IPAddress;
		params.Referrer = Referrer;
		params.bClientAuth = bClientAuth;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.StartAssetTransactionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStartAssetTransactionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartAssetTransactionNode.OnRequestCompleted");
		
		UStartAssetTransactionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStartAssetTransactionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStartAssetTransactionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.StartAssetTransactionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007060F0
	 * 		Name   -> Function UWorksWeb.StartTradeNode.StartTradeNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyA                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              PartyB                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UStartTradeNode* UStartTradeNode::STATIC_StartTradeNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& PartyA, const struct FUWorksSteamID& PartyB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartTradeNode.StartTradeNode");
		
		UStartTradeNode_StartTradeNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.PartyA = PartyA;
		params.PartyB = PartyB;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.StartTradeNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStartTradeNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.StartTradeNode.OnRequestCompleted");
		
		UStartTradeNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStartTradeNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStartTradeNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.StartTradeNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetHistoryCommandDetailsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetHistoryCommandDetailsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetHistoryCommandDetailsNode.OnRequestCompleted");
		
		UGetHistoryCommandDetailsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00706870
	 * 		Name   -> Function UWorksWeb.GetHistoryCommandDetailsNode.GetHistoryCommandDetailsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Arguments                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetHistoryCommandDetailsNode* UGetHistoryCommandDetailsNode::STATIC_GetHistoryCommandDetailsNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& Command, const class FString& ContextID, const class FString& Arguments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetHistoryCommandDetailsNode.GetHistoryCommandDetailsNode");
		
		UGetHistoryCommandDetailsNode_GetHistoryCommandDetailsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.Command = Command;
		params.ContextID = ContextID;
		params.Arguments = Arguments;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetHistoryCommandDetailsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetHistoryCommandDetailsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetHistoryCommandDetailsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUserHistoryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUserHistoryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserHistoryNode.OnRequestCompleted");
		
		UGetUserHistoryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00706B60
	 * 		Name   -> Function UWorksWeb.GetUserHistoryNode.GetUserHistoryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetUserHistoryNode* UGetUserHistoryNode::STATIC_GetUserHistoryNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, int32_t StartTime, int32_t EndTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserHistoryNode.GetUserHistoryNode");
		
		UGetUserHistoryNode_GetUserHistoryNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.StartTime = StartTime;
		params.EndTime = EndTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUserHistoryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUserHistoryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUserHistoryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.HistoryExecuteCommandsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHistoryExecuteCommandsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.HistoryExecuteCommandsNode.OnRequestCompleted");
		
		UHistoryExecuteCommandsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00706DB0
	 * 		Name   -> Function UWorksWeb.HistoryExecuteCommandsNode.HistoryExecuteCommandsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ActorId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UHistoryExecuteCommandsNode* UHistoryExecuteCommandsNode::STATIC_HistoryExecuteCommandsNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const class FString& ContextID, const class FString& ActorId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.HistoryExecuteCommandsNode.HistoryExecuteCommandsNode");
		
		UHistoryExecuteCommandsNode_HistoryExecuteCommandsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ContextID = ContextID;
		params.ActorId = ActorId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHistoryExecuteCommandsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHistoryExecuteCommandsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.HistoryExecuteCommandsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00707020
	 * 		Name   -> Function UWorksWeb.SupportGetAssetHistoryNode.SupportGetAssetHistoryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AssetID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ContextID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USupportGetAssetHistoryNode* USupportGetAssetHistoryNode::STATIC_SupportGetAssetHistoryNode(const class FString& Key, int32_t AppID, const class FString& AssetID, const class FString& ContextID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SupportGetAssetHistoryNode.SupportGetAssetHistoryNode");
		
		USupportGetAssetHistoryNode_SupportGetAssetHistoryNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.AssetID = AssetID;
		params.ContextID = ContextID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SupportGetAssetHistoryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USupportGetAssetHistoryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SupportGetAssetHistoryNode.OnRequestCompleted");
		
		USupportGetAssetHistoryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USupportGetAssetHistoryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USupportGetAssetHistoryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SupportGetAssetHistoryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CreateSessionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreateSessionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CreateSessionNode.OnRequestCompleted");
		
		UCreateSessionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00707CD0
	 * 		Name   -> Function UWorksWeb.CreateSessionNode.CreateSessionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Context                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UCreateSessionNode* UCreateSessionNode::STATIC_CreateSessionNode(const class FString& Key, int32_t AppID, const class FString& Context, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CreateSessionNode.CreateSessionNode");
		
		UCreateSessionNode_CreateSessionNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Context = Context;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCreateSessionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCreateSessionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CreateSessionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00708810
	 * 		Name   -> Function UWorksWeb.UpdateSessionNode.UpdateSessionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksTitle                                title                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksUsers                                Users                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UUpdateSessionNode* UUpdateSessionNode::STATIC_UpdateSessionNode(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksTitle& title, const struct FUWorksUsers& Users, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpdateSessionNode.UpdateSessionNode");
		
		UUpdateSessionNode_UpdateSessionNode_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.title = title;
		params.Users = Users;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.UpdateSessionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUpdateSessionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpdateSessionNode.OnRequestCompleted");
		
		UUpdateSessionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUpdateSessionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpdateSessionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UpdateSessionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.EnumerateSessionsForAppNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UEnumerateSessionsForAppNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateSessionsForAppNode.OnRequestCompleted");
		
		UEnumerateSessionsForAppNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00708290
	 * 		Name   -> Function UWorksWeb.EnumerateSessionsForAppNode.EnumerateSessionsForAppNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAllUserMessages                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAuthUserMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UEnumerateSessionsForAppNode* UEnumerateSessionsForAppNode::STATIC_EnumerateSessionsForAppNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, bool bIncludeAllUserMessages, bool bIncludeAuthUserMessage, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateSessionsForAppNode.EnumerateSessionsForAppNode");
		
		UEnumerateSessionsForAppNode_EnumerateSessionsForAppNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.bIncludeAllUserMessages = bIncludeAllUserMessages;
		params.bIncludeAuthUserMessage = bIncludeAuthUserMessage;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnumerateSessionsForAppNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnumerateSessionsForAppNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.EnumerateSessionsForAppNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetSessionDetailsForAppNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetSessionDetailsForAppNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSessionDetailsForAppNode.OnRequestCompleted");
		
		UGetSessionDetailsForAppNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007084F0
	 * 		Name   -> Function UWorksWeb.GetSessionDetailsForAppNode.GetSessionDetailsForAppNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSessions                             Sessions                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetSessionDetailsForAppNode* UGetSessionDetailsForAppNode::STATIC_GetSessionDetailsForAppNode(const class FString& Key, const struct FUWorksSessions& Sessions, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSessionDetailsForAppNode.GetSessionDetailsForAppNode");
		
		UGetSessionDetailsForAppNode_GetSessionDetailsForAppNode_Params params {};
		params.Key = Key;
		params.Sessions = Sessions;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetSessionDetailsForAppNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetSessionDetailsForAppNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetSessionDetailsForAppNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007086C0
	 * 		Name   -> Function UWorksWeb.RequestNotificationsNode.RequestNotificationsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URequestNotificationsNode* URequestNotificationsNode::STATIC_RequestNotificationsNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestNotificationsNode.RequestNotificationsNode");
		
		URequestNotificationsNode_RequestNotificationsNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RequestNotificationsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URequestNotificationsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RequestNotificationsNode.OnRequestCompleted");
		
		URequestNotificationsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URequestNotificationsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URequestNotificationsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RequestNotificationsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.DeleteSessionNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDeleteSessionNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteSessionNode.OnRequestCompleted");
		
		UDeleteSessionNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007080B0
	 * 		Name   -> Function UWorksWeb.DeleteSessionNode.DeleteSessionNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UDeleteSessionNode* UDeleteSessionNode::STATIC_DeleteSessionNode(const class FString& Key, const class FString& SessionId, int32_t AppID, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteSessionNode.DeleteSessionNode");
		
		UDeleteSessionNode_DeleteSessionNode_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDeleteSessionNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeleteSessionNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.DeleteSessionNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.DeleteSessionBatchNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDeleteSessionBatchNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteSessionBatchNode.OnRequestCompleted");
		
		UDeleteSessionBatchNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00707F10
	 * 		Name   -> Function UWorksWeb.DeleteSessionBatchNode.DeleteSessionBatchNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SessionId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UDeleteSessionBatchNode* UDeleteSessionBatchNode::STATIC_DeleteSessionBatchNode(const class FString& Key, const class FString& SessionId, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteSessionBatchNode.DeleteSessionBatchNode");
		
		UDeleteSessionBatchNode_DeleteSessionBatchNode_Params params {};
		params.Key = Key;
		params.SessionId = SessionId;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDeleteSessionBatchNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeleteSessionBatchNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.DeleteSessionBatchNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAccountListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAccountListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAccountListNode.OnRequestCompleted");
		
		UGetAccountListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709C10
	 * 		Name   -> Function UWorksWeb.GetAccountListNode.GetAccountListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAccountListNode* UGetAccountListNode::STATIC_GetAccountListNode(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAccountListNode.GetAccountListNode");
		
		UGetAccountListNode_GetAccountListNode_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAccountListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAccountListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAccountListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CreateAccountNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreateAccountNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CreateAccountNode.OnRequestCompleted");
		
		UCreateAccountNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709950
	 * 		Name   -> Function UWorksWeb.CreateAccountNode.CreateAccountNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCreateAccountNode* UCreateAccountNode::STATIC_CreateAccountNode(const class FString& Key, int32_t AppID, const class FString& Memo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CreateAccountNode.CreateAccountNode");
		
		UCreateAccountNode_CreateAccountNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Memo = Memo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCreateAccountNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCreateAccountNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CreateAccountNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070A4C0
	 * 		Name   -> Function UWorksWeb.SetMemoNode.SetMemoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Memo                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetMemoNode* USetMemoNode::STATIC_SetMemoNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Memo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetMemoNode.SetMemoNode");
		
		USetMemoNode_SetMemoNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Memo = Memo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetMemoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetMemoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetMemoNode.OnRequestCompleted");
		
		USetMemoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetMemoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetMemoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetMemoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070A210
	 * 		Name   -> Function UWorksWeb.ResetLoginTokenNode.ResetLoginTokenNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UResetLoginTokenNode* UResetLoginTokenNode::STATIC_ResetLoginTokenNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResetLoginTokenNode.ResetLoginTokenNode");
		
		UResetLoginTokenNode_ResetLoginTokenNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ResetLoginTokenNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResetLoginTokenNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResetLoginTokenNode.OnRequestCompleted");
		
		UResetLoginTokenNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UResetLoginTokenNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResetLoginTokenNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ResetLoginTokenNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.DeleteAccountNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDeleteAccountNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteAccountNode.OnRequestCompleted");
		
		UDeleteAccountNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709AF0
	 * 		Name   -> Function UWorksWeb.DeleteAccountNode.DeleteAccountNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UDeleteAccountNode* UDeleteAccountNode::STATIC_DeleteAccountNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteAccountNode.DeleteAccountNode");
		
		UDeleteAccountNode_DeleteAccountNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDeleteAccountNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeleteAccountNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.DeleteAccountNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAccountPublicInfoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAccountPublicInfoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAccountPublicInfoNode.OnRequestCompleted");
		
		UGetAccountPublicInfoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709CF0
	 * 		Name   -> Function UWorksWeb.GetAccountPublicInfoNode.GetAccountPublicInfoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetAccountPublicInfoNode* UGetAccountPublicInfoNode::STATIC_GetAccountPublicInfoNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAccountPublicInfoNode.GetAccountPublicInfoNode");
		
		UGetAccountPublicInfoNode_GetAccountPublicInfoNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAccountPublicInfoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAccountPublicInfoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAccountPublicInfoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070A0A0
	 * 		Name   -> Function UWorksWeb.QueryLoginTokenNode.QueryLoginTokenNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      LoginToken                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UQueryLoginTokenNode* UQueryLoginTokenNode::STATIC_QueryLoginTokenNode(const class FString& Key, const class FString& LoginToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryLoginTokenNode.QueryLoginTokenNode");
		
		UQueryLoginTokenNode_QueryLoginTokenNode_Params params {};
		params.Key = Key;
		params.LoginToken = LoginToken;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.QueryLoginTokenNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQueryLoginTokenNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryLoginTokenNode.OnRequestCompleted");
		
		UQueryLoginTokenNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UQueryLoginTokenNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQueryLoginTokenNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.QueryLoginTokenNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070A330
	 * 		Name   -> Function UWorksWeb.SetBanStatusNode.SetBanStatusNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bBanned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BanSeconds                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetBanStatusNode* USetBanStatusNode::STATIC_SetBanStatusNode(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bBanned, int32_t BanSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetBanStatusNode.SetBanStatusNode");
		
		USetBanStatusNode_SetBanStatusNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bBanned = bBanned;
		params.BanSeconds = BanSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetBanStatusNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetBanStatusNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetBanStatusNode.OnRequestCompleted");
		
		USetBanStatusNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetBanStatusNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetBanStatusNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetBanStatusNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetServerSteamIDsByIPNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetServerSteamIDsByIPNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerSteamIDsByIPNode.OnRequestCompleted");
		
		UGetServerSteamIDsByIPNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709F30
	 * 		Name   -> Function UWorksWeb.GetServerSteamIDsByIPNode.GetServerSteamIDsByIPNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ServerIPs                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetServerSteamIDsByIPNode* UGetServerSteamIDsByIPNode::STATIC_GetServerSteamIDsByIPNode(const class FString& Key, const class FString& ServerIPs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerSteamIDsByIPNode.GetServerSteamIDsByIPNode");
		
		UGetServerSteamIDsByIPNode_GetServerSteamIDsByIPNode_Params params {};
		params.Key = Key;
		params.ServerIPs = ServerIPs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetServerSteamIDsByIPNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetServerSteamIDsByIPNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetServerSteamIDsByIPNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetServerIPsBySteamIDNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetServerIPsBySteamIDNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerIPsBySteamIDNode.OnRequestCompleted");
		
		UGetServerIPsBySteamIDNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00709E10
	 * 		Name   -> Function UWorksWeb.GetServerIPsBySteamIDNode.GetServerIPsBySteamIDNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              ServerSteamID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetServerIPsBySteamIDNode* UGetServerIPsBySteamIDNode::STATIC_GetServerIPsBySteamIDNode(const class FString& Key, const struct FUWorksSteamID& ServerSteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetServerIPsBySteamIDNode.GetServerIPsBySteamIDNode");
		
		UGetServerIPsBySteamIDNode_GetServerIPsBySteamIDNode_Params params {};
		params.Key = Key;
		params.ServerSteamID = ServerSteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetServerIPsBySteamIDNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetServerIPsBySteamIDNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetServerIPsBySteamIDNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetGameServerPlayerStatsForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetGameServerPlayerStatsForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGameServerPlayerStatsForGameNode.OnRequestCompleted");
		
		UGetGameServerPlayerStatsForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070A7E0
	 * 		Name   -> Function UWorksWeb.GetGameServerPlayerStatsForGameNode.GetGameServerPlayerStatsForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeStart                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RangeEnd                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetGameServerPlayerStatsForGameNode* UGetGameServerPlayerStatsForGameNode::STATIC_GetGameServerPlayerStatsForGameNode(const class FString& Key, const struct FUWorksGameID& GameID, int32_t AppID, const class FString& RangeStart, const class FString& RangeEnd, int32_t MaxResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGameServerPlayerStatsForGameNode.GetGameServerPlayerStatsForGameNode");
		
		UGetGameServerPlayerStatsForGameNode_GetGameServerPlayerStatsForGameNode_Params params {};
		params.Key = Key;
		params.GameID = GameID;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.MaxResults = MaxResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetGameServerPlayerStatsForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetGameServerPlayerStatsForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetGameServerPlayerStatsForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.AddItemNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAddItemNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AddItemNode.OnRequestCompleted");
		
		UAddItemNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070B800
	 * 		Name   -> Function UWorksWeb.AddItemNode.AddItemNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAddItemNode* UAddItemNode::STATIC_AddItemNode(const class FString& Key, int32_t AppID, TArray<struct FUWorksSteamItemDef> ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AddItemNode.AddItemNode");
		
		UAddItemNode_AddItemNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAddItemNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAddItemNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.AddItemNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.AddPromoItemNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAddPromoItemNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AddPromoItemNode.OnRequestCompleted");
		
		UAddPromoItemNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070BB30
	 * 		Name   -> Function UWorksWeb.AddPromoItemNode.AddPromoItemNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemPropsJSON                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNotify                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAddPromoItemNode* UAddPromoItemNode::STATIC_AddPromoItemNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemDef& ItemDefID, const class FString& ItemPropsJSON, const struct FUWorksSteamID& SteamID, bool bNotify, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AddPromoItemNode.AddPromoItemNode");
		
		UAddPromoItemNode_AddPromoItemNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ItemDefID = ItemDefID;
		params.ItemPropsJSON = ItemPropsJSON;
		params.SteamID = SteamID;
		params.bNotify = bNotify;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAddPromoItemNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAddPromoItemNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.AddPromoItemNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ConsumeItemNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConsumeItemNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ConsumeItemNode.OnRequestCompleted");
		
		UConsumeItemNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070C040
	 * 		Name   -> Function UWorksWeb.ConsumeItemNode.ConsumeItemNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemInstanceID                  itemId                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Quantity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      RequestID                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UConsumeItemNode* UConsumeItemNode::STATIC_ConsumeItemNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamItemInstanceID& itemId, int32_t Quantity, const struct FUWorksSteamID& SteamID, const class FString& RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ConsumeItemNode.ConsumeItemNode");
		
		UConsumeItemNode_ConsumeItemNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.Quantity = Quantity;
		params.SteamID = SteamID;
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UConsumeItemNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConsumeItemNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ConsumeItemNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ExchangeItemNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UExchangeItemNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ExchangeItemNode.OnRequestCompleted");
		
		UExchangeItemNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070C290
	 * 		Name   -> Function UWorksWeb.ExchangeItemNode.ExchangeItemNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemInstanceID>          MaterialsItemID                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    MaterialsQuantity                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         OutputItemDefID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UExchangeItemNode* UExchangeItemNode::STATIC_ExchangeItemNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemInstanceID> MaterialsItemID, TArray<int32_t> MaterialsQuantity, const struct FUWorksSteamItemDef& OutputItemDefID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ExchangeItemNode.ExchangeItemNode");
		
		UExchangeItemNode_ExchangeItemNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.MaterialsItemID = MaterialsItemID;
		params.MaterialsQuantity = MaterialsQuantity;
		params.OutputItemDefID = OutputItemDefID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UExchangeItemNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExchangeItemNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ExchangeItemNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetInventoryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetInventoryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetInventoryNode.OnRequestCompleted");
		
		UGetInventoryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070C530
	 * 		Name   -> Function UWorksWeb.GetInventoryNode.GetInventoryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetInventoryNode* UGetInventoryNode::STATIC_GetInventoryNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetInventoryNode.GetInventoryNode");
		
		UGetInventoryNode_GetInventoryNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetInventoryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetInventoryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetInventoryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetItemDefsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetItemDefsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetItemDefsNode.OnRequestCompleted");
		
		UGetItemDefsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070C680
	 * 		Name   -> Function UWorksWeb.GetItemDefsNode.GetItemDefsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ModifiedSince                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefIDs                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 WorkshopIDs                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetItemDefsNode* UGetItemDefsNode::STATIC_GetItemDefsNode(const class FString& Key, int32_t AppID, const class FString& ModifiedSince, TArray<struct FUWorksSteamItemDef> ItemDefIDs, TArray<struct FUWorksSteamItemDef> WorkshopIDs, int32_t CacheMaxAgeSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetItemDefsNode.GetItemDefsNode");
		
		UGetItemDefsNode_GetItemDefsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.ModifiedSince = ModifiedSince;
		params.ItemDefIDs = ItemDefIDs;
		params.WorkshopIDs = WorkshopIDs;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetItemDefsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetItemDefsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetItemDefsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPriceSheetNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPriceSheetNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPriceSheetNode.OnRequestCompleted");
		
		UGetPriceSheetNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070C970
	 * 		Name   -> Function UWorksWeb.GetPriceSheetNode.GetPriceSheetNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ECurrency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPriceSheetNode* UGetPriceSheetNode::STATIC_GetPriceSheetNode(const class FString& Key, int32_t ECurrency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPriceSheetNode.GetPriceSheetNode");
		
		UGetPriceSheetNode_GetPriceSheetNode_Params params {};
		params.Key = Key;
		params.ECurrency = ECurrency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPriceSheetNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPriceSheetNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPriceSheetNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ConsolidateNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConsolidateNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ConsolidateNode.OnRequestCompleted");
		
		UConsolidateNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070BE20
	 * 		Name   -> Function UWorksWeb.ConsolidateNode.ConsolidateNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 ItemDefID                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UConsolidateNode* UConsolidateNode::STATIC_ConsolidateNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, TArray<struct FUWorksSteamItemDef> ItemDefID, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ConsolidateNode.ConsolidateNode");
		
		UConsolidateNode_ConsolidateNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UConsolidateNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConsolidateNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ConsolidateNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetQuantityNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetQuantityNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetQuantityNode.OnRequestCompleted");
		
		UGetQuantityNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070CA90
	 * 		Name   -> Function UWorksWeb.GetQuantityNode.GetQuantityNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamItemDef                         ItemDefID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetQuantityNode* UGetQuantityNode::STATIC_GetQuantityNode(const class FString& Key, int32_t AppID, const struct FUWorksSteamID& SteamID, const struct FUWorksSteamItemDef& ItemDefID, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetQuantityNode.GetQuantityNode");
		
		UGetQuantityNode_GetQuantityNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.SteamID = SteamID;
		params.ItemDefID = ItemDefID;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetQuantityNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetQuantityNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetQuantityNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.DeleteLeaderboardNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDeleteLeaderboardNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteLeaderboardNode.OnRequestCompleted");
		
		UDeleteLeaderboardNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070D560
	 * 		Name   -> Function UWorksWeb.DeleteLeaderboardNode.DeleteLeaderboardNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UDeleteLeaderboardNode* UDeleteLeaderboardNode::STATIC_DeleteLeaderboardNode(const class FString& Key, int32_t AppID, const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.DeleteLeaderboardNode.DeleteLeaderboardNode");
		
		UDeleteLeaderboardNode_DeleteLeaderboardNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDeleteLeaderboardNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeleteLeaderboardNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.DeleteLeaderboardNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FindOrCreateLeaderboardNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFindOrCreateLeaderboardNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FindOrCreateLeaderboardNode.OnRequestCompleted");
		
		UFindOrCreateLeaderboardNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070D700
	 * 		Name   -> Function UWorksWeb.FindOrCreateLeaderboardNode.FindOrCreateLeaderboardNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SortMethod                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCreateIfNotFound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyTrustedWrites                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyFriendsReads                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFindOrCreateLeaderboardNode* UFindOrCreateLeaderboardNode::STATIC_FindOrCreateLeaderboardNode(const class FString& Key, int32_t AppID, const class FString& Name, const class FString& SortMethod, const class FString& DisplayType, bool bCreateIfNotFound, bool bOnlyTrustedWrites, bool bOnlyFriendsReads)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FindOrCreateLeaderboardNode.FindOrCreateLeaderboardNode");
		
		UFindOrCreateLeaderboardNode_FindOrCreateLeaderboardNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Name = Name;
		params.SortMethod = SortMethod;
		params.DisplayType = DisplayType;
		params.bCreateIfNotFound = bCreateIfNotFound;
		params.bOnlyTrustedWrites = bOnlyTrustedWrites;
		params.bOnlyFriendsReads = bOnlyFriendsReads;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFindOrCreateLeaderboardNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFindOrCreateLeaderboardNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FindOrCreateLeaderboardNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetLeaderboardEntriesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetLeaderboardEntriesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetLeaderboardEntriesNode.OnRequestCompleted");
		
		UGetLeaderboardEntriesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070DA80
	 * 		Name   -> Function UWorksWeb.GetLeaderboardEntriesNode.GetLeaderboardEntriesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RangeEnd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DataRequest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetLeaderboardEntriesNode* UGetLeaderboardEntriesNode::STATIC_GetLeaderboardEntriesNode(const class FString& Key, int32_t AppID, int32_t RangeStart, int32_t RangeEnd, int32_t LeaderboardID, int32_t DataRequest, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetLeaderboardEntriesNode.GetLeaderboardEntriesNode");
		
		UGetLeaderboardEntriesNode_GetLeaderboardEntriesNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.RangeStart = RangeStart;
		params.RangeEnd = RangeEnd;
		params.LeaderboardID = LeaderboardID;
		params.DataRequest = DataRequest;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetLeaderboardEntriesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetLeaderboardEntriesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetLeaderboardEntriesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetLeaderboardsForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetLeaderboardsForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetLeaderboardsForGameNode.OnRequestCompleted");
		
		UGetLeaderboardsForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070DCB0
	 * 		Name   -> Function UWorksWeb.GetLeaderboardsForGameNode.GetLeaderboardsForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetLeaderboardsForGameNode* UGetLeaderboardsForGameNode::STATIC_GetLeaderboardsForGameNode(const class FString& Key, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetLeaderboardsForGameNode.GetLeaderboardsForGameNode");
		
		UGetLeaderboardsForGameNode_GetLeaderboardsForGameNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetLeaderboardsForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetLeaderboardsForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetLeaderboardsForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070DDD0
	 * 		Name   -> Function UWorksWeb.ResetLeaderboardNode.ResetLeaderboardNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UResetLeaderboardNode* UResetLeaderboardNode::STATIC_ResetLeaderboardNode(const class FString& Key, int32_t AppID, int32_t LeaderboardID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResetLeaderboardNode.ResetLeaderboardNode");
		
		UResetLeaderboardNode_ResetLeaderboardNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ResetLeaderboardNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResetLeaderboardNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResetLeaderboardNode.OnRequestCompleted");
		
		UResetLeaderboardNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UResetLeaderboardNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResetLeaderboardNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ResetLeaderboardNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070DF20
	 * 		Name   -> Function UWorksWeb.SetLeaderboardScoreNode.SetLeaderboardScoreNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            LeaderboardID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ScoreMethod                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              Details                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class USetLeaderboardScoreNode* USetLeaderboardScoreNode::STATIC_SetLeaderboardScoreNode(const class FString& Key, int32_t AppID, int32_t LeaderboardID, const struct FUWorksSteamID& SteamID, int32_t score, const class FString& ScoreMethod, TArray<unsigned char> Details)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetLeaderboardScoreNode.SetLeaderboardScoreNode");
		
		USetLeaderboardScoreNode_SetLeaderboardScoreNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.LeaderboardID = LeaderboardID;
		params.SteamID = SteamID;
		params.score = score;
		params.ScoreMethod = ScoreMethod;
		params.Details = Details;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetLeaderboardScoreNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetLeaderboardScoreNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetLeaderboardScoreNode.OnRequestCompleted");
		
		USetLeaderboardScoreNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetLeaderboardScoreNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetLeaderboardScoreNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetLeaderboardScoreNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.AdjustAgreementNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAdjustAgreementNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AdjustAgreementNode.OnRequestCompleted");
		
		UAdjustAgreementNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070F0F0
	 * 		Name   -> Function UWorksWeb.AdjustAgreementNode.AdjustAgreementNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NextProcessDate                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAdjustAgreementNode* UAdjustAgreementNode::STATIC_AdjustAgreementNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, const class FString& NextProcessDate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AdjustAgreementNode.AdjustAgreementNode");
		
		UAdjustAgreementNode_AdjustAgreementNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.NextProcessDate = NextProcessDate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAdjustAgreementNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdjustAgreementNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.AdjustAgreementNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CancelAgreementNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCancelAgreementNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelAgreementNode.OnRequestCompleted");
		
		UCancelAgreementNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070F360
	 * 		Name   -> Function UWorksWeb.CancelAgreementNode.CancelAgreementNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCancelAgreementNode* UCancelAgreementNode::STATIC_CancelAgreementNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CancelAgreementNode.CancelAgreementNode");
		
		UCancelAgreementNode_CancelAgreementNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCancelAgreementNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCancelAgreementNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CancelAgreementNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.FinalizeTxnNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFinalizeTxnNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FinalizeTxnNode.OnRequestCompleted");
		
		UFinalizeTxnNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070F540
	 * 		Name   -> Function UWorksWeb.FinalizeTxnNode.FinalizeTxnNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFinalizeTxnNode* UFinalizeTxnNode::STATIC_FinalizeTxnNode(const class FString& Key, const class FString& OrderID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.FinalizeTxnNode.FinalizeTxnNode");
		
		UFinalizeTxnNode_FinalizeTxnNode_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFinalizeTxnNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFinalizeTxnNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.FinalizeTxnNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetReportNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetReportNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetReportNode.OnRequestCompleted");
		
		UGetReportNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070F6E0
	 * 		Name   -> Function UWorksWeb.GetReportNode.GetReportNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Time                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksReportType                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetReportNode* UGetReportNode::STATIC_GetReportNode(const class FString& Key, int32_t AppID, const class FString& Time, UWorksWeb_EUWorksReportType Type, int32_t MaxResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetReportNode.GetReportNode");
		
		UGetReportNode_GetReportNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Time = Time;
		params.Type = Type;
		params.MaxResults = MaxResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetReportNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetReportNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetReportNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUserAgreementInfoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUserAgreementInfoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserAgreementInfoNode.OnRequestCompleted");
		
		UGetUserAgreementInfoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070F8E0
	 * 		Name   -> Function UWorksWeb.GetUserAgreementInfoNode.GetUserAgreementInfoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetUserAgreementInfoNode* UGetUserAgreementInfoNode::STATIC_GetUserAgreementInfoNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserAgreementInfoNode.GetUserAgreementInfoNode");
		
		UGetUserAgreementInfoNode_GetUserAgreementInfoNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUserAgreementInfoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUserAgreementInfoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUserAgreementInfoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUserInfoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUserInfoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserInfoNode.OnRequestCompleted");
		
		UGetUserInfoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070FA30
	 * 		Name   -> Function UWorksWeb.GetUserInfoNode.GetUserInfoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetUserInfoNode* UGetUserInfoNode::STATIC_GetUserInfoNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& IPAddress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserInfoNode.GetUserInfoNode");
		
		UGetUserInfoNode_GetUserInfoNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.IPAddress = IPAddress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUserInfoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUserInfoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUserInfoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.InitTxnNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInitTxnNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.InitTxnNode.OnRequestCompleted");
		
		UInitTxnNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0070FBD0
	 * 		Name   -> Function UWorksWeb.InitTxnNode.InitTxnNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUWorksSteamItemDef>                 itemIds                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Quantities                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Amounts                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Descriptions                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Categories                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AssociatedBundles                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BillingTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              StartDates                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              EndDates                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Periods                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Frequencies                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RecurringAmounts                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BundleCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleIDs                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    BundleQuantities                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleDescriptions                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              BundleCategories                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		UWorksWeb_EUWorksUserSession                       UserSession                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UInitTxnNode* UInitTxnNode::STATIC_InitTxnNode(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ItemCount, const class FString& Language, const class FString& Currency, TArray<struct FUWorksSteamItemDef> itemIds, TArray<int32_t> Quantities, TArray<int32_t> Amounts, TArray<class FString> Descriptions, TArray<class FString> Categories, TArray<int32_t> AssociatedBundles, TArray<class FString> BillingTypes, TArray<class FString> StartDates, TArray<class FString> EndDates, TArray<class FString> Periods, TArray<int32_t> Frequencies, TArray<class FString> RecurringAmounts, int32_t BundleCount, TArray<int32_t> BundleIDs, TArray<int32_t> BundleQuantities, TArray<class FString> BundleDescriptions, TArray<class FString> BundleCategories, UWorksWeb_EUWorksUserSession UserSession, const class FString& IPAddress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.InitTxnNode.InitTxnNode");
		
		UInitTxnNode_InitTxnNode_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ItemCount = ItemCount;
		params.Language = Language;
		params.Currency = Currency;
		params.itemIds = itemIds;
		params.Quantities = Quantities;
		params.Amounts = Amounts;
		params.Descriptions = Descriptions;
		params.Categories = Categories;
		params.AssociatedBundles = AssociatedBundles;
		params.BillingTypes = BillingTypes;
		params.StartDates = StartDates;
		params.EndDates = EndDates;
		params.Periods = Periods;
		params.Frequencies = Frequencies;
		params.RecurringAmounts = RecurringAmounts;
		params.BundleCount = BundleCount;
		params.BundleIDs = BundleIDs;
		params.BundleQuantities = BundleQuantities;
		params.BundleDescriptions = BundleDescriptions;
		params.BundleCategories = BundleCategories;
		params.UserSession = UserSession;
		params.IPAddress = IPAddress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInitTxnNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInitTxnNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.InitTxnNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00710EA0
	 * 		Name   -> Function UWorksWeb.ProcessAgreementNode.ProcessAgreementNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AgreementID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UProcessAgreementNode* UProcessAgreementNode::STATIC_ProcessAgreementNode(const class FString& Key, const class FString& OrderID, const struct FUWorksSteamID& SteamID, const class FString& AgreementID, int32_t AppID, int32_t Amount, const class FString& Currency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ProcessAgreementNode.ProcessAgreementNode");
		
		UProcessAgreementNode_ProcessAgreementNode_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.SteamID = SteamID;
		params.AgreementID = AgreementID;
		params.AppID = AppID;
		params.Amount = Amount;
		params.Currency = Currency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ProcessAgreementNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProcessAgreementNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ProcessAgreementNode.OnRequestCompleted");
		
		UProcessAgreementNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProcessAgreementNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProcessAgreementNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ProcessAgreementNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007111C0
	 * 		Name   -> Function UWorksWeb.QueryTxnNode.QueryTxnNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      TransID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UQueryTxnNode* UQueryTxnNode::STATIC_QueryTxnNode(const class FString& Key, int32_t AppID, const class FString& OrderID, const class FString& TransID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryTxnNode.QueryTxnNode");
		
		UQueryTxnNode_QueryTxnNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.OrderID = OrderID;
		params.TransID = TransID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.QueryTxnNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQueryTxnNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryTxnNode.OnRequestCompleted");
		
		UQueryTxnNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UQueryTxnNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQueryTxnNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.QueryTxnNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007113F0
	 * 		Name   -> Function UWorksWeb.RefundTxnNode.RefundTxnNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OrderID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URefundTxnNode* URefundTxnNode::STATIC_RefundTxnNode(const class FString& Key, const class FString& OrderID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RefundTxnNode.RefundTxnNode");
		
		URefundTxnNode_RefundTxnNode_Params params {};
		params.Key = Key;
		params.OrderID = OrderID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RefundTxnNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URefundTxnNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RefundTxnNode.OnRequestCompleted");
		
		URefundTxnNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URefundTxnNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URefundTxnNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RefundTxnNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetNewsForAppNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetNewsForAppNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNewsForAppNode.OnRequestCompleted");
		
		UGetNewsForAppNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00711AE0
	 * 		Name   -> Function UWorksWeb.GetNewsForAppNode.GetNewsForAppNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetNewsForAppNode* UGetNewsForAppNode::STATIC_GetNewsForAppNode(int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNewsForAppNode.GetNewsForAppNode");
		
		UGetNewsForAppNode_GetNewsForAppNode_Params params {};
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetNewsForAppNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetNewsForAppNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetNewsForAppNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetNewsForAppAuthedNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetNewsForAppAuthedNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNewsForAppAuthedNode.OnRequestCompleted");
		
		UGetNewsForAppAuthedNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00711890
	 * 		Name   -> Function UWorksWeb.GetNewsForAppAuthedNode.GetNewsForAppAuthedNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxLength                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Feeds                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetNewsForAppAuthedNode* UGetNewsForAppAuthedNode::STATIC_GetNewsForAppAuthedNode(const class FString& Key, int32_t AppID, int32_t MaxLength, int32_t EndDate, int32_t Count, const class FString& Feeds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNewsForAppAuthedNode.GetNewsForAppAuthedNode");
		
		UGetNewsForAppAuthedNode_GetNewsForAppAuthedNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.MaxLength = MaxLength;
		params.EndDate = EndDate;
		params.Count = Count;
		params.Feeds = Feeds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetNewsForAppAuthedNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetNewsForAppAuthedNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetNewsForAppAuthedNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712F70
	 * 		Name   -> Function UWorksWeb.RecordOfflinePlaytimeNode.RecordOfflinePlaytimeNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPlaySessions                         PlaySessions                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class URecordOfflinePlaytimeNode* URecordOfflinePlaytimeNode::STATIC_RecordOfflinePlaytimeNode(const struct FUWorksSteamID& SteamID, const class FString& Ticket, const struct FUWorksPlaySessions& PlaySessions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RecordOfflinePlaytimeNode.RecordOfflinePlaytimeNode");
		
		URecordOfflinePlaytimeNode_RecordOfflinePlaytimeNode_Params params {};
		params.SteamID = SteamID;
		params.Ticket = Ticket;
		params.PlaySessions = PlaySessions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RecordOfflinePlaytimeNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URecordOfflinePlaytimeNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RecordOfflinePlaytimeNode.OnRequestCompleted");
		
		URecordOfflinePlaytimeNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URecordOfflinePlaytimeNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URecordOfflinePlaytimeNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RecordOfflinePlaytimeNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetRecentlyPlayedGamesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetRecentlyPlayedGamesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetRecentlyPlayedGamesNode.OnRequestCompleted");
		
		UGetRecentlyPlayedGamesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712BB0
	 * 		Name   -> Function UWorksWeb.GetRecentlyPlayedGamesNode.GetRecentlyPlayedGamesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetRecentlyPlayedGamesNode* UGetRecentlyPlayedGamesNode::STATIC_GetRecentlyPlayedGamesNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetRecentlyPlayedGamesNode.GetRecentlyPlayedGamesNode");
		
		UGetRecentlyPlayedGamesNode_GetRecentlyPlayedGamesNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetRecentlyPlayedGamesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetRecentlyPlayedGamesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetRecentlyPlayedGamesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetOwnedGamesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetOwnedGamesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetOwnedGamesNode.OnRequestCompleted");
		
		UGetOwnedGamesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712990
	 * 		Name   -> Function UWorksWeb.GetOwnedGamesNode.GetOwnedGamesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeAppInfo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludePlayedFreeGames                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    AppIDsFilter                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UGetOwnedGamesNode* UGetOwnedGamesNode::STATIC_GetOwnedGamesNode(const class FString& Key, const struct FUWorksSteamID& SteamID, bool bIncludeAppInfo, bool bIncludePlayedFreeGames, TArray<int32_t> AppIDsFilter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetOwnedGamesNode.GetOwnedGamesNode");
		
		UGetOwnedGamesNode_GetOwnedGamesNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.bIncludeAppInfo = bIncludeAppInfo;
		params.bIncludePlayedFreeGames = bIncludePlayedFreeGames;
		params.AppIDsFilter = AppIDsFilter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetOwnedGamesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetOwnedGamesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetOwnedGamesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetSteamLevelNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetSteamLevelNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSteamLevelNode.OnRequestCompleted");
		
		UGetSteamLevelNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712D00
	 * 		Name   -> Function UWorksWeb.GetSteamLevelNode.GetSteamLevelNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetSteamLevelNode* UGetSteamLevelNode::STATIC_GetSteamLevelNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSteamLevelNode.GetSteamLevelNode");
		
		UGetSteamLevelNode_GetSteamLevelNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetSteamLevelNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetSteamLevelNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetSteamLevelNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetBadgesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetBadgesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetBadgesNode.OnRequestCompleted");
		
		UGetBadgesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712720
	 * 		Name   -> Function UWorksWeb.GetBadgesNode.GetBadgesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetBadgesNode* UGetBadgesNode::STATIC_GetBadgesNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetBadgesNode.GetBadgesNode");
		
		UGetBadgesNode_GetBadgesNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetBadgesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetBadgesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetBadgesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetCommunityBadgeProgressNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetCommunityBadgeProgressNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCommunityBadgeProgressNode.OnRequestCompleted");
		
		UGetCommunityBadgeProgressNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712840
	 * 		Name   -> Function UWorksWeb.GetCommunityBadgeProgressNode.GetCommunityBadgeProgressNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BadgeID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetCommunityBadgeProgressNode* UGetCommunityBadgeProgressNode::STATIC_GetCommunityBadgeProgressNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t BadgeID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCommunityBadgeProgressNode.GetCommunityBadgeProgressNode");
		
		UGetCommunityBadgeProgressNode_GetCommunityBadgeProgressNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.BadgeID = BadgeID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetCommunityBadgeProgressNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetCommunityBadgeProgressNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetCommunityBadgeProgressNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.IsPlayingSharedGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UIsPlayingSharedGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.IsPlayingSharedGameNode.OnRequestCompleted");
		
		UIsPlayingSharedGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00712E20
	 * 		Name   -> Function UWorksWeb.IsPlayingSharedGameNode.IsPlayingSharedGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppIDPlaying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UIsPlayingSharedGameNode* UIsPlayingSharedGameNode::STATIC_IsPlayingSharedGameNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppIDPlaying)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.IsPlayingSharedGameNode.IsPlayingSharedGameNode");
		
		UIsPlayingSharedGameNode_IsPlayingSharedGameNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDPlaying = AppIDPlaying;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsPlayingSharedGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsPlayingSharedGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.IsPlayingSharedGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00713540
	 * 		Name   -> Function UWorksWeb.QueryFilesNode.QueryFilesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      queryType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Page                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CreatorAppID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              requiredTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              excludedTags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RequiredFlags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OmittedFlags                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      searchText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      ChildPublishedFileID                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeRecentVotesOnly                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksRequiredKVTags                       RequiredKVTags                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bTotalOnly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIDsOnly                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnVoteData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnTags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnKVTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnPreviews                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnChildren                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnShortDescription                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnForSaleData                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ReturnPlaytimeStats                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumPerPage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bMatchAllTags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CacheMaxAgeSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Language                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReturnMetaData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UQueryFilesNode* UQueryFilesNode::STATIC_QueryFilesNode(const class FString& Key, unsigned char queryType, int32_t Page, int32_t CreatorAppID, int32_t AppID, TArray<class FString> requiredTags, TArray<class FString> excludedTags, TArray<class FString> RequiredFlags, TArray<class FString> OmittedFlags, const class FString& searchText, unsigned char fileType, const struct FUWorksPublishedFileID& ChildPublishedFileID, int32_t Days, bool bIncludeRecentVotesOnly, const struct FUWorksRequiredKVTags& RequiredKVTags, bool bTotalOnly, bool bIDsOnly, bool bReturnVoteData, bool bReturnTags, bool bReturnKVTags, bool bReturnPreviews, bool bReturnChildren, bool bReturnShortDescription, bool bReturnForSaleData, int32_t ReturnPlaytimeStats, int32_t NumPerPage, bool bMatchAllTags, int32_t CacheMaxAgeSeconds, int32_t Language, bool bReturnMetaData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryFilesNode.QueryFilesNode");
		
		UQueryFilesNode_QueryFilesNode_Params params {};
		params.Key = Key;
		params.queryType = queryType;
		params.Page = Page;
		params.CreatorAppID = CreatorAppID;
		params.AppID = AppID;
		params.requiredTags = requiredTags;
		params.excludedTags = excludedTags;
		params.RequiredFlags = RequiredFlags;
		params.OmittedFlags = OmittedFlags;
		params.searchText = searchText;
		params.fileType = fileType;
		params.ChildPublishedFileID = ChildPublishedFileID;
		params.Days = Days;
		params.bIncludeRecentVotesOnly = bIncludeRecentVotesOnly;
		params.RequiredKVTags = RequiredKVTags;
		params.bTotalOnly = bTotalOnly;
		params.bIDsOnly = bIDsOnly;
		params.bReturnVoteData = bReturnVoteData;
		params.bReturnTags = bReturnTags;
		params.bReturnKVTags = bReturnKVTags;
		params.bReturnPreviews = bReturnPreviews;
		params.bReturnChildren = bReturnChildren;
		params.bReturnShortDescription = bReturnShortDescription;
		params.bReturnForSaleData = bReturnForSaleData;
		params.ReturnPlaytimeStats = ReturnPlaytimeStats;
		params.NumPerPage = NumPerPage;
		params.bMatchAllTags = bMatchAllTags;
		params.CacheMaxAgeSeconds = CacheMaxAgeSeconds;
		params.Language = Language;
		params.bReturnMetaData = bReturnMetaData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.QueryFilesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQueryFilesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.QueryFilesNode.OnRequestCompleted");
		
		UQueryFilesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UQueryFilesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQueryFilesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.QueryFilesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00714130
	 * 		Name   -> Function UWorksWeb.SetDeveloperMetadataNode.SetDeveloperMetadataNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MetaData                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetDeveloperMetadataNode* USetDeveloperMetadataNode::STATIC_SetDeveloperMetadataNode(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, const class FString& MetaData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetDeveloperMetadataNode.SetDeveloperMetadataNode");
		
		USetDeveloperMetadataNode_SetDeveloperMetadataNode_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.MetaData = MetaData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetDeveloperMetadataNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetDeveloperMetadataNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetDeveloperMetadataNode.OnRequestCompleted");
		
		USetDeveloperMetadataNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetDeveloperMetadataNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetDeveloperMetadataNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetDeveloperMetadataNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00714310
	 * 		Name   -> Function UWorksWeb.UpdateTagsNode.UpdateTagsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPublishedFileID                      PublishedFileID                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              AddTags                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              RemoveTags                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UUpdateTagsNode* UUpdateTagsNode::STATIC_UpdateTagsNode(const class FString& Key, const struct FUWorksPublishedFileID& PublishedFileID, int32_t AppID, TArray<class FString> AddTags, TArray<class FString> RemoveTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpdateTagsNode.UpdateTagsNode");
		
		UUpdateTagsNode_UpdateTagsNode_Params params {};
		params.Key = Key;
		params.PublishedFileID = PublishedFileID;
		params.AppID = AppID;
		params.AddTags = AddTags;
		params.RemoveTags = RemoveTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.UpdateTagsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUpdateTagsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UpdateTagsNode.OnRequestCompleted");
		
		UUpdateTagsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUpdateTagsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpdateTagsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UpdateTagsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00714C80
	 * 		Name   -> Function UWorksWeb.RankedByPublicationOrderNode.RankedByPublicationOrderNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class URankedByPublicationOrderNode* URankedByPublicationOrderNode::STATIC_RankedByPublicationOrderNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByPublicationOrderNode.RankedByPublicationOrderNode");
		
		URankedByPublicationOrderNode_RankedByPublicationOrderNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RankedByPublicationOrderNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URankedByPublicationOrderNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByPublicationOrderNode.OnRequestCompleted");
		
		URankedByPublicationOrderNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URankedByPublicationOrderNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URankedByPublicationOrderNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RankedByPublicationOrderNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00715190
	 * 		Name   -> Function UWorksWeb.RankedByTrendNode.RankedByTrendNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Days                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class URankedByTrendNode* URankedByTrendNode::STATIC_RankedByTrendNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, int32_t Days, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByTrendNode.RankedByTrendNode");
		
		URankedByTrendNode_RankedByTrendNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.Days = Days;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RankedByTrendNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URankedByTrendNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByTrendNode.OnRequestCompleted");
		
		URankedByTrendNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URankedByTrendNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URankedByTrendNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RankedByTrendNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007156E0
	 * 		Name   -> Function UWorksWeb.RankedByVoteNode.RankedByVoteNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class URankedByVoteNode* URankedByVoteNode::STATIC_RankedByVoteNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t StartIndex, int32_t Count, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByVoteNode.RankedByVoteNode");
		
		URankedByVoteNode_RankedByVoteNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.StartIndex = StartIndex;
		params.Count = Count;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.RankedByVoteNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URankedByVoteNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.RankedByVoteNode.OnRequestCompleted");
		
		URankedByVoteNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URankedByVoteNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URankedByVoteNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.RankedByVoteNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00715BF0
	 * 		Name   -> Function UWorksWeb.ResultSetSummaryNode.ResultSetSummaryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TagCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserTagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasAppAdminAccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            fileType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              tags                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              UserTags                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UResultSetSummaryNode* UResultSetSummaryNode::STATIC_ResultSetSummaryNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t TagCount, int32_t UserTagCount, bool bHasAppAdminAccess, int32_t fileType, TArray<class FString> tags, TArray<class FString> UserTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResultSetSummaryNode.ResultSetSummaryNode");
		
		UResultSetSummaryNode_ResultSetSummaryNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.TagCount = TagCount;
		params.UserTagCount = UserTagCount;
		params.bHasAppAdminAccess = bHasAppAdminAccess;
		params.fileType = fileType;
		params.tags = tags;
		params.UserTags = UserTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ResultSetSummaryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResultSetSummaryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResultSetSummaryNode.OnRequestCompleted");
		
		UResultSetSummaryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UResultSetSummaryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResultSetSummaryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ResultSetSummaryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ItemVoteSummaryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemVoteSummaryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ItemVoteSummaryNode.OnRequestCompleted");
		
		UItemVoteSummaryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00716360
	 * 		Name   -> Function UWorksWeb.ItemVoteSummaryNode.ItemVoteSummaryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UItemVoteSummaryNode* UItemVoteSummaryNode::STATIC_ItemVoteSummaryNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ItemVoteSummaryNode.ItemVoteSummaryNode");
		
		UItemVoteSummaryNode_ItemVoteSummaryNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemVoteSummaryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemVoteSummaryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ItemVoteSummaryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00716570
	 * 		Name   -> Function UWorksWeb.UserVoteSummaryNode.UserVoteSummaryNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UUserVoteSummaryNode* UUserVoteSummaryNode::STATIC_UserVoteSummaryNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UserVoteSummaryNode.UserVoteSummaryNode");
		
		UUserVoteSummaryNode_UserVoteSummaryNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.UserVoteSummaryNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserVoteSummaryNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UserVoteSummaryNode.OnRequestCompleted");
		
		UUserVoteSummaryNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUserVoteSummaryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUserVoteSummaryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UserVoteSummaryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.EnumerateUserPublishedFilesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UEnumerateUserPublishedFilesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateUserPublishedFilesNode.OnRequestCompleted");
		
		UEnumerateUserPublishedFilesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717380
	 * 		Name   -> Function UWorksWeb.EnumerateUserPublishedFilesNode.EnumerateUserPublishedFilesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UEnumerateUserPublishedFilesNode* UEnumerateUserPublishedFilesNode::STATIC_EnumerateUserPublishedFilesNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateUserPublishedFilesNode.EnumerateUserPublishedFilesNode");
		
		UEnumerateUserPublishedFilesNode_EnumerateUserPublishedFilesNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnumerateUserPublishedFilesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnumerateUserPublishedFilesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.EnumerateUserPublishedFilesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.EnumerateUserSubscribedFilesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UEnumerateUserSubscribedFilesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateUserSubscribedFilesNode.OnRequestCompleted");
		
		UEnumerateUserSubscribedFilesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007174D0
	 * 		Name   -> Function UWorksWeb.EnumerateUserSubscribedFilesNode.EnumerateUserSubscribedFilesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UEnumerateUserSubscribedFilesNode* UEnumerateUserSubscribedFilesNode::STATIC_EnumerateUserSubscribedFilesNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t ListType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.EnumerateUserSubscribedFilesNode.EnumerateUserSubscribedFilesNode");
		
		UEnumerateUserSubscribedFilesNode_EnumerateUserSubscribedFilesNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.ListType = ListType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnumerateUserSubscribedFilesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnumerateUserSubscribedFilesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.EnumerateUserSubscribedFilesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetCollectionDetailsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetCollectionDetailsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCollectionDetailsNode.OnRequestCompleted");
		
		UGetCollectionDetailsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717650
	 * 		Name   -> Function UWorksWeb.GetCollectionDetailsNode.GetCollectionDetailsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            CollectionCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UGetCollectionDetailsNode* UGetCollectionDetailsNode::STATIC_GetCollectionDetailsNode(int32_t CollectionCount, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetCollectionDetailsNode.GetCollectionDetailsNode");
		
		UGetCollectionDetailsNode_GetCollectionDetailsNode_Params params {};
		params.CollectionCount = CollectionCount;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetCollectionDetailsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetCollectionDetailsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetCollectionDetailsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPublishedFileDetailsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPublishedFileDetailsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublishedFileDetailsNode.OnRequestCompleted");
		
		UGetPublishedFileDetailsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717770
	 * 		Name   -> Function UWorksWeb.GetPublishedFileDetailsNode.GetPublishedFileDetailsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            ItemCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    PublishedFileIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UGetPublishedFileDetailsNode* UGetPublishedFileDetailsNode::STATIC_GetPublishedFileDetailsNode(int32_t ItemCount, TArray<int32_t> PublishedFileIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublishedFileDetailsNode.GetPublishedFileDetailsNode");
		
		UGetPublishedFileDetailsNode_GetPublishedFileDetailsNode_Params params {};
		params.ItemCount = ItemCount;
		params.PublishedFileIDs = PublishedFileIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPublishedFileDetailsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPublishedFileDetailsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPublishedFileDetailsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUGCFileDetailsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUGCFileDetailsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUGCFileDetailsNode.OnRequestCompleted");
		
		UGetUGCFileDetailsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717890
	 * 		Name   -> Function UWorksWeb.GetUGCFileDetailsNode.GetUGCFileDetailsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetUGCFileDetailsNode* UGetUGCFileDetailsNode::STATIC_GetUGCFileDetailsNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUGCFileDetailsNode.GetUGCFileDetailsNode");
		
		UGetUGCFileDetailsNode_GetUGCFileDetailsNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUGCFileDetailsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUGCFileDetailsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUGCFileDetailsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717A10
	 * 		Name   -> Function UWorksWeb.SetUGCUsedByGCNode.SetUGCUsedByGCNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UGCID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUsed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetUGCUsedByGCNode* USetUGCUsedByGCNode::STATIC_SetUGCUsedByGCNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t UGCID, int32_t AppID, bool bUsed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetUGCUsedByGCNode.SetUGCUsedByGCNode");
		
		USetUGCUsedByGCNode_SetUGCUsedByGCNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.UGCID = UGCID;
		params.AppID = AppID;
		params.bUsed = bUsed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetUGCUsedByGCNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetUGCUsedByGCNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetUGCUsedByGCNode.OnRequestCompleted");
		
		USetUGCUsedByGCNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetUGCUsedByGCNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetUGCUsedByGCNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetUGCUsedByGCNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717BE0
	 * 		Name   -> Function UWorksWeb.SubscribePublishedFileNode.SubscribePublishedFileNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USubscribePublishedFileNode* USubscribePublishedFileNode::STATIC_SubscribePublishedFileNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SubscribePublishedFileNode.SubscribePublishedFileNode");
		
		USubscribePublishedFileNode_SubscribePublishedFileNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SubscribePublishedFileNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USubscribePublishedFileNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SubscribePublishedFileNode.OnRequestCompleted");
		
		USubscribePublishedFileNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USubscribePublishedFileNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USubscribePublishedFileNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SubscribePublishedFileNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00717D60
	 * 		Name   -> Function UWorksWeb.UnsubscribePublishedFileNode.UnsubscribePublishedFileNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PublishedFileID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUnsubscribePublishedFileNode* UUnsubscribePublishedFileNode::STATIC_UnsubscribePublishedFileNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t PublishedFileID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UnsubscribePublishedFileNode.UnsubscribePublishedFileNode");
		
		UUnsubscribePublishedFileNode_UnsubscribePublishedFileNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.PublishedFileID = PublishedFileID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.UnsubscribePublishedFileNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUnsubscribePublishedFileNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.UnsubscribePublishedFileNode.OnRequestCompleted");
		
		UUnsubscribePublishedFileNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUnsubscribePublishedFileNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUnsubscribePublishedFileNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.UnsubscribePublishedFileNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.CheckAppOwnershipNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCheckAppOwnershipNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CheckAppOwnershipNode.OnRequestCompleted");
		
		UCheckAppOwnershipNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00718DE0
	 * 		Name   -> Function UWorksWeb.CheckAppOwnershipNode.CheckAppOwnershipNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCheckAppOwnershipNode* UCheckAppOwnershipNode::STATIC_CheckAppOwnershipNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.CheckAppOwnershipNode.CheckAppOwnershipNode");
		
		UCheckAppOwnershipNode_CheckAppOwnershipNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCheckAppOwnershipNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckAppOwnershipNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.CheckAppOwnershipNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetAppPriceInfoNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetAppPriceInfoNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppPriceInfoNode.OnRequestCompleted");
		
		UGetAppPriceInfoNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00718F30
	 * 		Name   -> Function UWorksWeb.GetAppPriceInfoNode.GetAppPriceInfoNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      AppIDs                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetAppPriceInfoNode* UGetAppPriceInfoNode::STATIC_GetAppPriceInfoNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& AppIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetAppPriceInfoNode.GetAppPriceInfoNode");
		
		UGetAppPriceInfoNode_GetAppPriceInfoNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppIDs = AppIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetAppPriceInfoNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetAppPriceInfoNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetAppPriceInfoNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetFriendListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetFriendListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetFriendListNode.OnRequestCompleted");
		
		UGetFriendListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007190D0
	 * 		Name   -> Function UWorksWeb.GetFriendListNode.GetFriendListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      Relationship                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetFriendListNode* UGetFriendListNode::STATIC_GetFriendListNode(const class FString& Key, const struct FUWorksSteamID& SteamID, const class FString& Relationship)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetFriendListNode.GetFriendListNode");
		
		UGetFriendListNode_GetFriendListNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.Relationship = Relationship;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetFriendListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetFriendListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetFriendListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPlayerBansNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPlayerBansNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerBansNode.OnRequestCompleted");
		
		UGetPlayerBansNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719270
	 * 		Name   -> Function UWorksWeb.GetPlayerBansNode.GetPlayerBansNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPlayerBansNode* UGetPlayerBansNode::STATIC_GetPlayerBansNode(const class FString& Key, const class FString& SteamIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerBansNode.GetPlayerBansNode");
		
		UGetPlayerBansNode_GetPlayerBansNode_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPlayerBansNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPlayerBansNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPlayerBansNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPlayerSummariesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPlayerSummariesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerSummariesNode.OnRequestCompleted");
		
		UGetPlayerSummariesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x007193E0
	 * 		Name   -> Function UWorksWeb.GetPlayerSummariesNode.GetPlayerSummariesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SteamIDs                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPlayerSummariesNode* UGetPlayerSummariesNode::STATIC_GetPlayerSummariesNode(const class FString& Key, const class FString& SteamIDs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerSummariesNode.GetPlayerSummariesNode");
		
		UGetPlayerSummariesNode_GetPlayerSummariesNode_Params params {};
		params.Key = Key;
		params.SteamIDs = SteamIDs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPlayerSummariesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPlayerSummariesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPlayerSummariesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPublisherAppOwnershipNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPublisherAppOwnershipNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublisherAppOwnershipNode.OnRequestCompleted");
		
		UGetPublisherAppOwnershipNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719750
	 * 		Name   -> Function UWorksWeb.GetPublisherAppOwnershipNode.GetPublisherAppOwnershipNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetPublisherAppOwnershipNode* UGetPublisherAppOwnershipNode::STATIC_GetPublisherAppOwnershipNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublisherAppOwnershipNode.GetPublisherAppOwnershipNode");
		
		UGetPublisherAppOwnershipNode_GetPublisherAppOwnershipNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPublisherAppOwnershipNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPublisherAppOwnershipNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPublisherAppOwnershipNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPublisherAppOwnershipChangesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPublisherAppOwnershipChangesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublisherAppOwnershipChangesNode.OnRequestCompleted");
		
		UGetPublisherAppOwnershipChangesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719550
	 * 		Name   -> Function UWorksWeb.GetPublisherAppOwnershipChangesNode.GetPublisherAppOwnershipChangesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PackageRowVersion                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CDKeyRowVersion                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPublisherAppOwnershipChangesNode* UGetPublisherAppOwnershipChangesNode::STATIC_GetPublisherAppOwnershipChangesNode(const class FString& Key, const class FString& PackageRowVersion, const class FString& CDKeyRowVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPublisherAppOwnershipChangesNode.GetPublisherAppOwnershipChangesNode");
		
		UGetPublisherAppOwnershipChangesNode_GetPublisherAppOwnershipChangesNode_Params params {};
		params.Key = Key;
		params.PackageRowVersion = PackageRowVersion;
		params.CDKeyRowVersion = CDKeyRowVersion;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPublisherAppOwnershipChangesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPublisherAppOwnershipChangesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPublisherAppOwnershipChangesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUserGroupListNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUserGroupListNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserGroupListNode.OnRequestCompleted");
		
		UGetUserGroupListNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719870
	 * 		Name   -> Function UWorksWeb.GetUserGroupListNode.GetUserGroupListNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetUserGroupListNode* UGetUserGroupListNode::STATIC_GetUserGroupListNode(const class FString& Key, const struct FUWorksSteamID& SteamID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserGroupListNode.GetUserGroupListNode");
		
		UGetUserGroupListNode_GetUserGroupListNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUserGroupListNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUserGroupListNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUserGroupListNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GrantPackageNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGrantPackageNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GrantPackageNode.OnRequestCompleted");
		
		UGrantPackageNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719990
	 * 		Name   -> Function UWorksWeb.GrantPackageNode.GrantPackageNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PackageID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      IPAddress                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ThirdPartyKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ThirdPartyAppID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGrantPackageNode* UGrantPackageNode::STATIC_GrantPackageNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t PackageID, const class FString& IPAddress, const class FString& ThirdPartyKey, int32_t ThirdPartyAppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GrantPackageNode.GrantPackageNode");
		
		UGrantPackageNode_GrantPackageNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.PackageID = PackageID;
		params.IPAddress = IPAddress;
		params.ThirdPartyKey = ThirdPartyKey;
		params.ThirdPartyAppID = ThirdPartyAppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGrantPackageNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGrantPackageNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GrantPackageNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00719C30
	 * 		Name   -> Function UWorksWeb.ResolveVanityURLNode.ResolveVanityURLNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      VanityURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      URLType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UResolveVanityURLNode* UResolveVanityURLNode::STATIC_ResolveVanityURLNode(const class FString& Key, const class FString& VanityURL, unsigned char URLType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResolveVanityURLNode.ResolveVanityURLNode");
		
		UResolveVanityURLNode_ResolveVanityURLNode_Params params {};
		params.Key = Key;
		params.VanityURL = VanityURL;
		params.URLType = URLType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.ResolveVanityURLNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResolveVanityURLNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.ResolveVanityURLNode.OnRequestCompleted");
		
		UResolveVanityURLNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UResolveVanityURLNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResolveVanityURLNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.ResolveVanityURLNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.AuthenticateUserNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAuthenticateUserNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AuthenticateUserNode.OnRequestCompleted");
		
		UAuthenticateUserNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071A0D0
	 * 		Name   -> Function UWorksWeb.AuthenticateUserNode.AuthenticateUserNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              SessionKey                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              EncryptedLoginKey                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UAuthenticateUserNode* UAuthenticateUserNode::STATIC_AuthenticateUserNode(const struct FUWorksSteamID& SteamID, TArray<unsigned char> SessionKey, TArray<unsigned char> EncryptedLoginKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AuthenticateUserNode.AuthenticateUserNode");
		
		UAuthenticateUserNode_AuthenticateUserNode_Params params {};
		params.SteamID = SteamID;
		params.SessionKey = SessionKey;
		params.EncryptedLoginKey = EncryptedLoginKey;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAuthenticateUserNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAuthenticateUserNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.AuthenticateUserNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.AuthenticateUserTicketNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAuthenticateUserTicketNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AuthenticateUserTicketNode.OnRequestCompleted");
		
		UAuthenticateUserTicketNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071A260
	 * 		Name   -> Function UWorksWeb.AuthenticateUserTicketNode.AuthenticateUserTicketNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ticket                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAuthenticateUserTicketNode* UAuthenticateUserTicketNode::STATIC_AuthenticateUserTicketNode(const class FString& Key, int32_t AppID, const class FString& Ticket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.AuthenticateUserTicketNode.AuthenticateUserTicketNode");
		
		UAuthenticateUserTicketNode_AuthenticateUserTicketNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Ticket = Ticket;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAuthenticateUserTicketNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAuthenticateUserTicketNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.AuthenticateUserTicketNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetGlobalAchievementPercentagesForAppNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetGlobalAchievementPercentagesForAppNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGlobalAchievementPercentagesForAppNode.OnRequestCompleted");
		
		UGetGlobalAchievementPercentagesForAppNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071AE80
	 * 		Name   -> Function UWorksWeb.GetGlobalAchievementPercentagesForAppNode.GetGlobalAchievementPercentagesForAppNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FUWorksGameID                               GameID                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UGetGlobalAchievementPercentagesForAppNode* UGetGlobalAchievementPercentagesForAppNode::STATIC_GetGlobalAchievementPercentagesForAppNode(const struct FUWorksGameID& GameID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGlobalAchievementPercentagesForAppNode.GetGlobalAchievementPercentagesForAppNode");
		
		UGetGlobalAchievementPercentagesForAppNode_GetGlobalAchievementPercentagesForAppNode_Params params {};
		params.GameID = GameID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetGlobalAchievementPercentagesForAppNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetGlobalAchievementPercentagesForAppNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetGlobalAchievementPercentagesForAppNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetGlobalStatsForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetGlobalStatsForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGlobalStatsForGameNode.OnRequestCompleted");
		
		UGetGlobalStatsForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071AF00
	 * 		Name   -> Function UWorksWeb.GetGlobalStatsForGameNode.GetGlobalStatsForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StartDate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            EndDate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetGlobalStatsForGameNode* UGetGlobalStatsForGameNode::STATIC_GetGlobalStatsForGameNode(int32_t AppID, int32_t Count, TArray<class FString> Name, int32_t StartDate, int32_t EndDate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetGlobalStatsForGameNode.GetGlobalStatsForGameNode");
		
		UGetGlobalStatsForGameNode_GetGlobalStatsForGameNode_Params params {};
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.StartDate = StartDate;
		params.EndDate = EndDate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetGlobalStatsForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetGlobalStatsForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetGlobalStatsForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetNumberOfCurrentPlayersNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetNumberOfCurrentPlayersNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNumberOfCurrentPlayersNode.OnRequestCompleted");
		
		UGetNumberOfCurrentPlayersNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071B160
	 * 		Name   -> Function UWorksWeb.GetNumberOfCurrentPlayersNode.GetNumberOfCurrentPlayersNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetNumberOfCurrentPlayersNode* UGetNumberOfCurrentPlayersNode::STATIC_GetNumberOfCurrentPlayersNode(int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetNumberOfCurrentPlayersNode.GetNumberOfCurrentPlayersNode");
		
		UGetNumberOfCurrentPlayersNode_GetNumberOfCurrentPlayersNode_Params params {};
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetNumberOfCurrentPlayersNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetNumberOfCurrentPlayersNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetNumberOfCurrentPlayersNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetPlayerAchievementsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetPlayerAchievementsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerAchievementsNode.OnRequestCompleted");
		
		UGetPlayerAchievementsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071B1E0
	 * 		Name   -> Function UWorksWeb.GetPlayerAchievementsNode.GetPlayerAchievementsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetPlayerAchievementsNode* UGetPlayerAchievementsNode::STATIC_GetPlayerAchievementsNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetPlayerAchievementsNode.GetPlayerAchievementsNode");
		
		UGetPlayerAchievementsNode_GetPlayerAchievementsNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetPlayerAchievementsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetPlayerAchievementsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetPlayerAchievementsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetSchemaForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetSchemaForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSchemaForGameNode.OnRequestCompleted");
		
		UGetSchemaForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071B3C0
	 * 		Name   -> Function UWorksWeb.GetSchemaForGameNode.GetSchemaForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetSchemaForGameNode* UGetSchemaForGameNode::STATIC_GetSchemaForGameNode(const class FString& Key, int32_t AppID, const class FString& Language)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetSchemaForGameNode.GetSchemaForGameNode");
		
		UGetSchemaForGameNode_GetSchemaForGameNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Language = Language;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetSchemaForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetSchemaForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetSchemaForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetUserStatsForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetUserStatsForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserStatsForGameNode.OnRequestCompleted");
		
		UGetUserStatsForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071B560
	 * 		Name   -> Function UWorksWeb.GetUserStatsForGameNode.GetUserStatsForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetUserStatsForGameNode* UGetUserStatsForGameNode::STATIC_GetUserStatsForGameNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetUserStatsForGameNode.GetUserStatsForGameNode");
		
		UGetUserStatsForGameNode_GetUserStatsForGameNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetUserStatsForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetUserStatsForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetUserStatsForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071B6B0
	 * 		Name   -> Function UWorksWeb.SetUserStatsForGameNode.SetUserStatsForGameNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksSteamID                              SteamID                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Name                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    Value                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class USetUserStatsForGameNode* USetUserStatsForGameNode::STATIC_SetUserStatsForGameNode(const class FString& Key, const struct FUWorksSteamID& SteamID, int32_t AppID, int32_t Count, TArray<class FString> Name, TArray<int32_t> Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetUserStatsForGameNode.SetUserStatsForGameNode");
		
		USetUserStatsForGameNode_SetUserStatsForGameNode_Params params {};
		params.Key = Key;
		params.SteamID = SteamID;
		params.AppID = AppID;
		params.Count = Count;
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetUserStatsForGameNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetUserStatsForGameNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetUserStatsForGameNode.OnRequestCompleted");
		
		USetUserStatsForGameNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetUserStatsForGameNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetUserStatsForGameNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetUserStatsForGameNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071C4A0
	 * 		Name   -> Function UWorksWeb.SetItemPaymentRulesNode.SetItemPaymentRulesNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksAssociatedWorkshopFiles              AssociatedWorkshopFiles                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUWorksPartnerAccounts                      PartnerAccounts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bMakeWorkshopFilesSubscribable                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValidateOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USetItemPaymentRulesNode* USetItemPaymentRulesNode::STATIC_SetItemPaymentRulesNode(const class FString& Key, int32_t AppID, int32_t GameItemID, const struct FUWorksAssociatedWorkshopFiles& AssociatedWorkshopFiles, const struct FUWorksPartnerAccounts& PartnerAccounts, bool bMakeWorkshopFilesSubscribable, bool bValidateOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetItemPaymentRulesNode.SetItemPaymentRulesNode");
		
		USetItemPaymentRulesNode_SetItemPaymentRulesNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		params.AssociatedWorkshopFiles = AssociatedWorkshopFiles;
		params.PartnerAccounts = PartnerAccounts;
		params.bMakeWorkshopFilesSubscribable = bMakeWorkshopFilesSubscribable;
		params.bValidateOnly = bValidateOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.SetItemPaymentRulesNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USetItemPaymentRulesNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.SetItemPaymentRulesNode.OnRequestCompleted");
		
		USetItemPaymentRulesNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USetItemPaymentRulesNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USetItemPaymentRulesNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.SetItemPaymentRulesNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetFinalizedContributorsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetFinalizedContributorsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetFinalizedContributorsNode.OnRequestCompleted");
		
		UGetFinalizedContributorsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071C000
	 * 		Name   -> Function UWorksWeb.GetFinalizedContributorsNode.GetFinalizedContributorsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetFinalizedContributorsNode* UGetFinalizedContributorsNode::STATIC_GetFinalizedContributorsNode(const class FString& Key, int32_t AppID, int32_t GameItemID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetFinalizedContributorsNode.GetFinalizedContributorsNode");
		
		UGetFinalizedContributorsNode_GetFinalizedContributorsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.GameItemID = GameItemID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetFinalizedContributorsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetFinalizedContributorsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetFinalizedContributorsNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.GetItemDailyRevenueNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGetItemDailyRevenueNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetItemDailyRevenueNode.OnRequestCompleted");
		
		UGetItemDailyRevenueNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071C150
	 * 		Name   -> Function UWorksWeb.GetItemDailyRevenueNode.GetItemDailyRevenueNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      itemId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            DateEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGetItemDailyRevenueNode* UGetItemDailyRevenueNode::STATIC_GetItemDailyRevenueNode(const class FString& Key, int32_t AppID, const class FString& itemId, int32_t DateStart, int32_t DateEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.GetItemDailyRevenueNode.GetItemDailyRevenueNode");
		
		UGetItemDailyRevenueNode_GetItemDailyRevenueNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.itemId = itemId;
		params.DateStart = DateStart;
		params.DateEnd = DateEnd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGetItemDailyRevenueNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGetItemDailyRevenueNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.GetItemDailyRevenueNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0071C350
	 * 		Name   -> Function UWorksWeb.PopulateItemDescriptionsNode.PopulateItemDescriptionsNode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            AppID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUWorksLanguages                            Languages                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UPopulateItemDescriptionsNode* UPopulateItemDescriptionsNode::STATIC_PopulateItemDescriptionsNode(const class FString& Key, int32_t AppID, const struct FUWorksLanguages& Languages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.PopulateItemDescriptionsNode.PopulateItemDescriptionsNode");
		
		UPopulateItemDescriptionsNode_PopulateItemDescriptionsNode_Params params {};
		params.Key = Key;
		params.AppID = AppID;
		params.Languages = Languages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00623C90
	 * 		Name   -> Function UWorksWeb.PopulateItemDescriptionsNode.OnRequestCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Content                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPopulateItemDescriptionsNode::OnRequestCompleted(bool bSuccessful, const class FString& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function UWorksWeb.PopulateItemDescriptionsNode.OnRequestCompleted");
		
		UPopulateItemDescriptionsNode_OnRequestCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPopulateItemDescriptionsNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPopulateItemDescriptionsNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class UWorksWeb.PopulateItemDescriptionsNode");
		return ptr;
	}

}


